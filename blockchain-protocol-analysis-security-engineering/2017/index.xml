<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blockchain Protocol Analysis Security Engineering 2017 on ₿itcoin Transcripts</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/</link><description>Recent content in Blockchain Protocol Analysis Security Engineering 2017 on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 03 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/index.xml" rel="self" type="application/rss+xml"/><item><title>Scalable Smart Contracts Via Proofs And Single Use Seals</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/scalable-smart-contracts-via-proofs-and-single-use-seals/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/scalable-smart-contracts-via-proofs-and-single-use-seals/</guid><description>https://twitter.com/kanzure/status/957660108137418752
slides: https://cyber.stanford.edu/sites/default/files/petertodd.pdf
https://petertodd.org/2016/commitments-and-single-use-seals
https://petertodd.org/2016/closed-seal-sets-and-truth-lists-for-privacy
Introduction I am petertodd and I am here to break your blockchain. It&amp;rsquo;s kind of interesting following a talk like that, in some ways I&amp;rsquo;m going in a more extreme direcion for consensus. Do we actually need consensus at all? Can we make a more robust system by eliminating it to the maximum extent possible? I think for some use case at least I have some techniques that will let you go do this.</description></item><item><title>Security Analysis of the Lightning Network</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/lightning-network-security-analysis/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/lightning-network-security-analysis/</guid><description>https://twitter.com/kanzure/status/957978915515092992
slides: https://cyber.stanford.edu/sites/default/files/olaoluwaosuntokun.pdf
Introduction My name is Laolu Osuntokun and I work on lightning stuff. I go by roasbeef on the internet. I work at Lightning Labs. I am going to be giving an overview of some security properties and privacy properties of lightning.
State of the hash-lock Before I start, I want to go over the state of the hash-lock which is the current progress to completion and design of lightning.</description></item><item><title>Covenants - Structuring Multi Transaction Contracts in Bitcoin</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-jeremy-rubin-covenants/</link><pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-jeremy-rubin-covenants/</guid><description>Structuring Multi Transaction Contracts in Bitcoin
Location: BPASE 2017, Stanford University
Slides: https://rubin.io/public/pdfs/multi-txn-contracts.pdf
Intro Hey everyone. How is it going? Happy to be going last right now given that I had all these wonderful speakers before me to explain so much of what I am about to tell you. I’m going to talk to you today about structuring multi-transaction contracts in Bitcoin. I think there is a lot of great work that happens in Bitcoin at the script level, at the individual input and output.</description></item><item><title>Ivy: A Declarative Predicate Language for Smart Contracts</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-dan-robinson-ivy/</link><pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-dan-robinson-ivy/</guid><description>Intro Hi I’m Dan Robinson, I’m one of the Product Architects at Chain which is an enterprise blockchain infrastructure company for financial institutions. We have a full stack blockchain protocol and what I am going to talk about is part of that that also can be used for other applications including as I am going to demo here, make it easier to write scripts for Bitcoin Script.
Introduction: Two Blockchain Models To start out I want to talk about two blockchain models.</description></item><item><title>Post’s Theorem and Blockchain Languages: A Short Course in the Theory of Computation</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-russell-oconnor-posts-theorem/</link><pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-russell-oconnor-posts-theorem/</guid><description>Intro Hi. My name is Russell O’Connor. I am here to talk to you about Post’s theorem, the theory of computation and its applications to blockchain languages. There is a bit of a debate about whether Turing complete languages are appropriate or not for doing computations, whether the DAO fiasco is related to the Turing completeness problem or is it an unrelated issue? If we do go for non-Turing complete languages for our blockchains how much expressiveness are we losing?</description></item></channel></rss>
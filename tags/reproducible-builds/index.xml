<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reproducible builds on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/reproducible-builds/</link><description>Recent content in Reproducible builds on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 18 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/reproducible-builds/index.xml" rel="self" type="application/rss+xml"/><item><title>Why Open Source Matters For Bitcoin</title><link>https://btctranscripts.com/bitcoin-explained/why-open-source-matters-for-bitcoin/</link><pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/why-open-source-matters-for-bitcoin/</guid><description>&lt;p>In this episode of &amp;ldquo;The Van Wirdum Sjorsnado, &amp;quot; hosts Aaron van Wirdum and Sjors Provoost discussed why it matters that Bitcoin software is open source and why even open-source software doesn&amp;rsquo;t necessarily solve all software-specific trust issues.&lt;/p>
&lt;p>In theory, the fact that most Bitcoin nodes, wallets and applications are open source should ensure that developers can’t include malicious code in the programs: anyone can inspect the source code for malware. In practice, however, the number of people with enough expertise to do this is limited, while the reliance of some Bitcoin projects on external code libraries (“dependencies”) makes it even harder.&lt;/p>
&lt;p>Furthermore, even if the open-source code is sound, this doesn’t guarantee that the binaries (computer code) really correspond with the open-source code. Van Wirdum and Provoost explain how this risk is largely mitigated in Bitcoin through a process called Gitian building, where several Bitcoin Core developers sign the binaries if, and only if, they all produced the exact same binaries from the same source code. This requires special compiler software.&lt;/p>
&lt;p>Finally, the hosts discuss Guix, a relatively new project that goes above and beyond the Gitian process to minimize the level of trust required to turn source code into binaries — including trust in the compiler itself.&lt;/p></description></item><item><title>Reproducible Builds</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-11-30-carl-dong-reproducible-builds/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-11-30-carl-dong-reproducible-builds/</guid><description>Carl Dong’s presentation at Breaking Bitcoin 2019 on “Bitcoin Build System Security”: https://diyhpl.us/wiki/transcripts/breaking-bitcoin/2019/bitcoin-build-system/
Intro Adam Jonas (AJ): Welcome to the Chaincode podcast Carl.
Carl Dong (CD): Hello.
AJ: You know we’ve been doing this podcast for a while now. How come you haven’t been on the show yet?
CD: We’ve been at home.
AJ: We did a few episodes before that though.
Murch (M): It is fine. We’ve got you now.</description></item><item><title>Bitcoin Toolchain, Unit Testing And Deterministic Builds</title><link>https://btctranscripts.com/edgedevplusplus/2018/bitcoin-toolchain-unit-testing-and-deterministic-builds/</link><pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/bitcoin-toolchain-unit-testing-and-deterministic-builds/</guid><description>https://twitter.com/kanzure/status/1048103693885759489
Introduction Just to continue on what James said about the build system on Bitcoin Core&amp;hellip; I am going to talk about deterministic builds. I am MarcoFalke and I also work at Chaincode Labs in NYC.
Bitcoin Core Build System The build system is based on autotools, so it should just work anywhere where autotools runs. Just run ./autogen.sh ./configure and then make, that&amp;rsquo;s it.
We recently added support for MSVC builds mostly for Windows developers to do native builds not having to switch between Linux and Windows all the time.</description></item></channel></rss>
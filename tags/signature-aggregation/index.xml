<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>signature-aggregation on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/signature-aggregation/</link><description>Recent content in signature-aggregation on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 21 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/signature-aggregation/index.xml" rel="self" type="application/rss+xml"/><item><title>Signature Aggregation Update</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/signature-aggregation/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/signature-aggregation/</guid><description>The status of the Half-Agg BIP? TODOs but also no use cases upcoming so adding it to the BIP repo doesn&amp;rsquo;t seem useful
BIP Half-agg TODOs for BIP
Consider setting z_0 = 1
Reconsider maximum number of signatures
Add failing verification test vectors that exercise edge cases.
Add signing test vectors (passing and failing, including edge cases)
Test latest version of hacspec (run through checker)
Half-agg BIP has a max number of signatures (2^16), making testing easy</description></item><item><title>The Bitcoin Core wallet and wrangling bitcoin data</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-core-wallet-and-wrangling-bitcoin-data/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-core-wallet-and-wrangling-bitcoin-data/</guid><description>In this conversation, Adam Jonas and Mark Erhardt discuss their work with Josie Baker on Bitcoin data analysis, focusing on mempool data collection and Bitcoin Core wallet improvements. Josie explains his work in standardizing and cleaning mempool data to create a comprehensive, open-source dataset. This dataset will facilitate research and development in areas such as fee estimation and transaction propagation. They also delve into Bitcoin Core wallet enhancements, including privacy improvements and efficient coin selection methods. The conversation highlights the importance of reproducibility, empirical analysis, and open-source collaboration in advancing Bitcoin technology. Josie’s efforts emphasize the value of making Bitcoin data accessible and fostering a community of contributors in the Bitcoin development ecosystem.</description></item><item><title>Bellare-Neven</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03/2018-03-05-bellare-neven/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03/2018-03-05-bellare-neven/</guid><description>See also http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-06-signature-aggregation/
It&amp;rsquo;s been published, it&amp;rsquo;s been around for a decade, and it&amp;rsquo;s widely cited. In Bellare-Neven, it&amp;rsquo;s itself, it&amp;rsquo;s a multi-signature scheme which means multiple pubkeys and one message. You should treat the individual authorizations to spend inputs, as individual messages. What we need is an interactive aggregate signature scheme. Bellare-Neven&amp;rsquo;s paper suggests a trivial way of building an aggregate signature scheme out of a multisig scheme where interactively everyone signs everyone&amp;rsquo;s message.</description></item><item><title>Signature Aggregation</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09/2017-09-06-signature-aggregation/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09/2017-09-06-signature-aggregation/</guid><description>https://twitter.com/kanzure/status/907065194463072258
Sipa, can you sign and verify ECDSA signatures by hand? No. Over GF(43), maybe. Inverses could take a little bit to compute. Over GF(2).
I think the first thing we should talk about is some definitions. I&amp;rsquo;d like to start by distinguishing between three things: Key aggregation, signature aggregation, and batch validation. Multi-signature later.
There are three different problems. Key aggregation is where there are a number of people with each their own key, they want to produce a combined key that can only sign when they come together.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>timelocks on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/timelocks/</link><description>Recent content in timelocks on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 01 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/timelocks/index.xml" rel="self" type="application/rss+xml"/><item><title>Timelock-enabled safety and recovery use cases for Bitcoin users</title><link>https://btctranscripts.com/advancing-bitcoin/2023/timelock-enabled-safety-and-recovery-use-cases-for-bitcoin-users/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/advancing-bitcoin/2023/timelock-enabled-safety-and-recovery-use-cases-for-bitcoin-users/</guid><description>Introduction Can we give a round of applause for Kevin, and welcome him to the stage. Thank you. Alright, yeah, so I&amp;rsquo;m going to do a talk around Timelocks in Bitcoin. I&amp;rsquo;m going to start with a pretty quick introduction on the different types of Timelocks over time in Bitcoin, and where we&amp;rsquo;re at today. Also, a little bit, very, very quickly talking about what we&amp;rsquo;re using Timelocks for in Bitcoin today.</description></item><item><title>Coinjoin Done Right: the onchain offchain mix (and anti-Sybil with RIDDLE)</title><link>https://btctranscripts.com/bitcoinplusplus/onchain-privacy/coinjoin-done-right-the-onchain-offchain-mix-and-anti-sybil-with-riddles/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoinplusplus/onchain-privacy/coinjoin-done-right-the-onchain-offchain-mix-and-anti-sybil-with-riddles/</guid><description>NOTE: Slides of the talk can be found here
Introduction My name&amp;rsquo;s Adam Gibson, also known as waxwing on the internet. Though the title might suggest that I have the solution to the problem of implementing CoinJoin, it&amp;rsquo;s not exactly true. It&amp;rsquo;s a clickbait. I haven&amp;rsquo;t, but I suppose what I can say in a more serious way is that I&amp;rsquo;m proposing what I consider to be a meaningfully different alternative way of looking at the concept of CoinJoin and therefore at the concept of on-chain privacy because the conversation nowadays about on-chain privacy tends to be dominated by CoinJoin.</description></item><item><title>Taproot, Graftroot, Etc</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03/2018-03-06-taproot-graftroot-etc/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03/2018-03-06-taproot-graftroot-etc/</guid><description>https://twitter.com/kanzure/status/972468121046061056
graftroot The idea of graftroot is that in every contract there is a superset of people that can spend the money. This assumption is not always true but it&amp;rsquo;s almost always true. Say you want to lock up these coins for a year, without any conditionals to it, then it doesn&amp;rsquo;t work. But assume you have&amp;ndash; pubkey recovery? No&amp;hellip; pubkey recovery is inherently incompatible with any form of aggregation, and aggregation is far superior.</description></item><item><title>Comments And Observations About Timelocks Ron Rivest</title><link>https://btctranscripts.com/verifiable-delay-functions/vdf-day-2019/comments-and-observations-about-timelocks-ron-rivest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/verifiable-delay-functions/vdf-day-2019/comments-and-observations-about-timelocks-ron-rivest/</guid><description>Comments and observations about timelocks and verifiable delay functions
Introduction Welcome everybody. It&amp;rsquo;s not only about solving the puzzles, but the immense interest in verifiable delay functions. When setting up this conference, I hadn&amp;rsquo;t expected that. It&amp;rsquo;s hard to predict where technology will go or what things will be popular decades later when you work on something.
I am just going to review some of the basic stuff we did way back when, setting up a puzzle which was just recently solved by Simon and Bernard where&amp;rsquo;s Bernard.</description></item><item><title>Scriptless Scripts With Mimblewimble</title><link>https://btctranscripts.com/grincon/2019/scriptless-scripts-with-mimblewimble/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/grincon/2019/scriptless-scripts-with-mimblewimble/</guid><description>Scriptless scripts with mimblewimble
Andrew Poelstra (andytoshi)
Introduction Hi everyone. I am Andrew Poelstra. I am the research director at Blockstream. I want to talk about deploying scriptless scripts, wihch is something I haven&amp;rsquo;t talked much about over the past year or two.
History Let me give a bit of history about mimblewimble. As many of you know, this was dead-dropped anonymously in the middle of 2016 by someone named Tom Elvis Jedusor which is the French name for Voldemort.</description></item></channel></rss>
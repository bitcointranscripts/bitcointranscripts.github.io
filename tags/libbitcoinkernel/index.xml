<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>libbitcoinkernel on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/libbitcoinkernel/</link><description>Recent content in libbitcoinkernel on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 27 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/libbitcoinkernel/index.xml" rel="self" type="application/rss+xml"/><item><title>Libbitcoinkernel - outstanding questions</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2025-02/libbitcoinkernel/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2025-02/libbitcoinkernel/</guid><description>BlockManager, Chainstate, ChainstateManager Chainstate keeps their own CChain class for keeping track of their chain of blocks, which is basically just BlockIndex entries, and manages the UTXO set.
ChainstateManager is there to orchestrate interactions between BlockManager and Chainstate and facilitate AssumeUTXO&amp;rsquo;s multiple chainstates.
Currently, only ChainstateManager is exposed in kernel API. Should we instead expose structures that allows users to implement AssumeUTXO functionality by themselves? We could expose a Chainstate and Blockmanager to facilitate that.</description></item><item><title>Py-bitcoinkernel demo</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2025-02/py-bitcoinkernel/</link><pubDate>Wed, 26 Feb 2025 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2025-02/py-bitcoinkernel/</guid><description>Transcript No transcript of the conversation.
Demo The purpose of this demo was to showcase the py-bitcoinkernel Python libbitcoinkernel wrapper, with the specific focus on showing that this library makes it very low-barrier to explore and interact with the libbitcoinkernel interface. Specifically, on most platforms, the library can be installed from PyPI without dependencies, and basic interactions only take a few lines of code.
Wrapped demo The below script was demoed to show the &amp;ldquo;wrapped&amp;rdquo; version of the library.</description></item></channel></rss>
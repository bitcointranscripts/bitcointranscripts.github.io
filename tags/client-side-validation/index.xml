<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Client-side validation on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/client-side-validation/</link><description>Recent content in Client-side validation on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 26 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/client-side-validation/index.xml" rel="self" type="application/rss+xml"/><item><title>Cool Lightning Network Developments</title><link>https://btctranscripts.com/bitcoinology/2022-01-26-igor-korsakov-cool-ln-developments/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoinology/2022-01-26-igor-korsakov-cool-ln-developments/</guid><description>Synonym Igor Synonym is a company that John Carvalho started and he is trying to put Web3 inside of Bitcoin. But what it consists of? They&amp;rsquo;re using several things like identities and people hosting their own data.
AOPP For identity, the first thing I want to mention is Address Ownership Proof Protocol (AOPP). This is the field that we added in BlueWallet some months ago. I think it was a Switzerland exchange that wanted this, so they sent us a pull request and we merged it (PR#2915, PR#4431).</description></item><item><title>Progress on Scaling via Client-Side Validation</title><link>https://btctranscripts.com/scalingbitcoin/milan-2016/client-side-validation/</link><pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/milan-2016/client-side-validation/</guid><description>https://twitter.com/kanzure/status/785121442602029056
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/breaking-the-chain/
Let&amp;rsquo;s start with what isn&amp;rsquo;t client-side validation. I am going to call this the miner-side approach. Here&amp;rsquo;s some smart contract code. In this example, it&amp;rsquo;s Chronos which is a timestamping contract. What you have here is a contract that stores in ethereum state consensus some hashes as they are received, they are timestamped. And ultimately at some point in the future you could go and ask the ethereum state machine, you know, did you go and get this hash?</description></item></channel></rss>
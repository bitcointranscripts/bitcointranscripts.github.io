<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lightweight Client Support on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/lightweight-client/</link><description>Recent content in Lightweight Client Support on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 11 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/lightweight-client/index.xml" rel="self" type="application/rss+xml"/><item><title>Applying Private Information Retrieval to Lightweight Bitcoin Clients</title><link>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/private-information-retrieval/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/private-information-retrieval/</guid><description>SPV overview I have to thank the prior speaker. This is basically the same, except this time we&amp;rsquo;re not using SGX. We&amp;rsquo;re looking at bitcoin lightweight clients. You have a lite client with not much space not much computing power, can&amp;rsquo;t store the bitcoin blockchain. All it knows about is the header information. We assume it has the blockheader history. In the header, we can find the merkle tree, and given the merkle tree we can make a merkle proof that a given transaction is included in a block.</description></item><item><title>Limitations of Lightweight Clients</title><link>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-26-fabrice-drouin-limitations-of-lightweight-clients/</link><pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-26-fabrice-drouin-limitations-of-lightweight-clients/</guid><description>Location: Chaincode Labs Lightning Residency 2019
Introduction The limitations it&amp;rsquo;s uh you have to fight when you want to build lightweight clients mobile clients so this again, this is how mobile clients work, you scan payment requests, you have a view of the network that is supposed to be good enough, you compute the routes, you get an HTLC, you get a preimage back you&amp;rsquo;ve paid.
So a Lightning node is a Bitcoin node, as in, you have to be able to create, sign, and send Bitcoin transactions on the Bitcoin network.</description></item><item><title>Security Models</title><link>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-17-john-newbery-security-models/</link><pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-17-john-newbery-security-models/</guid><description>Topic: Security Models
Location: Chaincode Labs 2019 Residency
Slides: https://residency.chaincode.com/presentations/bitcoin/security_models.pdf
Intro John Newbery: Alright, Security Models. This is going to be like a quick whistle-stop tour of various things, very high-level view. I&amp;rsquo;m going to start by giving you some kind of framework to think about things. So in cryptography, we often talk about security proofs in terms of existing schemes, we talk about assumptions.
So, for example&amp;hellip; If you can break new scheme B, then you&amp;rsquo;ll also be able to break old scheme A.</description></item><item><title>Improving SPV Client Validation and Security with Fraud Proofs</title><link>https://btctranscripts.com/scalingbitcoin/tokyo-2018/fraud-proofs/</link><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tokyo-2018/fraud-proofs/</guid><description>paper: https://arxiv.org/pdf/1809.09044.pdf
https://twitter.com/kanzure/status/1048446183004233731
Introduction I am going to be talking about fraud proofs. It allows lite clients to have a leve lof security of almost the level of a full node. Before I describe fraud proofs, how about we talk about motivations.
Motivations There&amp;rsquo;s a large tradeoff between blockchain decentralization and how much on-chain throughput you can get. The more transactions you have on the chain, the more resources you need to validate the chain.</description></item><item><title>Current And Future State Of Wallets</title><link>https://btctranscripts.com/building-on-bitcoin/2018/current-and-future-state-of-wallets/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/building-on-bitcoin/2018/current-and-future-state-of-wallets/</guid><description>https://twitter.com/kanzure/status/1014127893495021568
Introduction I started to contribute to Bitcoin Core about 5 years ago. Since then, I have managed to get 450 commits merged. I am also the co-founder of a wallet hardware company based in Switzerland called Shift+ Cryptocurrency.
Wallets is not rocket science. It&amp;rsquo;s mostly about pointing the figure to things that we can do better. I prepared a lot of content.
Privacy, security and trust When I look at existing wallets, I see the triangle of privacy, security and trust.</description></item><item><title>Light Clients During 2017 Interfork Period</title><link>https://btctranscripts.com/breaking-bitcoin/2017/light-clients-during-2017-interfork-period/</link><pubDate>Sat, 09 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/breaking-bitcoin/2017/light-clients-during-2017-interfork-period/</guid><description>https://twitter.com/kanzure/status/1005617123287289857
Next up is Thomas.
Introduction Alright. Hello everyone. Thank you for having me. I&amp;rsquo;m the developer of the Electrum wallet. I started this project in 2011. I&amp;rsquo;m going to talk about lite clients and the implication of the 2017 hard-fork. We might be in the middle of two forks at the moment.
So we have segwit and we are very happy about that. ((applause)) This graph was taken from Pieter Wuille&amp;rsquo;s website.</description></item><item><title>A Tale of Two Trees: One Writes, and Other Reads, Scaling Oblivious Accesses to Large-Scale Blockchains</title><link>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/scaling-oblivious-read-write/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/scaling-oblivious-read-write/</guid><description>Introduction We are trying to get optimized oblivious accesses to large-scale blockchains. This is collaborative work with our colleagues.
Motivation As we all know, bitfcoin data has become too large to store in resource-constrained devices. It&amp;rsquo;s like 240 GB. The current solution today is bip37 + Nakamoto&amp;rsquo;s idea for simplified payment verification (SPV) clients which don&amp;rsquo;t run the bitcoin network rules. Resource-constrained clients (thin clients) have to rely on other potentially malicious full clients to obtain transaction information.</description></item><item><title>Flyclient: Super Light Client For Cryptocurrencies</title><link>https://btctranscripts.com/scalingbitcoin/stanford-2017/flyclient-super-light-clients-for-cryptocurrencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/stanford-2017/flyclient-super-light-clients-for-cryptocurrencies/</guid><description>As you know, the blockchain is a chain because each block connects to the previous block through these hashes. In the header of each block is a commitment to all the transactions. It&amp;rsquo;s using this merkle hash tree where at each level the parent node hashes to the children and this gives you some nice properties which I will talk about later. I need to check consistency though. The first thing I need to check is that the transactions don&amp;rsquo;t spend more than they have&amp;hellip; then I need to check that the tree was onstructed correctly.</description></item><item><title>Fraud Proofs and Modularized Validation</title><link>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/fraud-proofs-petertodd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/fraud-proofs-petertodd/</guid><description>In Bitcoin we have made this tradeoff where we don&amp;rsquo;t have everyone running full nodes. Not everyone is participating equally. If you have a full node, you have lots of gigs of hard drive space, but if you do that, you only get a few transactions per second. Modularizing validation an argument for this is how to improve on this situation.
What&amp;rsquo;s the problem we are trying to solve? This is a real screenshot from one of the Android wallets.</description></item><item><title>Future of SPV Technology</title><link>https://btctranscripts.com/scalingbitcoin/montreal-2015/future-of-spv-tech/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/montreal-2015/future-of-spv-tech/</guid><description>https://docs.google.com/document/d/1t0bSZj5b66xBdW7xrjHlcvfqYAbTaQDB4-_T0Jvs3T4/edit#heading=h.5lm45oa6kuri
issues with current SPV wallets
Existing clients and their status
bitcoinj electrum ** they are doing SPV proofs ** bloom filters utxo commitments need to get in need to pick which type of utxo commitments
Number of nodes to connect to for more SPV clients
1 header from each peer to verify that we are all getting the same thing what block does each peer think is the best? very cheap to poll a huge number of peers</description></item></channel></rss>
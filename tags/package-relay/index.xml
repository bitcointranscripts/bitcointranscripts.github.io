<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Package relay on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/package-relay/</link><description>Recent content in Package relay on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 20 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/package-relay/index.xml" rel="self" type="application/rss+xml"/><item><title>Package Relay Planning</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/package-relay-planning/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/package-relay-planning/</guid><description>Package Relay Planning What can we do better, keep doing?
This is all the work that needs to be done for package relay -&amp;gt; big chart
Left part is mempool validation stuff. It’s how we decide if we put transactions in the mempool after receiving them “somehow”.
Right is peer to peer stuff
Current master is accepting parents-and-child packages(every tx but last must be a parent of child), one by one, then all at the same time.</description></item><item><title>Package Relay Primer</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-25-package-relay-primer/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-25-package-relay-primer/</guid><description>Slides: https://docs.google.com/presentation/d/12YPlmmaCiNNL83b3FDmYwa7FKHP7yD0krzkEzM-tkTM
Problems CPFP Doesn’t Work When Mempool Min Feerate Rises Bad for users who want to use CPFP and L2s, but also a glaring limitation in our ability to assess transaction incentive compatibility
Pinning being able to feebump transaction is a pinning concern counterpart can intentionally censor your transactions, and in L2 that can mean stealing your money because you didn’t meet the timelock Pinning examples ANYONECANPAY -&amp;gt; anyonecanpin: add input that comes from huge unconfirmed low-fee rate tx -&amp;gt; absolute feerate needs to increase, so you&amp;rsquo;re paying more fees for the tx to confirm slower shared descendant limit can be monopolized descendant limit is 25 txs, so someone else can fill up that limit we have a carve-out for CPFP already to try and mitigate that RBF Rule 3 is gameable replacement fees must &amp;gt; all descendants, and they may be large, low feerate -&amp;gt; expensive most L2s have pinning problems, so we need to fix that Get rid of txid-based relay we want to avoid txid based relay can&amp;rsquo;t deduplicate txid and wtxid that correspond to the same tx can&amp;rsquo;t deduplicate txs that only differ in witness we still require txid-based relay for orphans, because txs specify prevouts by txid -&amp;gt; so we don&amp;rsquo;t know which wtxid to request Definitions pinning attack: a censorship attack on relay/mempool level, abusing policy</description></item><item><title>SIGHASH_ANYPREVOUT, ephemeral anchors and LN symmetry (ELTOO)</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/sighash-anyprevout-ephemeral-anchors-and-ln-symmetry-eltoo/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/sighash-anyprevout-ephemeral-anchors-and-ln-symmetry-eltoo/</guid><description>Greg Sanders joins us to discuss ANYPREVOUT, ephemeral anchors and LN symmetry (a.k.a. ELTOO).</description></item><item><title>Package Relay BIP, implementation, V3, and package RBF proposals</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-package-relay/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-package-relay/</guid><description>Notes on Package Relay BIP, implementation, V3, and package RBF proposals from Core Dev in Atlanta.
Also at https://gist.github.com/glozow/8469dc9c3a003c7046033a92dd504329.
Ancestor Package Relay BIP BIP updated to be receiver-initiated ancestor packages only. Sender-initiated vs receiver-initiated package relay. Receiver-intiated package relay enables a node to ask for more information when they suspect they are missing something (i.e. to resolve orphans). Sender-initiated package relay should, theoretically, save a round trip by notifying the receiver ahead of time that &amp;ldquo;hey, this is going to be a package, so make sure you download and submit these transactions together.</description></item><item><title>Package Relay</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/package-relay/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/package-relay/</guid><description>Gloria Zhao sits down with us to discuss her package relay proposal and what it is like as a relative newcomer to propose a big change.</description></item><item><title>Sydney Socratic Seminar</title><link>https://btctranscripts.com/sydney-bitcoin-meetup/2021-11-02-socratic-seminar/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/sydney-bitcoin-meetup/2021-11-02-socratic-seminar/</guid><description>Name: Socratic Seminar
Topic: Package relay
Location: Bitcoin Sydney (online)
Video: No video posted online
The conversation has been anonymized by default to protect the identities of the participants. Those who have expressed a preference for their comments to be attributed are attributed. If you were a participant and would like your comments to be attributed please get in touch.
Agenda: https://github.com/bitcoin-sydney/socratic/blob/master/README.md#2021-11
Package Mempool Accept and Package RBF: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-September/019464.html
With illustrations: https://gist.</description></item><item><title>Chaincode Decoded: Mempool</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/chaincode-decoded-mempool/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/chaincode-decoded-mempool/</guid><description>The Chaincode Decoded segment returns and we jump into the deep end of the mempool.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scripts and Addresses on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/scripts-addresses/</link><description>Recent content in Scripts and Addresses on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 31 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/scripts-addresses/index.xml" rel="self" type="application/rss+xml"/><item><title>SLP455 Anant Tapadia - Single Sig or Multi Sig?</title><link>https://btctranscripts.com/stephan-livera-podcast/slp455-anant-tapadia-single-sig-or-multi-sig/</link><pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/stephan-livera-podcast/slp455-anant-tapadia-single-sig-or-multi-sig/</guid><description>Stephan 00:00:00:
Anant, welcome back to the show.
Anant 00:02:38:
Hey Stephan, thanks for having me again.
Stephan 00:02:40:
So there&amp;rsquo;s been a lot going on. I think the conversation around learning to self custody is always an important one. It&amp;rsquo;s always one that&amp;rsquo;s very fresh on my mind as well. And so we&amp;rsquo;re seeing a lot of discussion. And I think recently, of course, there was the news about Luke Dash-jr losing his coins, I think, I don&amp;rsquo;t know exactly how many, but probably something in the range of 200 bitcoins, so a serious amount of coin.</description></item><item><title>OP_RETURN</title><link>https://btctranscripts.com/bitcoin-explained/op_return/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/op_return/</guid><description>Intro Aaron van Wirdum: 00:00:19
Live from Utrecht, this is Bitcoin Explained. Hey Sjors.
Sjors Provoost: 00:00:24
What&amp;rsquo;s up?
Aaron van Wirdum: 00:00:25
How exciting. Two weeks ago you told me that maybe you would go to Bitcoin Amsterdam.
Sjors Provoost: 00:00:31
Yes.
Aaron van Wirdum: 00:00:31
And now you&amp;rsquo;re a speaker.
Sjors Provoost: 00:00:33
I&amp;rsquo;m a panelist, probably not a real speaker.
Aaron van Wirdum: 00:00:37
That counts that that&amp;rsquo;s a speaker in my book Sjors.</description></item><item><title>Bitcoin R&amp;D Panel</title><link>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2022/bitcoin-randd-panel/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2022/bitcoin-randd-panel/</guid><description>Ayush: 00:00:07
My name is Ayush Khandelwal. I am a software engineer at Google. I run a tech crypto-focused podcast on the side. And I have some amazing guests with me. So if you want to introduce yourself, what do you work on? And yeah, just get us started.
Jeremy: 00:00:31
I am Jeremy Rubin. I am a class of 2016 MIT alumni, so it&amp;rsquo;s good to be back on campus.</description></item><item><title>Explaining Bitcoin Addresses</title><link>https://btctranscripts.com/bitcoin-explained/explaining-bitcoin-addresses/</link><pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/explaining-bitcoin-addresses/</guid><description>Aaron van Wirdum: 00:01:45
Live from Utrecht this is the Van Wirdum Sjorsnado. So the other day I wanted to send Bitcoin to someone, but I didn&amp;rsquo;t.
Sjors Provoost: 00:01:52
Why? Shouldn&amp;rsquo;t you hodl?
Aaron van Wirdum: 00:01:55
I hodl all I can, but sometimes I need to eat, or I need to pay my rent, or I need to buy a new plant for my living room.
Sjors Provoost: 00:02:05</description></item><item><title>Bitcoin Script: Past and Future</title><link>https://btctranscripts.com/misc/2020-04-08-john-newbery-contracts-in-bitcoin/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/misc/2020-04-08-john-newbery-contracts-in-bitcoin/</guid><description>Location: She256 Onboarding to Bitcoin Webinar
Introduction John: My name is John. I am a Bitcoin Protocol Engineer at Chaincode Labs in New York. I&amp;rsquo;m going to talk about contracts a little bit from a theoretical perspective, but I&amp;rsquo;m not a lawyer, and I&amp;rsquo;m not a legal scholar. For all of you legally minded people out there, I apologize in advance if I gobble this and say some nonsense.
Before I do that, I&amp;rsquo;m going to tell you a story and the story based on this picture.</description></item><item><title>P2PKH, P2WPKH, P2SH, P2WSH</title><link>https://btctranscripts.com/edgedevplusplus/2018/p2pkh-p2wpkh-p2h-p2wsh/</link><pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/p2pkh-p2wpkh-p2h-p2wsh/</guid><description>https://twitter.com/kanzure/status/1047697572444270592
Introduction This is going to be a bit of a re-tread I think. I am going to be talking about common bitcoin script templates used in bitcoin today.
Addresses do not exist on the blockchain. But scripts do. You&amp;rsquo;ve heard about p2pk, p2pkh, p2sh, and others. I&amp;rsquo;m going to go over these anyway.
Pay-to-pubkey (p2pk) This was the first type. It had no address format actually. Nodes connected to each other over IP address, with no authentication.</description></item><item><title>Scripts (general &amp; simple)</title><link>https://btctranscripts.com/edgedevplusplus/2018/scripts-general-and-simple/</link><pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/scripts-general-and-simple/</guid><description>https://twitter.com/kanzure/status/1047679223115083777
Introduction I am going to talk about why we have scripts in bitcoin. I&amp;rsquo;ll give some examples and the design philosophy. I am not going to talk about the semantics of bitcoin script, though. Why do we have bitcoin script? I&amp;rsquo;ll show how to lock and unlock coins. I&amp;rsquo;ll talk about pay-to-pubkey, multisig, and computing vs verification in the blockchain.
Why have script at all? In my first talk, I talked about digital signatures to transfer coins from one person to another.</description></item><item><title>Working on Scripts with logical opcodes</title><link>https://btctranscripts.com/building-on-bitcoin/2018/working-on-scripts/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/building-on-bitcoin/2018/working-on-scripts/</guid><description>https://twitter.com/kanzure/status/1014167120417091584
Bitcoin has logical opcodes in bitcoin script. Depending on whose is trying to spend coins or what information they have, they interact with logical opcodes. We could see a simple example here taken from one of the lightning network commitment transcraction scripts. It pushes a key on to the stack so that a checksig can run later. It adds a relative timelock as well. Two people can interact with that script and we can set different constraints on those.</description></item><item><title>Bitcoin Script 2.0 And Strengthened Payment Channels</title><link>https://btctranscripts.com/scalingbitcoin/stanford-2017/bitcoin-script-v2.0-and-strengthened-payment-channels/</link><pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/stanford-2017/bitcoin-script-v2.0-and-strengthened-payment-channels/</guid><description>This is a brief history of bitcoin script evolution. Since bitcoin was active in 2009, there was a lot of emergency fixes for the first 2 years done by Satoshi. He found that people could skpi the signature check using OP_RETURN and malformed scriptSigs. So those functions were removed. OP_VER and OP_VERIF were intended for script upgrades but it was found that after every release of bitcoin, it would become a hard-fork because of the design.</description></item><item><title>Advanced Bitcoin Scripting</title><link>https://btctranscripts.com/sf-bitcoin-meetup/2017-04-03-andreas-antonopoulos-bitcoin-scripting/</link><pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/sf-bitcoin-meetup/2017-04-03-andreas-antonopoulos-bitcoin-scripting/</guid><description>Mastering Bitcoin on GitHub: https://github.com/bitcoinbook/bitcoinbook
Intro Today’s talk is different from some of the other talks I’ve done so bear with me. We are going to do this slowly in a very casual manner. This is not one of my usual talks where I am going to tell you about big picture vision and stuff like that. What I want to do is talk about some interesting features of Bitcoin Script and explain them.</description></item><item><title>The evolution of bitcoin scripting</title><link>https://btctranscripts.com/scalingbitcoin/tokyo-2018/bitcoin-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tokyo-2018/bitcoin-script/</guid><description>Agenda opcodes OP_CHECKSIGFROMSTACK sighash flags keytree sigs MAST graftroot, taproot covenants, reverse covenants (input restrictions: this input has to be spent with tihs other input, or can only be spent if this other one doesn&amp;rsquo;t exist) stack manipulation script languages (simplicity) tx formats, serialization? what would we change with hard-fork changes to the transaction format? Segwit transaction encoding format sucks; the witnesses are at the end and inline with all the scriptsigs and that should be changed.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AssumeUTXO on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/assumeutxo/</link><description>Recent content in AssumeUTXO on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/assumeutxo/index.xml" rel="self" type="application/rss+xml"/><item><title>assumeUTXO Mainnet Readiness</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/assumeutxo-mainnet-readiness/</link><pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/assumeutxo-mainnet-readiness/</guid><description>Conceptual discussion about the point raised by Sjors in the Tracking issue: https://github.com/bitcoin/bitcoin/issues/29616#issuecomment-1988390944 The outcome is pretty much the same as in the issue: Some people think it’s better to keep the params, and the rest agree that at least it’s better to keep them for now A perspective on the options: With the params, it puts more responsibility (and potentially pressure) on the maintainers, if they are removed the users have to do much more due diligence which snapshot is ok to use.</description></item><item><title>AssumeUTXO Update</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/assumeutxo-update/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/assumeutxo-update/</guid><description>One remaining PR
#27596 Adds loadtxoutset and getchainstate RPC, documentation, scripts, tests Adds critical functionality needed for assumeutxo validation to work: net processing updates, validation interface updates, verifydb bugfix, cache rebalancing Makes other improvements so pruning, indexing, -reindex features are compatible with assumeutxo and work nicely Adds hardcoded assumeutxo hash at height 788,000 Probably this should be moved to separate PR? Questions about initial next steps (unanswered):
Which release is this PR targeted for?</description></item><item><title>AssumeUTXO update</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-27-assumeutxo/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-27-assumeutxo/</guid><description>Goals allow nodes to get a utxo set quickly (1h) at the same time, no major security concessions Approach Provide serialized utxo snapshot get headers chain first, load snapshot and deserialize, sync to tip from that then start background verification with a 2nd snapshot finally, compare hashes when background IBD hits snapshot base Progress update lots of refactoring has been done; ChainStateManager was introduced, globals removed, mempool / blockstorage refactored init / shutdown logic changes have been merged wallet changes done p2p changes still under review (i.</description></item><item><title>Socratic Seminar - AssumeUTXO</title><link>https://btctranscripts.com/london-bitcoin-devs/2021-11-02-socratic-seminar-assumeutxo/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2021-11-02-socratic-seminar-assumeutxo/</guid><description>Reading list: https://gist.github.com/michaelfolkson/f46a7085af59b2e7b9a79047155c3993
Intros Michael Folkson (MF): This is a discussion on AssumeUTXO. We are lucky to have James O’Beirne on the call. There is a reading list that I will share in a second with a bunch of links going right from concept, some of the podcasts James has done, a couple of presentations James has done. And then towards the end hopefully we will get pretty technical and in the weeds of some of the current, past and future PRs.</description></item><item><title>Sync Bitcoin Faster! Assume UTXO</title><link>https://btctranscripts.com/bitcoin-explained/sync-bitcoin-faster-assume-utxo/</link><pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/sync-bitcoin-faster-assume-utxo/</guid><description>&lt;p>On this episode of The Van Wirdum Sjorsnado, Aaron and Sjors discuss “Assume UTXO,” a proposal and project by Chaincode Labs alumnus James O’Beirne.&lt;/p>
&lt;p>One of the biggest, if not the biggest, bottlenecks for scaling Bitcoin is initial block download: the time it takes for a Bitcoin node to synchronize with the Bitcoin network, as it needs to process all historic transactions and blocks in order to construct the latest UTXO-set: the current state of bitcoin-ownership.&lt;/p>
&lt;p>Aaron and Sjors explain some of the ways sync-time has been sped up over time. First, sync-time was improved through “Headers First” synchronization, which ensures that new Bitcoin nodes don’t waste time validating (potentially) weaker blockchains. In recent years, sync-time has been improved with “Assume Valid,” an optional shortcut that lets nodes skip signature verification of older transactions, instead trusting that the Bitcoin Core development process in combination with the resource-expensive nature of mining offers a reliable version of transaction history.&lt;/p>
&lt;p>Finally, they explain how the security assumptions underpinning Assume Valid could be extended to allow for the potential future upgrade Assume UTXO to offer new Bitcoin Core users a speedy solution to get up to speed with the Bitcoin network, sacrificing a minimal amount of security during the initial bootstrapping phase.&lt;/p></description></item><item><title>AssumeUTXO</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/assumeutxo/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/assumeutxo/</guid><description>Next in the studio, we caught James O&amp;rsquo;Beirne, who until recently was a co-worker of ours at Chaincode. We talked to James about his experience at the Chaincode residency, his most recent project AssumeUTXO and how he champions and effects change in Bitcoin Core.</description></item><item><title>AssumeUTXO</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06/2019-06-07-assumeutxo/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06/2019-06-07-assumeutxo/</guid><description>https://twitter.com/kanzure/status/1137008648620838912
Why assumeutxo assumeutxo is a spiritual continuation of assumevalid. Why do we want to do this in the first place? At the moment, it takes hours and days to do initial block download. Various projects in the community have been implementing meassures to speed this up. Casa I think bundles datadir with their nodes. Other projects like btcpay have various ways of bundling this up and signing things with gpg keys and these solutions are not quite half-baked but they are probably not desirable either.</description></item></channel></rss>
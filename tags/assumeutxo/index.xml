<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>assumeutxo on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/assumeutxo/</link><description>Recent content in assumeutxo on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 20 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/assumeutxo/index.xml" rel="self" type="application/rss+xml"/><item><title>AssumeUTXO Update</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/assumeutxo-update/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/assumeutxo-update/</guid><description>One remaining PR
#27596 Adds loadtxoutset and getchainstate RPC, documentation, scripts, tests Adds critical functionality needed for assumeutxo validation to work: net processing updates, validation interface updates, verifydb bugfix, cache rebalancing Makes other improvements so pruning, indexing, -reindex features are compatible with assumeutxo and work nicely Adds hardcoded assumeutxo hash at height 788,000 Probably this should be moved to separate PR? Questions about initial next steps (unanswered):
Which release is this PR targeted for?</description></item><item><title>AssumeUTXO update</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-27-assumeutxo/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-27-assumeutxo/</guid><description>Goals allow nodes to get a utxo set quickly (1h) at the same time, no major security concessions Approach Provide serialized utxo snapshot get headers chain first, load snapshot and deserialize, sync to tip from that then start background verification with a 2nd snapshot finally, compare hashes when background IBD hits snapshot base Progress update lots of refactoring has been done; ChainStateManager was introduced, globals removed, mempool / blockstorage refactored init / shutdown logic changes have been merged wallet changes done p2p changes still under review (i.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Silent payments on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/silent-payments/</link><description>Recent content in Silent payments on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 07 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/silent-payments/index.xml" rel="self" type="application/rss+xml"/><item><title>Silent Payments part 2</title><link>https://btctranscripts.com/bitcoin-explained/silent-payments-part-2/</link><pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/silent-payments-part-2/</guid><description>In this episode of Bitcoin, Explained, Aaron and Sjors welcome Ruben Somsen and Josie to the show to discuss BIP 352, their now-finalized Bitcoin Improvement Proposal for Silent Payments.</description></item><item><title>Silent Payment Descriptors</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/silent-payment-descriptors/</link><pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/silent-payment-descriptors/</guid><description>Silent payments properties:
two ECDH with each scan key cost of scanning increases with number of scan keys multiple address = tweak spend key with label We wouldn’t wanna flip that because then the spend key would be common, reducing anonymity and adding extra scanning work
BIP352 recommends NOT using with xpubs, it’s really difficult to have same public key with different chain codes.
Use case question: with silent payments, let&amp;rsquo;s say I make a legacy wallet and want to use one of my existing pubkeys and just combine it with a scan key, is that something that someone could make up.</description></item><item><title>Silent Payments Libsecp Module</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/silent-payments-libsecp/</link><pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/silent-payments-libsecp/</guid><description>High level vs low level API:
Low level API could be more useful for multi-party SP implementation High level API is safer as it avoid managing SP state and staging secret data Rough consensus that high level API is preferable Responsibility of grouping and sorting recipients by scan key. Client vs library?
We need to assert grouping in the lib anyway to avoid catastrophic failure So it just makes sense for the lib to take care of the grouping Why we need grouping in the first place?</description></item><item><title>Silent Payments</title><link>https://btctranscripts.com/bitcoin-design/learning-bitcoin-and-design/silent-payments/</link><pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-design/learning-bitcoin-and-design/silent-payments/</guid><description>Silent payments are introduced as a method to enhance Bitcoin transactions&amp;rsquo; privacy and usability by addressing the issue of address reuse. Unlike traditional methods, silent payments use elliptic curve Diffie-Hellman (ECDH) to generate unique addresses for each transaction without interaction. This preserves user privacy and simplifies the process. Josibake explains the design rationale, technical challenges, and implementation strategies. He emphasizes the need for widespread adoption of sending capabilities and highlights the potential applications in exchanges and other services. The discussion also covers the trade-offs between privacy and computational overhead, proposing solutions to ensure efficient implementation and user education.</description></item><item><title>Silent Payments</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-26-silent-payments/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-26-silent-payments/</guid><description>BIP Overview Scanning key and spending key are different: better security. Silent payment transactions are indistinguishable from transactions with taproot outputs on-chain.
Q: Address labeling, why not create two silent payment addresses?
A: It doubles scanning costs.
Limited to taproot UTXOs (currently about 3% of transactions) but when it increases we should find ways to optimize scanning, even though it currently does not seem to be an issue.
Q: Why no P2PK</description></item><item><title>Silent Payments and Alternatives</title><link>https://btctranscripts.com/tabconf/2022/2022-10-15-silent-payments/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2022/2022-10-15-silent-payments/</guid><description>Introduction I will talk about silent payments but also in general the design space around what kind of constructs you can have to pay people in a non-interactive way. In the bitcoin world, there are a couple common ways of paying someone. Making a payment is such a basic thing. &amp;hellip; The alternative we have is that you can generate a single address and put it in your twitter profile and everyone can pay you, but that&amp;rsquo;s not private.</description></item><item><title>Silent Payments</title><link>https://btctranscripts.com/bitcoin-explained/silent-payments/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/silent-payments/</guid><description>&lt;p>In this episode of Bitcoin, Explained, hosts Aaron van Wirdum and Sjors Provoost welcome Ruben Somsen back on the show to talk about a recent proposal of his called “Silent Payments”.&lt;/p>
&lt;p>Silent Payments resemble earlier ideas like Stealth Addresses and Reusable Payment Codes, in that they allow users to publish a static “address”, while this is not the actual Bitcoin address they will be paid on. Instead, senders of a transaction can use this static address to generate new Bitcoin addresses for the recipient, for which the recipient — and only the recipient — can in turn generate the corresponding private keys.&lt;/p>
&lt;p>Like Stealth Addresses and Reusable Payment Codes, the benefit of Silent Payments is that addresses can be posted publicly without harming users’ privacy; snoops cannot link the publicly posted address to the actual Bitcoin addresses that the recipient is paid on. Meanwhile, unlike Stealth Addresses and Reusable Payment Codes, Silent Payments do not require any additional blockchain data— though this does come at a computational cost for the recipient.&lt;/p>
&lt;p>The podcast episode details all this in roughly two parts. In the first half of the episode, Ruben, Aaron and Sjors break down how Silent Payments work, and in the second half of the episode they discuss how Silent Payments compare to Stealth Addresses and Reusable Payment Codes, as well as some potential implementation issues.&lt;/p></description></item><item><title>Accounts for Bitcoin, Easypaysy!</title><link>https://btctranscripts.com/bitcoin-explained/accounts-for-bitcoin-easypaysy/</link><pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/accounts-for-bitcoin-easypaysy/</guid><description>In this episode Sjors and Aaron discuss Jose Femenias&amp;rsquo; Easypaysy proposal, an account system for Bitcoin, on Bitcoin</description></item></channel></rss>
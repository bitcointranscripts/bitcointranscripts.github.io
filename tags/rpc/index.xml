<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rpc on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/rpc/</link><description>Recent content in rpc on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 16 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/rpc/index.xml" rel="self" type="application/rss+xml"/><item><title>RPC Discussion</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-10/rpc-discussion/</link><pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-10/rpc-discussion/</guid><description>Spec Issue: https://github.com/bitcoin/bitcoin/issues/29912
Core Lightning is using JSON-schema to generate a lot of stuff, should see if we can replicate that for our RPC interface. Enables generating Rust client bindings, Golang, JavaScript?&amp;hellip;
Having generated client code could help decrease maintained code in bitcoin CLI, like special handling of non-string args.
Exact currency units should be defined in the schema to avoid past confusion. Still some concerns over more complex units like BTC/KvB and sats/vB.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>stratum-v2 on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/stratum-v2/</link><description>Recent content in stratum-v2 on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 17 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/stratum-v2/index.xml" rel="self" type="application/rss+xml"/><item><title>Stratum V2</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-10/stratumv2/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-10/stratumv2/</guid><description>Overall question: Do we include it in Bitcoin Core or do we have it maintained separately as an IPC mining interface (multi-process approach)?
Pros of including in Core:
Would be exposed to a higher level of review and so the code itself would likely end up being of higher quality Would possibly be easier for new miners to enter the space if it’s simply included in the bitcoin core binary (vs two binaries) Cons:</description></item><item><title>Mining Interface</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-10/mining-interface/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-10/mining-interface/</guid><description>Main use case is a Stratum v2 client connecting over IPC.
Most of the proposed interface is already merged: https://github.com/bitcoin/bitcoin/blob/master/src/interfaces/mining.h
Open PR to add waitFeesChanged: https://github.com/bitcoin/bitcoin/pull/31003
We walked through the interface.
Discussion about memory management: any time getBlock is called the node creates a new block template, which contains many transaction references. If the mempool drops these transactions they’ll stay in memory. How to limit the additional memory footprint?
Add interface method to request current memory usage If memory usage exceeds some (configurable) value, refuse to make more templates.</description></item><item><title>Stratum v2</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/stratumv2/</link><pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/stratumv2/</guid><description>I explained the various stratum v2 roles described in the images here: https://stratumprotocol.org
Described the three layers of my main PR: https://github.com/bitcoin/bitcoin/pull/29432
Noise protocol Transport based on the TransportV1 / TransportV2 class Application layer (listens on new port, sv2 apps connect to it) Discussion point: the Job Declarator client role typically runs on the same machine as the template provider, so technically we don’t need noise encryption. However, we may in the future want to “take over” some of the Job Declarator client work, at which point we would need it.</description></item><item><title>Stratum V2</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-stratum-v2/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-stratum-v2/</guid><description>Introduction There was an announcement earlier this morning that announced the open-source project implementing Stratum v2 is ready for testing now. Spiral has been contributing to this project for a few years. There&amp;rsquo;s a few other companies funding it as well. It&amp;rsquo;s finally ready for testing.
History About 4 years ago or so, Matt proposed BetterHash which focused on enabling miners to be able to do their own transaction selection. There was an independent effort from Braaains that they called stratum v2 which added encryption and authentication between miners and pools and other improvements over stratum v1 like switching from JSON to binary and some other optimizations that were needed over the past 10 years.</description></item><item><title>Lightning updates / Stratum V2</title><link>https://btctranscripts.com/chaincode-podcast/lightning-updates-stratum-v2/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-podcast/lightning-updates-stratum-v2/</guid><description>Murch: 00:00:00
Hey Jonas.
Jonas: 00:00:00
Hey Murch.
Murch: 00:00:02
What are we up to?
Jonas: 00:00:03
We are back.
Murch: 00:00:04
Who are we recording today?
Jonas: 00:00:05
We have Steve Lee in the office this week.
Murch: 00:00:04
He is the head at Spiral. He&amp;rsquo;s done a lot of open source development. He talks to a bunch of people. He&amp;rsquo;s also the PM for the LDK team. So we&amp;rsquo;re going to talk Lightning, the challenges that are open with Lightning, and maybe a little bit about other projects in the space.</description></item></channel></rss>
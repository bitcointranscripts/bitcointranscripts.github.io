<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bitcoin core on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/bitcoin-core/</link><description>Recent content in bitcoin core on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/bitcoin-core/index.xml" rel="self" type="application/rss+xml"/><item><title>AssumeUTXO update</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-27-assumeutxo/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-27-assumeutxo/</guid><description>Goals allow nodes to get a utxo set quickly (1h) at the same time, no major security concessions Approach Provide serialized utxo snapshot get headers chain first, load snapshot and deserialize, sync to tip from that then start background verification with a 2nd snapshot finally, compare hashes when background IBD hits snapshot base Progress update lots of refactoring has been done; ChainStateManager was introduced, globals removed, mempool / blockstorage refactored init / shutdown logic changes have been merged wallet changes done p2p changes still under review (i.</description></item><item><title>Fuzzing</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-27-fuzzing/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-27-fuzzing/</guid><description>Slides: https://docs.google.com/presentation/d/1NlTw_n60z9bvqziZqU3H3Jw7Xs5slnQoehYXhEKrzOE
Fuzzing Fuzzing is done continuously. Fuzz targets can pay off even years later by finding newly introduced bugs. Example in slide about libFuzzer fuzzing a parse_json function which might crash on some weird input but won’t report invalid json inputs that pass parsing. libFuzzer does coverage guided feedback loop + helps with exploring control flow. Bug Oracles Assertions - Adding assertions is tricky for network code. We add Assume() when continuing is not worse than crashing.</description></item><item><title>Libbitcoin kernel</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-26-libbitcoin-kernel/</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-26-libbitcoin-kernel/</guid><description>Questions and Answers Q: bitcoind and bitcoin-qt linked against kernel the libary in the future?
presenter: yes, that is a / the goal Q: Have you looked at an electrum implementation using libbitcoinkernel?
audience: yes, would be good to have something like this! audience: Also could do the long proposed address index with that? audience: not only address index, other indexes too. Q: Other use-cases:
audience: be able to run stuff on iOS Q: Should the mempool be in the kernel?</description></item><item><title>Project Meta Discussion</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-26-meta-discussion/</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-26-meta-discussion/</guid><description>Part 1 What makes bitcoin core fun Intellectual challenge/problems Interesting, diverse, open source project collaborators Meaningful project goals Culturally the project is a meritocracy Scientific domain intersecting with real world problems Real world usage What makes bitcoin core not fun Long delivery cycles -&amp;gt; lack of shippers high Soft fork activation Antagonism (internal and external) Ambiguity of feature/code contribution usage Relationships Financial stability Unclear goals Part 2 Fitting rocks, pebbles, and sand in a jar analogy Time based releases vs feature based releases?</description></item><item><title>ASMap</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-27-asmap/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-27-asmap/</guid><description>Should we ship it every Core release? The initial idea is shipping a map file every Core release. Fabian wrote an article about how would be integrated into the deployment (https://gist.github.com/fjahr/f879769228f4f1c49b49d348f80d7635). Some devs pointed out an option would be to have it separated to the release process, any regular contributor could update it whenever they like (who would do it? frequency?). Then when the release comes around one of the recent ones will be chosen.</description></item><item><title>Mempool Clustering</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-mempool-clustering/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-mempool-clustering/</guid><description>Current Problems lot of problems in the mempool
eviction is broken mining algorithm is part of the problem, it’s not perfect RBF is like totally broken we complain all the time, sometimes we do/don&amp;rsquo;t RBF when we should/shouldn&amp;rsquo;t Eviction Eviction is when mempool is full, and we want to throw away the worst tx. Example, we think a tx is worst in mempool but it’s a descendant of a &amp;ldquo;good&amp;rdquo; tx.</description></item><item><title>Package Relay Primer</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-package-relay-primer/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-package-relay-primer/</guid><description>Slides: https://docs.google.com/presentation/d/12YPlmmaCiNNL83b3FDmYwa7FKHP7yD0krzkEzM-tkTM
Problems CPFP Doesn’t Work When Mempool Min Feerate Rises Bad for users who want to use CPFP and L2s, but also a glaring limitation in our ability to assess transaction incentive compatibility
Pinning being able to feebump transaction is a pinning concern counterpart can intentionally censor your transactions, and in L2 that can mean stealing your money because you didn’t meet the timelock Pinning examples ANYONECANPAY -&amp;gt; anyonecanpin: add input that comes from huge unconfirmed low-fee rate tx -&amp;gt; absolute feerate needs to increase, so you&amp;rsquo;re paying more fees for the tx to confirm slower shared descendant limit can be monopolized descendant limit is 25 txs, so someone else can fill up that limit we have a carve-out for CPFP already to try and mitigate that RBF Rule 3 is gameable replacement fees must &amp;gt; all descendants, and they may be large, low feerate -&amp;gt; expensive most L2s have pinning problems, so we need to fix that Get rid of txid-based relay we want to avoid txid based relay can&amp;rsquo;t deduplicate txid and wtxid that correspond to the same tx can&amp;rsquo;t deduplicate txs that only differ in witness we still require txid-based relay for orphans, because txs specify prevouts by txid -&amp;gt; so we don&amp;rsquo;t know which wtxid to request Definitions pinning attack: a censorship attack on relay/mempool level, abusing policy</description></item><item><title>Refactors</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-refactors/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-25-refactors/</guid><description>One take-away from the Chaincode residency in 2019 was: Don’t do refactors (unless you really need it)
A marked increase from 2019 to today (Chart on the increase of refactors)
The comments and PRs are steady but the refactors are increasing
Quibble about how regular reviewers are counted (should be higher than 5 comments)
Project reasons:
Ossification? Natural way mature projects progress/Boy Scout Rule Personal reasons:
Time commitment of large review may not be possible (extended period of singular focus) Merged PRs as proof of work, could help with the next grant Feels good to ship What is the effect?</description></item><item><title>Silent Payments</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-26-silent-payments/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-04-26-silent-payments/</guid><description>BIP Overview Scanning key and spending key are different: better security. Silent payment transactions are indistinguishable from transactions with taproot outputs on-chain.
Q: Address labeling, why not create two silent payment addresses?
A: It doubles scanning costs.
Limited to taproot UTXOs (currently about 3% of transactions) but when it increases we should find ways to optimize scanning, even though it currently does not seem to be an issue.
Q: Why no P2PK</description></item><item><title>Strategies for getting stuff merged</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-merging/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-merging/</guid><description>Introduction I wanted to talk about things that have been leaking out over other conversations because sometimes people get frustrated that their stuff doesn&amp;rsquo;t get merged. This is not a new problem. It&amp;rsquo;s an issue that has been going on for a long time. It can be frustrating. I don&amp;rsquo;t have the answer. This is going to be more discussion based and I&amp;rsquo;ve asked a few folks to talk about strategies that have worked for them.</description></item><item><title>Bitcoin Core and GitHub</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-github/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-github/</guid><description>Bitcoin Core and GitHub
I think at this point it&amp;rsquo;s quite clear that it&amp;rsquo;s not necessarily a &amp;ldquo;if&amp;rdquo; we get off github, but a when and how. The question would be, how would we do that? This isn&amp;rsquo;t really a presentation. It&amp;rsquo;s more of a discussion. There&amp;rsquo;s a few things to keep in mind, like the bitcoin-gh-meta repo, which captures all the issues, comments and pull requests. It&amp;rsquo;s quite good. The ability to reconstruct what&amp;rsquo;s inside of here on another platform doesn&amp;rsquo;t really seem possible in its entirety.</description></item><item><title>Fee Market</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-fee-market/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-fee-market/</guid><description>Fee market
There are two times we have had sustained fees: late 2017 and early 2021. In late 2017 we saw lots of things break because people hadn&amp;rsquo;t written software to deal with variable fees or anything. I don&amp;rsquo;t know if that was as big of a problem in 2021. I do worry that this will start to become a thing. If you have no variable fee market, and you can just throw in 1 sat/vbyte for several years then it will just work until it doesn&amp;rsquo;t.</description></item><item><title>Package Relay BIP, implementation, V3, and package RBF proposals</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-package-relay/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-package-relay/</guid><description>Notes on Package Relay BIP, implementation, V3, and package RBF proposals from Core Dev in Atlanta.
Also at https://gist.github.com/glozow/8469dc9c3a003c7046033a92dd504329.
Ancestor Package Relay BIP BIP updated to be receiver-initiated ancestor packages only. Sender-initiated vs receiver-initiated package relay. Receiver-intiated package relay enables a node to ask for more information when they suspect they are missing something (i.e. to resolve orphans). Sender-initiated package relay should, theoretically, save a round trip by notifying the receiver ahead of time that &amp;ldquo;hey, this is going to be a package, so make sure you download and submit these transactions together.</description></item><item><title>Stratum V2</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-stratum-v2/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-stratum-v2/</guid><description>Introduction There was an announcement earlier this morning that announced the open-source project implementing Stratum v2 is ready for testing now. Spiral has been contributing to this project for a few years. There&amp;rsquo;s a few other companies funding it as well. It&amp;rsquo;s finally ready for testing.
History About 4 years ago or so, Matt proposed BetterHash which focused on enabling miners to be able to do their own transaction selection. There was an independent effort from Braaains that they called stratum v2 which added encryption and authentication between miners and pools and other improvements over stratum v1 like switching from JSON to binary and some other optimizations that were needed over the past 10 years.</description></item><item><title>BIP324 - Version 2 of p2p encrypted transport protocol</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-p2p-encryption/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-p2p-encryption/</guid><description>Previous talks https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/
https://btctranscripts.com/breaking-bitcoin/2019/p2p-encryption/
Introduction and motivation Can we turn down the lights? &amp;ldquo;Going dark&amp;rdquo; is a nice theme for the talk. I also have dark coffee. Okay.
We&amp;rsquo;re going to talk a little bit about bip324. This is a BIP that has had a long history. We even have a page about the history. It all started more than 6 years ago&amp;hellip; Bitcoin p2p traffic is unencrypted. It always has been.</description></item><item><title>Misc</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-misc/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-misc/</guid><description>Web of Trust Some of the public key server operators interpreted GDPR to mean that they can&amp;rsquo;t operate public key infrastructure anymore. There needs to be another solution for p2p distribution of keys and Web-of-Trust.
&amp;lt;bitcoin-otc.com&amp;gt; continues to be the longest operating PGP web-of-trust using public key infrastructure. Rumplepay might be able to bootstrap a web-of-trust over time.
Stealth addresses and silent payments Here&amp;rsquo;s something controversial. Say you keep an in-memory map of all addresses that have already been used.</description></item><item><title>libbitcoinkernel</title><link>https://btctranscripts.com/chaincode-labs/2022-04-12-carl-dong-libbitcoinkernel/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/2022-04-12-carl-dong-libbitcoinkernel/</guid><description>Location: Carl Dong YouTube channel (online)
Tracking issue in Bitcoin Core: https://github.com/bitcoin/bitcoin/issues/24303
Pieter Wuille on Chaincode podcast discussing consensus rules: https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-01-28-pieter-wuille/#part-2
Intro Hi everyone. I’m Carl Dong from Chaincode Labs and I’m here to talk about libbitcoinkernel, a project I’ve been working on that aims to extract Bitcoin Core’s consensus engine. When we download and run Bitcoin Core it is nicely packaged into a single bundle, a single application. However those of us who have studied the blade know that Bitcoin Core just like most applications is in fact a collection of subsystems.</description></item><item><title>Socratic Seminar - AssumeUTXO</title><link>https://btctranscripts.com/london-bitcoin-devs/2021-11-02-socratic-seminar-assumeutxo/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2021-11-02-socratic-seminar-assumeutxo/</guid><description>Topic: AssumeUTXO
Name: Socratic Seminar
Location: London BitDevs (online)
Reading list: https://gist.github.com/michaelfolkson/f46a7085af59b2e7b9a79047155c3993
Intros Michael Folkson (MF): This is a discussion on AssumeUTXO. We are lucky to have James O’Beirne on the call. There is a reading list that I will share in a second with a bunch of links going right from concept, some of the podcasts James has done, a couple of presentations James has done. And then towards the end hopefully we will get pretty technical and in the weeds of some of the current, past and future PRs.</description></item><item><title>Learning Bitcoin Core Contribution &amp; Hosting PR Review Club</title><link>https://btctranscripts.com/stephan-livera-podcast/2020-10-02-gloria-zhao-bitcoin-core/</link><pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/stephan-livera-podcast/2020-10-02-gloria-zhao-bitcoin-core/</guid><description>podcast: https://stephanlivera.com/episode/216/
Stephan Livera:
Gloria. Welcome to the show.
Gloria Zhao:
Thank you so much for having me.
Stephan Livera:
So Gloria I’ve heard a few things about you and I was looking up what you’ve been doing. You’ve been doing some really interesting things. Can we hear a little bit about you and how you got into Bitcoin?
Gloria Zhao:
Yeah, well, I didn’t get into Bitcoin by choice. Actually it was by accident.</description></item><item><title>Bitcoin Core Functional Test Framework</title><link>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/edgedevplusplus/bitcoin-core-functional-test-framework/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/edgedevplusplus/bitcoin-core-functional-test-framework/</guid><description>Topic: Bitcoin Core functional test framework
Location: Bitcoin Edge Dev++
Slides: https://telaviv2019.bitcoinedge.org/files/test-framework-in-bitcoin-core.pdf
Transcript completed by: Bryan Bishop Edited by: Michael Folkson
https://twitter.com/kanzure/status/1171357556519952385
Introduction I am pretty sure you can tell but I am not James (Chiang). I am taking over the functional testing framework talk from James. He has already given several great talks. I took over this talk at very short notice from James. I’d like to give a hands on talk.</description></item><item><title>Debugging Workshop</title><link>https://btctranscripts.com/advancing-bitcoin/2020/2020-02-07-fabian-jahr-debugging-workshop/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/advancing-bitcoin/2020/2020-02-07-fabian-jahr-debugging-workshop/</guid><description>Topic: Debugging Bitcoin Core Workshop
Location: Advancing Bitcoin
Video: No video was posted online
Fabian presentation at Bitcoin Edge Dev++ 2019: https://diyhpl.us/wiki/transcripts/scalingbitcoin/tel-aviv-2019/edgedevplusplus/debugging-bitcoin/
Debugging Bitcoin Core doc: https://github.com/fjahr/debugging_bitcoin
Debugging Bitcoin Core Workshop: https://gist.github.com/fjahr/5bf65daaf9ff189a0993196195005386
Introduction First of all welcome to the debugging Bitcoin Core workshop. Everything I know more or less about using a debugger to learn from Bitcoin Core and to fix problems in Bitcoin Core. I didn’t go with traditional slides because I want to teach you how to use this tool, the debugger, in the context of Bitcoin Core.</description></item><item><title>Knowledge Aggregation And Propagation</title><link>https://btctranscripts.com/cryptoeconomic-systems/2019/knowledge-aggregation-and-propagation/</link><pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/cryptoeconomic-systems/2019/knowledge-aggregation-and-propagation/</guid><description>Intro https://docs.google.com/document/d/1a1uRy10dBBcxrnzjdUaO2y03f5H34yFlxktOcanvVYE/edit
https://cess.pubpub.org/pub/knowledge-aggregation/branch/2/
I&amp;rsquo;ll be the contrarian - I think academia is awful and should be destroyed.
Reputation is completely independent of content and should not be the mechanism by which you judge the quality of research; your reputation is worthless to me. (laughter)
My perspective: [first, slidemaker&amp;rsquo;s regret! might have reorganized this]
I&amp;rsquo;m a bitcoin core developer. Also worked at LedgerX (4 years). I also work on biotech on the hobbyist side, garage engineering &amp;ndash; what I was doing when bitcoin was launched.</description></item><item><title>Bitcoin Core Wallet Development</title><link>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-19-john-newbery-wallet-development/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-19-john-newbery-wallet-development/</guid><description>Wallet Development in Bitcoin Core
Location: Chaincode Labs 2019 Residency
Slides: https://residency.chaincode.com/presentations/bitcoin/Wallet_Development.pdf
Intro I am going to talk to you about wallets. As for the previous presentation I have all of the links in this document which I will share with you. First of all why should we care about wallets? Kind of boring right? You’ve had all this fun stuff about peer-to-peer and consensus. Wallets are just on the edge.</description></item><item><title>P2P Encryption</title><link>https://btctranscripts.com/breaking-bitcoin/2019/p2p-encryption/</link><pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/breaking-bitcoin/2019/p2p-encryption/</guid><description>bip324: v2 message transport protocol
https://twitter.com/kanzure/status/1137312478373851136
slides: https://twitter.com/_jonasschnelli_/status/1137389541512351749
Previous talks https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schenlli-bip150-bip151/
https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/
Introduction This will be a technical talk. I hope you&amp;rsquo;re prepared for some cryptography. By the way, this now has a bip number as of this morning. This is bip324. I call it v2 message transport protocol. It&amp;rsquo;s not a consensus change, it&amp;rsquo;s purely a p2p network layer change. It&amp;rsquo;s not all about encryption, but mainly about encryption.</description></item><item><title>Assumeutxo</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-assumeutxo/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-assumeutxo/</guid><description>Assumeutxo
https://twitter.com/kanzure/status/1137008648620838912
Why assumeutxo assumeutxo is a spiritual continuation of assumevalid. Why do we want to do this in the first place? At the moment, it takes hours and days to do initial block download. Various projects in the community have been implementing meassures to speed this up. Casa I think bundles datadir with their nodes. Other projects like btcpay have various ways of bundling this up and signing things with gpg keys and these solutions are not quite half-baked but they are probably not desirable either.</description></item><item><title>P2P Encryption</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/</guid><description>https://twitter.com/kanzure/status/1136939003666685952
https://github.com/bitcoin-core/bitcoin-devwiki/wiki/P2P-Design-Philosophy
&amp;ldquo;Elligator Squared: Uniform Points on Elliptic Curves of Prime Order as Uniform Random Strings&amp;rdquo; https://eprint.iacr.org/2014/043
Previous talks https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
Introduction This proposal has been in progress for years. Many ideas from sipa and gmaxwell went into bip151. Years ago I decided to try to move this forward. There is bip151 that again most of the ideas are not from myself but come from sipa and gmaxwell. The original proposal was withdrawn because we figured out ways to do it better.</description></item><item><title>Wallet Architecture</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-05-wallet-architecture/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-05-wallet-architecture/</guid><description>Bitcoin Core wallet architecture + descriptors
https://twitter.com/kanzure/status/1136282460675878915
writeup: https://github.com/bitcoin/bitcoin/issues/16165
Wallet architecture discussion There are three main areas here. One is IsMine: how do I determine a particular output is affecting my wallet? What about asking for a new address, where is it coming from? That&amp;rsquo;s not just get new address, it&amp;rsquo;s get raw change address, it&amp;rsquo;s also change being created in fundrawtransaction. The third issue is wallet signing. Storage is not an entrypoint, it&amp;rsquo;s just a way of implementing these things.</description></item><item><title>Wallet Architecture in Bitcoin Core</title><link>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/edgedevplusplus/wallet-architecture/</link><pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/edgedevplusplus/wallet-architecture/</guid><description>Bitcoin Core wallet architecture
https://twitter.com/kanzure/status/1171018684816605185
Introduction Thanks Bryan for talking about HD wallets. I am going to be talking about wallet architecture in Bitcoin Core. Alright. Who am I? I work on Bitcoin Core. I&amp;rsquo;ve been writing code on Bitcoin Core for about 3 years. Lately I have been working on the wallet. I work for Chaincode Labs which is why I get to work on Bitcoin Core. We are a small research lab in New York.</description></item><item><title>Bitcoin Core Testing</title><link>https://btctranscripts.com/greg-maxwell/2018-09-23-greg-maxwell-bitcoin-core-testing/</link><pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2018-09-23-greg-maxwell-bitcoin-core-testing/</guid><description>Location: Bitcointalk
https://bitcointalk.org/index.php?topic=5035144.msg46080218#msg46080218
Bitcoin Core testing I believe slower would potentially result in less testing and not likely result in more at this point.
If we had an issue that newly introduced features were turning out to frequently have serious bugs that are discovered shortly after shipping there might be a case that it would improve the situation to delay improvements more before putting them into critical operation&amp;hellip; but I think we&amp;rsquo;ve been relatively free of such issues.</description></item><item><title>Bitcoin Core and hardware wallets</title><link>https://btctranscripts.com/london-bitcoin-devs/2018-09-19-sjors-provoost-core-hardware-wallet/</link><pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2018-09-19-sjors-provoost-core-hardware-wallet/</guid><description>Topic: Using Bitcoin Core with hardware wallets
Location: London Bitcoin Devs
Slides: https://github.com/Sjors/presentations/blob/master/2018-09-19%20London%20Bitcoin%20Devs/2018-09%20London%20Bitcoin%20Devs%200.5.pdf
Core, HWI docs: https://hwi.readthedocs.io/en/latest/examples/bitcoin-core-usage.html
Introduction I am Sjors, I am going to show you how to use, you probably shouldn’t try this at home, the Bitcoin Core wallet directly with a hardware wallet. Most of that work is done by Andrew Chow. I’m just showing how it works. I will have some thoughts of my own on how that could be made more user friendly.</description></item><item><title>Bitcoin CLI and Regtest</title><link>https://btctranscripts.com/austin-bitcoin-developers/2018-08-17-richard-bondi-bitcoin-cli-regtest/</link><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/austin-bitcoin-developers/2018-08-17-richard-bondi-bitcoin-cli-regtest/</guid><description>Clone this repo to follow along: https://github.com/austin-bitcoin-developers/regtest-dev-environment
https://twitter.com/kanzure/status/1161266116293009408
Intro So the goal here as Justin said is to get the regtest environment set up. The advantages he mentioned, there is also the advantage that you can mine your own coins at will so you don’t have to mess around with testnet faucets. You can generate blocks as well so you don’t have to wait for six confirmations or whatever or even the ten minutes.</description></item><item><title>Bitcoin Core</title><link>https://btctranscripts.com/sf-bitcoin-meetup/2018-04-23-jeremy-rubin-bitcoin-core/</link><pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/sf-bitcoin-meetup/2018-04-23-jeremy-rubin-bitcoin-core/</guid><description>A hardCORE workout
Slides: https://drive.google.com/file/d/149Ta1WRXL5WEvnBdlL-HxmsFDXUbvFDy/view
https://twitter.com/kanzure/status/1152926849879760896
Intro Thank you very much for the warm welcome. So welcome to the hard core workout. It is not going to be that difficult but you can stretch if you need to. It is going to be a lot of material so I’m going to go a little bit fast. If you have any questions feel free to stop me in the middle. There’s a lot of material to get through so I might say “Hold it” or “Find me after” but if there is anything that would help your understanding fee free to classroom style raise your hand and I’ll try to answer it.</description></item><item><title>Bip150 Bip151</title><link>https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/</link><pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/</guid><description>bip150 and bip151: Bitcoin p2p network encryption and authentication
https://github.com/bitcoin/bips/blob/master/bip-0150.mediawiki
https://github.com/bitcoin/bips/blob/master/bip-0151.mediawiki
https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
Introduction Alright guys.. take a seat. ((various mumblings)) Want to thank our sponsors, Digital Garage (applause). Second order of business, if you guys could&amp;hellip; trash away.. that would be awesome. There are trash cans in the back and right there and right next to the drinks. So at the end of the night, that would be great. Jonas Schnelli is a bitcoin core developer and he is here to talk about bitcoin encryption and authentication on the p2p network.</description></item><item><title>libsecp256k1 testing</title><link>https://btctranscripts.com/greg-maxwell/2015-01-08-libsecp256k1-testing/</link><pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-01-08-libsecp256k1-testing/</guid><description>Topic: libsecp256k1 testing
Location: Reddit
https://www.reddit.com/r/Bitcoin/comments/2rrxq7/on_why_010s_release_notes_say_we_have_reason_to/
libsecp256k1 testing Today OpenSSL de-embargoed CVE-2014-3570 &amp;ldquo;Bignum squaring may produce incorrect results&amp;rdquo;. That particular security advisory is not a concern for Bitcoin users, but it allows me to explain some of the context behind a slightly cryptic statement I made in the release notes for the upcoming Bitcoin Core 0.10: “we have reason to believe that libsecp256k1 is better tested and more thoroughly reviewed than the implementation in OpenSSL”.</description></item><item><title>OpenSSL bug discovery</title><link>https://btctranscripts.com/greg-maxwell/2015-01-08-openssl-bug/</link><pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-01-08-openssl-bug/</guid><description>Topic: OpenSSL bug discovery
Location: Reddit
https://np.reddit.com/r/programming/comments/2rrc64/openssl_security_advisory_new_openssl_releases/cnilq2w/?context=3
OpenSSL bug discovery I contributed to the discovery and analysis of CVE-2014-3570 &amp;ldquo;Bignum squaring may produce incorrect results&amp;rdquo;. In this case, the issue was that one of the carry propagation conditions was missed. The bug was discovered as part of the development of libsecp256k1, a high performance (and hopefully high quality: correct, complete, side-channel resistant) implementation of the cryptographic operators used by Bitcoin, developed primarily by Bitcoin Core developer Pieter Wuille along with a number of other people.</description></item><item><title>Overview Bitcoin Core Architecture</title><link>https://btctranscripts.com/scalingbitcoin/tokyo-2018/edgedevplusplus/overview-bitcoin-core-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tokyo-2018/edgedevplusplus/overview-bitcoin-core-architecture/</guid><description>https://twitter.com/kanzure/status/1048098034234445824
slides: http://jameso.be/dev++2018/
Introduction Alright guys, how are you guys doing? You guys look tired. Given your brains are probably fried, I am delighted to tell you that this talk will be pretty high level. I am James O&amp;rsquo;Beirne, I work at Chaincode Labs. I&amp;rsquo;ve been working on Bitcoin Core since 2015. I am in New York most of the time.
Agenda Today we are going to talk about Bitcoin Core.</description></item><item><title>Sighash Noinput</title><link>https://btctranscripts.com/scalingbitcoin/tokyo-2018/edgedevplusplus/sighash-noinput/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tokyo-2018/edgedevplusplus/sighash-noinput/</guid><description>SIGHASH_NOINPUT (BIP118)
https://twitter.com/kanzure/status/1049510702384173057
Dev++ / BC2 - October 4th-5th 2018 - Keio University, Tokyo, Japan
https://bitcoinedge.org/event/keio-devplusplus-2018
https://keio-devplusplus-2018.bitcoinedge.org/#schedule
Hi, my name is Bryan, I&amp;rsquo;m going to be talking about SIGHASH NOINPUT. It was something that I was asked to speak about. It is currently not deployed, but it is an active proposal.
So, just really brief about who I am. I have a software development background. I just left LedgerX last week, so that is an exciting change in my life.</description></item></channel></rss>
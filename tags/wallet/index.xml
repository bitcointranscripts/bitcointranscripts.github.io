<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wallet on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/wallet/</link><description>Recent content in wallet on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 21 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/wallet/index.xml" rel="self" type="application/rss+xml"/><item><title>Remove the legacy wallet and updating descriptors</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/wallet-legacy-upgrade/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/wallet-legacy-upgrade/</guid><description>Wallet migration + legacy wallet removal The long-term goal targeted for v29 is to delete BDB and drop the legacy wallet. The migration PR for the GUI was just merged recently, so that will be possible for the next release v26. The &amp;ldquo;Drop migratewallet experimental warning&amp;rdquo; PR (#28037) should also go in before v26. Migrating without BDB should be possible for v27 (PRs &amp;ldquo;Independent BDB&amp;rdquo; #26606 and &amp;ldquo;Migrate without BDB&amp;rdquo; #26596).</description></item><item><title>Bitcoin Core 25.0</title><link>https://btctranscripts.com/bitcoin-explained/bitcoin-core-v25/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-explained/bitcoin-core-v25/</guid><description>Aaron van Wirdum: 00:00:21
Live from Utrecht, this is Bitcoin&amp;hellip;
Sjors Provoost: 00:00:24
Explained.
Introduction Aaron van Wirdum: 00:00:24
Hey, Sjors, we&amp;rsquo;re back. We&amp;rsquo;re back in beautiful, sunny Utrecht after I spent some time in Miami and Prague. You spent some time in Prague, and more Prague, is that right?
Sjors Provoost: 00:00:38
Mostly Prague.
Aaron van Wirdum: 00:00:38
You were in Prague for a while. That&amp;rsquo;s where we recorded the previous episode about Stratum V2.</description></item><item><title>The Bitcoin Development Kit (BDK)</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-development-kit-bdk/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-development-kit-bdk/</guid><description>The podcast covers the evolution of the Bitcoin Development Kit (BDK), originally known as the Magical Bitcoin Library, from its inception at Blockstream to its current status as a fully-fledged open-source project. Key topics include the renaming of BDK, its foundational use of Rust and descriptors for wallet architecture, and the broad applicability for both individual and enterprise users. Early adopters and contributors to BDK&amp;rsquo;s development are highlighted, alongside discussions on the challenges and technical hurdles such as asynchronous operations and wallet management across multiple descriptors. The conversation also touches on the motivations behind developers preferring to build wallets from scratch and the potential advantages of adopting BDK for future-proofing wallet applications. Upcoming features in BDK 1.0 promise further enhancements, particularly in syncing mechanisms and transaction planning.</description></item><item><title>The Bitcoin Core Wallet</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-core-wallet/</link><pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-core-wallet/</guid><description>The discussion with Andrew Chow explores the evolution of the Bitcoin Core wallet, emphasizing significant developments like descriptor wallets and PSBT for enhancing functionality and interoperability. The conversation highlights the continuous efforts to refactor and improve the wallet&amp;rsquo;s codebase, addressing challenges and introducing innovations in coin selection and transaction management. The importance of maintaining high security and review standards is underscored, reflecting the wallet&amp;rsquo;s role in supporting Bitcoin&amp;rsquo;s core principles. Future directions include improving the wallet&amp;rsquo;s performance, user experience, and GUI.</description></item><item><title>The Bitcoin Core wallet and wrangling bitcoin data</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-core-wallet-and-wrangling-bitcoin-data/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/the-bitcoin-core-wallet-and-wrangling-bitcoin-data/</guid><description>In this conversation, Adam Jonas and Mark Erhardt discuss their work with Josie Baker on Bitcoin data analysis, focusing on mempool data collection and Bitcoin Core wallet improvements. Josie explains his work in standardizing and cleaning mempool data to create a comprehensive, open-source dataset. This dataset will facilitate research and development in areas such as fee estimation and transaction propagation. They also delve into Bitcoin Core wallet enhancements, including privacy improvements and efficient coin selection methods. The conversation highlights the importance of reproducibility, empirical analysis, and open-source collaboration in advancing Bitcoin technology. Josie’s efforts emphasize the value of making Bitcoin data accessible and fostering a community of contributors in the Bitcoin development ecosystem.</description></item><item><title>Coin Selection Algorithms</title><link>https://btctranscripts.com/tabconf/2021/coin-selection-algorithms/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2021/coin-selection-algorithms/</guid><description>Introduction Hi, I&amp;rsquo;m Andrew Chow. I&amp;rsquo;m an engineer at Blockstream and I work on Bitcoin Core in the wallet and on various things in the wallet. So, today I&amp;rsquo;m going to be talking about coin selection and generally how you can pick your inputs better for when you&amp;rsquo;re making a transaction. To start off, what happens when you make a transaction? Well, first, you type in, you copy and paste in your address, you type in the amount that you want to send and you click the send button and your wallet does some stuff in the background and out comes a transaction, right?</description></item><item><title>What am I working on?</title><link>https://btctranscripts.com/misc/2020-07-10-what-am-i-working-on/</link><pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/misc/2020-07-10-what-am-i-working-on/</guid><description>I&amp;rsquo;ve been working on essentially rewriting the Bitcoin Core wallet, one piece at a time. Now when I say &amp;ldquo;the wallet&amp;rdquo;, a lot of people think of the GUI. That&amp;rsquo;s not what I&amp;rsquo;ve been working on. Rather I&amp;rsquo;ve been changing the internals; how keys are managed, how transactions are tracked, how inputs are selected for spending. All of those under the hood things. At some point, I will get around to changing the GUI.</description></item><item><title>Descriptor Wallets</title><link>https://btctranscripts.com/advancing-bitcoin/2020/2020-02-06-andrew-chow-descriptor-wallets/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/advancing-bitcoin/2020/2020-02-06-andrew-chow-descriptor-wallets/</guid><description>Topic: Rethinking Wallet Architecture: Native Descriptor Wallets
Location: Advancing Bitcoin
Slides: https://www.dropbox.com/s/142b4o4lrbkvqnh/Rethinking%20Wallet%20Architecture_%20Native%20Descriptor%20Wallets.pptx
Support for Output Descriptors in Bitcoin Core: https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md
Bitcoin Optech on Output script descriptors: https://bitcoinops.org/en/topics/output-script-descriptors/
Bitcoin Core dev wiki on Wallet Class Structure Changes: https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Class-Structure-Changes
Intro Hi everyone. I am Andrew Chow, I am an engineer at Blockstream and also a Bitcoin Core contributor working mostly on the Bitcoin Core wallet. Today I am going to be talking about rethinking the wallet architecture with native descriptor wallets.</description></item><item><title>Hardware Wallets in Bitcoin Core</title><link>https://btctranscripts.com/london-bitcoin-devs/2020-02-05-andrew-chow-hardware-wallets/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2020-02-05-andrew-chow-hardware-wallets/</guid><description>Slides: https://www.dropbox.com/s/k02o32d0pagac4r/Andrew%20Chow%20slides.pdf
BIP174 (PSBT): https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki
PSBT Howto for Bitcoin Core: https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md
Introduction Hey everyone. As you may have guessed I’m Andrew Chow. I’m Engineer at Blockstream and I also work on Bitcoin Core a lot, mostly in the wallet. I am going to be talking about hardware wallets and a bit history with them in Core and also how to integrate them in Core and how we are integrating them into Core.</description></item><item><title>Wallet Architecture in Bitcoin Core</title><link>https://btctranscripts.com/edgedevplusplus/2019/wallet-architecture/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2019/wallet-architecture/</guid><description>https://twitter.com/kanzure/status/1171018684816605185
Introduction Thanks Bryan for talking about HD wallets. I am going to be talking about wallet architecture in Bitcoin Core. Alright. Who am I? I work on Bitcoin Core. I&amp;rsquo;ve been writing code on Bitcoin Core for about 3 years. Lately I have been working on the wallet. I work for Chaincode Labs which is why I get to work on Bitcoin Core. We are a small research lab in New York.</description></item><item><title>Wallet Development in Bitcoin Core</title><link>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-19-john-newbery-wallet-development/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-19-john-newbery-wallet-development/</guid><description>Location: Chaincode Labs 2019 Residency
Slides: https://residency.chaincode.com/presentations/bitcoin/Wallet_Development.pdf
Intro I am going to talk to you about wallets. As for the previous presentation I have all of the links in this document which I will share with you. First of all why should we care about wallets? Kind of boring right? You’ve had all this fun stuff about peer-to-peer and consensus. Wallets are just on the edge. Maybe you’re not even interested in Bitcoin Core.</description></item><item><title>Wallet Architecture</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06/2019-06-05-wallet-architecture/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06/2019-06-05-wallet-architecture/</guid><description>Bitcoin Core wallet architecture + descriptors
https://twitter.com/kanzure/status/1136282460675878915
writeup: https://github.com/bitcoin/bitcoin/issues/16165
Wallet architecture discussion There are three main areas here. One is IsMine: how do I determine a particular output is affecting my wallet? What about asking for a new address, where is it coming from? That&amp;rsquo;s not just get new address, it&amp;rsquo;s get raw change address, it&amp;rsquo;s also change being created in fundrawtransaction. The third issue is wallet signing. Storage is not an entrypoint, it&amp;rsquo;s just a way of implementing these things.</description></item><item><title>Signmessage</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-10-signmessage/</link><pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-10-signmessage/</guid><description>kallewoof and others
https://twitter.com/kanzure/status/1049834659306061829
I am trying to make a new signmessage to do other things. Just use the signature system inside bitcoin to sign a message. Sign a message that someone wants. You can use proof-of-funds or whatever.
You could just have a signature and it&amp;rsquo;s a signature inside of a package and it&amp;rsquo;s small and easy. Another option is to have a .. that is invalid somehow. You do a transaction with some input, where the txid is the message hash or something.</description></item><item><title>Wallet Stuff</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-09-wallet-stuff/</link><pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-09-wallet-stuff/</guid><description>https://twitter.com/kanzure/status/1049526667079643136
Maybe we can have the wallet PRs have a different review process so that there can be some specialization, even if the wallet is not ready to be split out. In the future, if the wallet was a separate project or repository, then that would be better. We need to be able to subdivide the work better than we already do, and the wallet is a good place to start doing it.</description></item><item><title>Script Descriptors</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-script-descriptors/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-script-descriptors/</guid><description>https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md
I would like to talk about script descriptors. There&amp;rsquo;s a number of projects we&amp;rsquo;re working on and they are all kind of related. I&amp;rsquo;d like to clarify how things fit together.
Note: there is an earlier transcript that has not been published (needs review) about script descriptors.
Agenda History of script descriptors and how we came to this. What&amp;rsquo;s currently in Bitcoin Core v0.17 Wallet integration DESCRIPT About script descriptors The problem that I wanted to tackle was that currently in Bitcoin Core wallet we have a blob of public keys and private keys and HD chains and scripts and a bunch of other metadata and keypools.</description></item><item><title>Improvements to Bitcoin</title><link>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/maaku-panel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/maaku-panel/</guid><description>This can be a broad range of topics for improvements. I am Mark Friedenbach, I have worked on Bitcoin protocol research, but I also do Core tech engineering at Blockstream. We also have Jonas, an independent Bitcoin Core developer. We also have Andrew Poelstra, who has been core to the crypto work which has been incoporated into Bitcoin, such as libsecp256k1 which we recently integrated in the 0.12 release. It speeds up Bitcoin validation by 7-8x.</description></item></channel></rss>
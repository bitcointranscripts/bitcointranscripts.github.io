<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>validation on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/validation/</link><description>Recent content in validation on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 01 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/validation/index.xml" rel="self" type="application/rss+xml"/><item><title>Hardware Wallet Security</title><link>https://btctranscripts.com/andreas-antonopoulos/2019-02-01-andreas-antonopoulos-hardware-wallet-security/</link><pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/andreas-antonopoulos/2019-02-01-andreas-antonopoulos-hardware-wallet-security/</guid><description>Topic: Are Hardware Wallets Secure Enough?
Location: Andreas Antonopoulos YouTube channel
Are Hardware Wallets Secure Enough? Q - Hi Andreas. I store my crypto on a Ledger. Listening to Trace Mayer this week has me concerned that this is not safe enough. Trace says you need Bitcoin Core for network validation, Armory for managing the private keys and a Glacier protocol for standard operating procedures and a Purism laptop for hardware.</description></item><item><title>Current And Future State Of Wallets</title><link>https://btctranscripts.com/building-on-bitcoin/2018/current-and-future-state-of-wallets/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/building-on-bitcoin/2018/current-and-future-state-of-wallets/</guid><description>https://twitter.com/kanzure/status/1014127893495021568
Introduction I started to contribute to Bitcoin Core about 5 years ago. Since then, I have managed to get 450 commits merged. I am also the co-founder of a wallet hardware company based in Switzerland called Shift+ Cryptocurrency.
Wallets is not rocket science. It&amp;rsquo;s mostly about pointing the figure to things that we can do better. I prepared a lot of content.
Privacy, security and trust When I look at existing wallets, I see the triangle of privacy, security and trust.</description></item><item><title>Merkleized Abstract Syntax Trees - MAST</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03/2018-03-06-merkleized-abstract-syntax-trees-mast/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03/2018-03-06-merkleized-abstract-syntax-trees-mast/</guid><description>https://twitter.com/kanzure/status/972120890279432192
See also http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/
MAST stuff You could directly merkleize scripts if you switch from IF, IFNOT, ELSE with IFJUMP that has the number of bytes.
With graftroot and taproot, you never to do any scripts (which were a hack to get things started). But we&amp;rsquo;re doing validation and computation.
You take every single path it has; so instead, it becomes &amp;hellip; certain condition, or certain not conditions&amp;hellip; You take every possible ifs, you use this, you say it&amp;rsquo;s one of these, then you specify which one, and you show it and everyone else can validate this.</description></item><item><title>Signature Aggregation</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09/2017-09-06-signature-aggregation/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09/2017-09-06-signature-aggregation/</guid><description>﻿https://twitter.com/kanzure/status/907065194463072258
Signature aggregation Sipa, can you sign and verify ECDSA signatures by hand? No. Over GF(43), maybe. Inverses could take a little bit to compute. Over GF(2).
I think the first thing we should talk about is some definitions. I&amp;rsquo;d like to start by distinguishing between three things: Key aggregation, signature aggregation, and batch validation. Multi-signature later.
There are three different problems. Key aggregation is where there are a number of people with each their own key, they want to produce a combined key that can only sign when they come together.</description></item><item><title>Alternatives To Block Size As Aggregate Resource Limits</title><link>https://btctranscripts.com/scalingbitcoin/montreal-2015/alternatives-to-block-size-as-aggregate-resource-limits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/montreal-2015/alternatives-to-block-size-as-aggregate-resource-limits/</guid><description>I am talking about block size, but not any particular proposal. Why do we have the block size limit and is it a good thing in the first place? The block size exists as a denial-of-service limiter. It limits the amount of resources that a node validating the blockchain can exhaust when validating a block. We want to do this because in the early days of bitcoin there are often certain kinds of transactions there are ways to slow down a validator by using a non-standard transaction or filling up a block with tons of spam.</description></item><item><title>Breaking The Chain</title><link>https://btctranscripts.com/scalingbitcoin/milan-2016/breaking-the-chain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/milan-2016/breaking-the-chain/</guid><description>https://twitter.com/kanzure/status/785144266683195392
http://dpaste.com/1ZYW028
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/client-side-validation/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/hong-kong/braiding-the-blockchain/
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/jute-braiding/
Inclusivitiy So it seems like we have two big topics here, one is braiding and one is proof-of-publication. I had a talk in Hong Kong about braiding. The major difference is the inclusive nature. The notion that every block gets a block reward as a way to solve selfish-mining. It&amp;rsquo;s a competition between the orphans that get a reward and the ones that don&amp;rsquo;t that causes a loss of security.</description></item><item><title>Client Side Validation</title><link>https://btctranscripts.com/scalingbitcoin/milan-2016/client-side-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/milan-2016/client-side-validation/</guid><description>Progress on scaling via client-side validation
https://twitter.com/kanzure/status/785121442602029056
http://diyhpl.us/wiki/transcripts/scalingbitcoin/milan/breaking-the-chain/
Let&amp;rsquo;s start with what isn&amp;rsquo;t client-side validation. I am going to call this the miner-side approach. Here&amp;rsquo;s some smart contract code. In this example, it&amp;rsquo;s Chronos which is a timestamping contract. What you have here is a contract that stores in ethereum state consensus some hashes as they are received, they are timestamped. And ultimately at some point in the future you could go and ask the ethereum state machine, you know, did you go and get this hash?</description></item><item><title>Fraud Proofs</title><link>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/fraud-proofs-petertodd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/fraud-proofs-petertodd/</guid><description>In Bitcoin we have made this tradeoff where we don&amp;rsquo;t have everyone running full nodes. Not everyone is participating equally. If you have a full node, you have lots of gigs of hard drive space, but if you do that, you only get a few transactions per second. Modularizing validation an argument for this is how to improve on this situation.
What&amp;rsquo;s the problem we are trying to solve? This is a real screenshot from one of the Android wallets.</description></item><item><title>Fraud Proofs</title><link>https://btctranscripts.com/scalingbitcoin/tokyo-2018/fraud-proofs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tokyo-2018/fraud-proofs/</guid><description>Improving SPV client validation and security with fraud proofs
Mustafa Al-Bassam (University College London)
paper: https://arxiv.org/pdf/1809.09044.pdf
https://twitter.com/kanzure/status/1048446183004233731
Introduction I am going to be talking about fraud proofs. It allows lite clients to have a leve lof security of almost the level of a full node. Before I describe fraud proofs, how about we talk about motivations.
Motivations There&amp;rsquo;s a large tradeoff between blockchain decentralization and how much on-chain throughput you can get.</description></item><item><title>Improvements to Bitcoin</title><link>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/maaku-panel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/mit-bitcoin-expo/mit-bitcoin-expo-2016/maaku-panel/</guid><description>This can be a broad range of topics for improvements. I am Mark Friedenbach, I have worked on Bitcoin protocol research, but I also do Core tech engineering at Blockstream. We also have Jonas, an independent Bitcoin Core developer. We also have Andrew Poelstra, who has been core to the crypto work which has been incoporated into Bitcoin, such as libsecp256k1 which we recently integrated in the 0.12 release. It speeds up Bitcoin validation by 7-8x.</description></item><item><title>Overview Of Security Concerns</title><link>https://btctranscripts.com/scalingbitcoin/montreal-2015/overview-of-security-concerns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/montreal-2015/overview-of-security-concerns/</guid><description>Overview of Security Concerns
I am going to talk about scale-related security issues. Scale-related security issues. I said scale, not scalability. We are not talking about scalability. We&amp;rsquo;re talking about changing numbers, and what are the implications, what attacks are easier or harder by changing the block size number. What are we trying to accomplish? What is the system meant to be? Nobody really agrees of course. What&amp;rsquo;s interesting is that as much as we disagree about what was meant to be, there are a lot of key things about what bitcoin could be, these visions share some details.</description></item><item><title>Proof Of Verification For Proof Of Work</title><link>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/proof-of-verification-for-proof-of-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/proof-of-verification-for-proof-of-work/</guid><description>Proof of verification for proof of work: Miners must verify the signatures on bitcoin transactions
https://twitter.com/kanzure/status/1172142603007143936
extended abstract: http://kmlab.iis.u-tokyo.ac.jp/papers/scaling19-matsuura-final.pdf
History lesson In the 90s, we had some timestamping schemes where things are aggregated into one hash and then it would be publicized later in the newspaper. This scheme was commercialized, in fact. However, the resolution of the trust anchor is very limited. It&amp;rsquo;s one day or half-day at best. When we want to verify, we need to visit the online-offline database maintained by a trusted party to get the merkle inclusion paths.</description></item><item><title>Sharding The Blockchain</title><link>https://btctranscripts.com/scalingbitcoin/montreal-2015/sharding-the-blockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/montreal-2015/sharding-the-blockchain/</guid><description>I am going to talk about blockchain sharding. This is one of the scaling solutions that I like the most. I have done the most work on it. In case you don&amp;rsquo;t know who I am, I am a researcher mostly with the ethereum project. Basically the basics of sharding is that in non-sharding, every node does every validation. In a sharding solution, nodes hold a subset of the state, and a subset of the blockchain.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>psbt on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/psbt/</link><description>Recent content in psbt on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 18 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/psbt/index.xml" rel="self" type="application/rss+xml"/><item><title>Segwit, PSBT Vulnerability</title><link>https://btctranscripts.com/la-bitdevs/2020-06-18-luke-dashjr-segwit-psbt-vulnerability/</link><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/la-bitdevs/2020-06-18-luke-dashjr-segwit-psbt-vulnerability/</guid><description>SegWit/PSBT vulnerability (CVE-2020-14199)
Location: LA BitDevs (online)
CVE: https://nvd.nist.gov/vuln/detail/CVE-2020-14199
Trezor blog post on the vulnerability: https://blog.trezor.io/latest-firmware-updates-correct-possible-segwit-transaction-vulnerability-266df0d2860
Greg Sanders Bitcoin dev mailing list post in April 2017: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-August/014843.html
The vulnerability The way Bitcoin transactions are encoded in the software is there is a list of coins essentially and then there is a list of destinations and the amount being sent to each destination. The destinations do not include the fee. Nothing in the transaction tells you what the fee of the transaction is.</description></item><item><title>Hardware Wallets</title><link>https://btctranscripts.com/london-bitcoin-devs/2020-02-05-andrew-chow-hardware-wallets/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2020-02-05-andrew-chow-hardware-wallets/</guid><description>Hardware Wallets in Bitcoin Core
London Bitcoin Devs
Slides: https://www.dropbox.com/s/k02o32d0pagac4r/Andrew%20Chow%20slides.pdf
BIP174 (PSBT): https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki
PSBT Howto for Bitcoin Core: https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md
Introduction Hey everyone. As you may have guessed I’m Andrew Chow. I’m Engineer at Blockstream and I also work on Bitcoin Core a lot, mostly in the wallet. I am going to be talking about hardware wallets and a bit history with them in Core and also how to integrate them in Core and how we are integrating them into Core.</description></item><item><title>Partially Signed Bitcoin Transactions (BIP174)</title><link>https://btctranscripts.com/edgedevplusplus/2018/partially-signed-bitcoin-transactions-bip174/</link><pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/partially-signed-bitcoin-transactions-bip174/</guid><description>https://twitter.com/kanzure/status/1047730297242935296
Introduction Bryan briefly mentioned partially-signed bitcoin transactions (PSBT). I can give more depth on this. There&amp;rsquo;s history and motivation, a background of why this is important, what these things are doing. What is the software doing?
History and motivation Historically, there was no standard for this. Armory had its own format. Bitcoin Core had network-serialized transactions. This ensures fragmentation and it&amp;rsquo;s incomplete and bad that there was no standard. For segwit, a transaction to a legacy node looks like a zero-input transaction, which is a way to flag it as a segwit transaction.</description></item></channel></rss>
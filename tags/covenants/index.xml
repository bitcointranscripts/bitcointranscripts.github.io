<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>covenants on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/covenants/</link><description>Recent content in covenants on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://btctranscripts.com/tags/covenants/index.xml" rel="self" type="application/rss+xml"/><item><title>Bitcoin Script</title><link>https://btctranscripts.com/scalingbitcoin/tokyo-2018/bitcoin-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tokyo-2018/bitcoin-script/</guid><description>Featuring roasbeef
Agenda opcodes OP_CHECKSIGFROMSTACK sighash flags keytree sigs MAST graftroot, taproot covenants, reverse covenants (input restrictions: this input has to be spent with tihs other input, or can only be spent if this other one doesn&amp;rsquo;t exist) stack manipulation script languages (simplicity) tx formats, serialization? what would we change with hard-fork changes to the transaction format? Segwit transaction encoding format sucks; the witnesses are at the end and inline with all the scriptsigs and that should be changed.</description></item><item><title>Covenants</title><link>https://btctranscripts.com/scalingbitcoin/milan-2016/covenants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/milan-2016/covenants/</guid><description>Bitcoin covenants: Opportunities and challenges
Emin Gun Sirer
https://twitter.com/kanzure/status/785071789705728000
https://www.youtube.com/watch?time_continue=10254&amp;amp;v=_Z0ID-0DOnc
We published this last February at an academic workshop. The work itself has interesting ramifications. My real goal here is to start a conversation and then do a follow-up blog post where we collate feedback from the community. We would like to add this to Bitcoin Core. Covenants.
This all started from a very basic and simple observation about the current status of our computing infrastructure.</description></item><item><title>Greg Maxwell - Covenants and BIP119 (2022–05-05)</title><link>https://btctranscripts.com/greg-maxwell/2022-05-05-covenants-bip119/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2022-05-05-covenants-bip119/</guid><description>Name: Greg Maxwell
Topic: Covenants and BIP119
Location: Reddit
Date: May 5th 2022
https://www.reddit.com/r/Bitcoin/comments/uim560/bip_119/i7dhfpb/
Covenants and BIP119 I was asked by an old colleague to respond to your post because I came up with the term covenant as applied Bitcoin many years ago back when I was still a Bitcoin developer.
does bip 119 completely mess the fungibility of bitcoin. If the idea of covenants is that you can create bitcoin that can only be sent to certain addresses, doesnt that make two classes of bitcoin?</description></item><item><title>Jeremy Rubin - Covenants (2017-01-26)</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-jeremy-rubin-covenants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-jeremy-rubin-covenants/</guid><description>Name: Jeremy Rubin
Topic: Structuring Multi Transaction Contracts in Bitcoin
Location: BPASE 2017, Stanford University
Date: January 26th 2017
Video: https://www.youtube.com/watch?v=r7xN7K0OqaA
Slides: https://rubin.io/public/pdfs/multi-txn-contracts.pdf
Intro Hey everyone. How is it going? Happy to be going last right now given that I had all these wonderful speakers before me to explain so much of what I am about to tell you. I’m going to talk to you today about structuring multi-transaction contracts in Bitcoin.</description></item><item><title>Jeremy Rubin, Andrew Poelstra - Covenants (2021-11-05)</title><link>https://btctranscripts.com/tabconf/2021/2021-11-05-jeremy-rubin-andrew-poelstra-covenants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2021/2021-11-05-jeremy-rubin-andrew-poelstra-covenants/</guid><description>Name: Jeremy Rubin and Andrew Poelstra
Topic: Covenants
Location: TABConf (The Atlanta Bitcoin Conference)
Date: November 5th 2021
Video: No video was posted online
As per Socratic village rules names of all attendees (other than the advertised speakers) have been anonymized and audio will not be published to preserve anonymity of the question askers.
The covenant concept Shaun Apps (SA): I’ll kick things off with a bit of an introduction. Both Andrew and Jeremy will present.</description></item><item><title>Kevin Loaec, Antoine Poinsot - Revault (2020-05-26)</title><link>https://btctranscripts.com/london-bitcoin-devs/2020-05-26-kevin-loaec-antoine-poinsot-revault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2020-05-26-kevin-loaec-antoine-poinsot-revault/</guid><description>Name: Kevin Loaec and Antoine Poinsot
Topic: Revault - A Multiparty Vault Architecture
Location: London Bitcoin Devs (online)
Date: May 26th 2020
Video: https://www.youtube.com/watch?v=7CE4aiFxh10
Kevin slides: https://www.dropbox.com/s/rj45ebnic2m0q2m/kevin%20loaec%20revault%20slides.pdf?dl=0
Antoine slides: https://www.dropbox.com/s/xaoior0goo37247/Antoine%20Poinsot%20Revault%20slides.odp?dl=0
Intro (Michael Folkson) This is London Bitcoin Devs. This is on Zoom and live-streaming on YouTube. Last week we had a Socratic Seminar on vaults, covenants and CHECKTEMPLATEVERIFY. There is a video up for that. There is also a transcript, @btctranscripts on Twitter.</description></item><item><title>Merkleized Abstract Syntax Trees - MAST (2018-03-06)</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</guid><description>https://twitter.com/kanzure/status/972120890279432192
See also http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/
MAST stuff You could directly merkleize scripts if you switch from IF, IFNOT, ELSE with IFJUMP that has the number of bytes.
With graftroot and taproot, you never to do any scripts (which were a hack to get things started). But we&amp;rsquo;re doing validation and computation.
You take every single path it has; so instead, it becomes &amp;hellip; certain condition, or certain not conditions&amp;hellip; You take every possible ifs, you use this, you say it&amp;rsquo;s one of these, then you specify which one, and you show it and everyone else can validate this.</description></item><item><title>Plasma Cash</title><link>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/plasma-cash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/plasma-cash/</guid><description>Plasma Cash: Towards more efficient plasma constructions
Non-custodial sidechains for bitcoin utilizing plasma cash and covenants
Georgios Konstantopoulos
https://twitter.com/kanzure/status/1172108023705284609
paper: https://github.com/loomnetwork/plasma-paper/blob/master/plasma_cash.pdf
slides: https://gakonst.com/scalingbitcoin2019.pdf
Introduction We have known how to do these things for at least a year, but the question is how can we find the minimum changes that we can figure out to do in bitcoin if any on how to explore the layer 2 space in a better sense rather than just accepting that lightning network is the dominant solution?</description></item></channel></rss>
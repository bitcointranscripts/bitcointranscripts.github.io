<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>libsecp256k1 on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/libsecp256k1/</link><description>Recent content in libsecp256k1 on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 20 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/libsecp256k1/index.xml" rel="self" type="application/rss+xml"/><item><title>Libsecp256k1 Meeting</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/libsecp256k1-meeting/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/libsecp256k1-meeting/</guid><description>Topics: Scope, Priorities Next release Dec 16th Scope: Informal agreeement currently What new modules to add? Needs a specification (whatever that means, Pseudocode etc.0 Should we formalize the agreement more? Should also not be too specific What are examples where this came up in the past? Exfill, Ecdh, Elswift, SIlent payments, musig, schnorr, adaptor sigs, half-agg How specific do we need to be? Tie it to examples to be more clear ECIES (Interesting in the future?</description></item><item><title>Libsec Panel</title><link>https://btctranscripts.com/bitcoin-review-podcast/libsec-panel/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-review-podcast/libsec-panel/</guid><description>Intros NVK: I have an absolute rock star team here. So why don&amp;rsquo;t I start introducing the panel? Tim, hello! Do you want to tell a very brief what do you do?
Tim: Yes, so my name is Tim Ruffing. I am a maintainer of the libsecp256k1 library. I do work for Blockstream, who pay me to do this and also who pay me to do research on cryptography and all kinds of aspects related to Bitcoin.</description></item><item><title>Libsecp256k1 Maintainers Meeting</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-libsecp256k1/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-libsecp256k1/</guid><description>Q: Why C89? When I asked you this question a few years ago, I think you said gmaxwell.
A: There are a number of embedded devices that only support C89 and it&amp;rsquo;d be good to support those devices. That was the answer back then at least.
Q: Is it a large cost to keep doing C89?
A: The only cost is for the context stuff we want to make threadlocal. The CPUid or the x86-specific things.</description></item></channel></rss>
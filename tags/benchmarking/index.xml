<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>benchmarking on ₿itcoin Transcripts</title><link>https://btctranscripts.com/tags/benchmarking/</link><description>Recent content in benchmarking on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 25 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/tags/benchmarking/index.xml" rel="self" type="application/rss+xml"/><item><title>Macro Benchmarking</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2025-02/benchmarking/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2025-02/benchmarking/</guid><description>Add a macro benchmark suite with longer-running operations, exercising a different set of functionality that is performance-critical.
One of them could be the speed of an assumeUTXO load-and-dump (this would check block read/write and (de)serialization, but only part of validation). Another one could be an actual IBD for 840-880k blocks (small part of IBD, but should produce a representative comparison quickly). Another one would be a reindex-chainstate up to e.g. 880k blocks (more realistic, but takes long and doesn&amp;rsquo;t involve reading/writing blocks).</description></item></channel></rss>
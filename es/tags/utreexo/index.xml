<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>utreexo on Transcripciones de ₿itcoin</title><link>https://btctranscripts.com/es/tags/utreexo/</link><description>Recent content in utreexo on Transcripciones de ₿itcoin</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 06 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/es/tags/utreexo/index.xml" rel="self" type="application/rss+xml"/><item><title>Utreexo</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2019-06/2019-06-06-utreexo/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2019-06/2019-06-06-utreexo/</guid><description>Utreexo: acumulador basado en hash para UTXOs de bitcoin
http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2018-10-08-utxo-accumulators-and-utreexo/
http://diyhpl.us/wiki/transcripts/mit-bitcoin-expo-2019/utreexo/
Documento Utreexo https://eprint.iacr.org/2019/611.pdf
https://github.com/mit-dci/utreexo
https://twitter.com/kanzure/status/1136560700187447297
Introducción Sigues descargando todo; en lugar de escribir en tu base de datos UTXO, modificas tu acumulador. Aceptas una prueba de que está en el acumulador UTXO, tú mismo la pones ahí, simplemente ya no la recuerdas. El resultado final es que almacenas menos de un kilobyte en lugar de 4 GB o así. Pero el inconveniente es que necesitas todas esas pruebas.</description></item><item><title>Acumuladores UTXO, compromisos UTXO y Utreexo</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2018-10/2018-10-08-utxo-accumulators-and-utreexo/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2018-10/2018-10-08-utxo-accumulators-and-utreexo/</guid><description>https://twitter.com/kanzure/status/1049112390413897728
Si la gente vio la charla de Benedikt, hace dos días, está relacionado. Es una construcción diferente, pero el mismo objetivo. La idea básica es, y creo que Cory comenzó a hablar de esto hace unos meses en la lista de correo &amp;hellip; en lugar de almacenar todos los UTXOs en leveldb, almacenar el hash de cada UTXO, y entonces es la mitad del tamaño, y entonces casi se podría crear a partir del hash de la entrada, es como 10 bytes más.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>validación on Transcripciones de ₿itcoin</title><link>https://btctranscripts.com/es/tags/validaci%C3%B3n/</link><description>Recent content in validación on Transcripciones de ₿itcoin</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/es/tags/validaci%C3%B3n/index.xml" rel="self" type="application/rss+xml"/><item><title>Seguridad de la cartera de hardware</title><link>https://btctranscripts.com/es/andreas-antonopoulos/2019-02-01-andreas-antonopoulos-hardware-wallet-security/</link><pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/andreas-antonopoulos/2019-02-01-andreas-antonopoulos-hardware-wallet-security/</guid><description>Tema: ¿Son los monederos electrónicos lo suficientemente seguros?
Localización: Canal de YouTube de Andreas Antonopoulos
¿Son los monederos electrónicos lo suficientemente seguros? P - Hola Andreas. Almaceno mi criptografía en un Ledger. Escuchando a Trace Mayer esta semana me preocupa que esto no sea lo suficientemente seguro. Trace dice que necesitas Bitcoin Core para la validación de la red, Armory para gestionar las claves privadas y un protocolo Glacier para los procedimientos operativos estándar y un portátil Purism para el hardware.</description></item><item><title>Árboles de sintaxis abstracta merkleizados - MAST</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</guid><description>https://twitter.com/kanzure/status/972120890279432192
Ver también http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/
Cosas de MAST Podrías merkleizar directamente los scripts si cambias de IF, IFNOT, ELSE con IFJUMP que tiene el número de bytes.
Con graftroot y taproot, nunca para hacer cualquier scripts (que eran un hack para empezar las cosas). Pero estamos haciendo la validación y el cálculo.
Tomas todos los caminos que tiene; así que en lugar de eso, se convierte en &amp;hellip; cierta condición, o ciertas no condiciones&amp;hellip; Tomas todos los posibles ifs, usas esto, dices que es uno de estos, luego especificas cuál, y lo muestras y todos los demás pueden validar esto.</description></item><item><title>Agregación de firmas</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09-06-signature-aggregation/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09-06-signature-aggregation/</guid><description>﻿https://twitter.com/kanzure/status/907065194463072258
Agregación de firmas Sipa, ¿puedes firmar y verificar firmas ECDSA a mano? No. Sobre GF(43), tal vez. Los inversos podrían tomar un poco de tiempo para computar. Sobre GF(2).
Creo que lo primero de lo que deberíamos hablar es de algunas definiciones. Me gustaría empezar distinguiendo entre tres cosas: Agregación de claves, agregación de firmas y validación de lotes. Más adelante, la multifirma.
Hay tres problemas diferentes. La agregación de claves es cuando hay un número de personas con su propia clave, que quieren producir una clave combinada que sólo puede firmar cuando se reúnen.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>developer-tools on Transcripciones de ₿itcoin</title><link>https://btctranscripts.com/es/tags/developer-tools/</link><description>Recent content in developer-tools on Transcripciones de ₿itcoin</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 27 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/es/tags/developer-tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Fuzzing</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2023-04/2023-04-27-fuzzing/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2023-04/2023-04-27-fuzzing/</guid><description>Slides: https://docs.google.com/presentation/d/1NlTw_n60z9bvqziZqU3H3Jw7Xs5slnQoehYXhEKrzOE
Fuzzing El fuzzing se realiza de forma continua. Los objetivos del fuzzing pueden dar sus frutos incluso años más tarde encontrando nuevos bugs. Ejemplo en la diapositiva sobre libFuzzer fuzzing una función parse_json que podría bloquearse en alguna entrada extraña, pero no informará de entradas json no válidas que pasan el análisis. libFuzzer hace la cobertura de bucle de retroalimentación guiada + ayuda con la exploración del flujo de control.</description></item><item><title>Taller de depuración de Bitcoin Core</title><link>https://btctranscripts.com/es/advancing-bitcoin/2020/2020-02-07-fabian-jahr-debugging-workshop/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/advancing-bitcoin/2020/2020-02-07-fabian-jahr-debugging-workshop/</guid><description>Vídeo: No se ha publicado ningún vídeo en Internet
Presentación de Fabian en el Bitcoin Edge Dev++ 2019: https://btctranscripts.com/scalingbitcoin/tel-aviv-2019/edgedevplusplus/debugging-bitcoin/
Depuración de Bitcoin Core doc: https://github.com/fjahr/debugging_bitcoin
Taller de depuración de Bitcoin Core: https://gist.github.com/fjahr/5bf65daaf9ff189a0993196195005386
Introducción En primer lugar bienvenido al taller de depuración de Bitcoin Core. Todo lo que sé más o menos sobre el uso de un depurador para aprender de Bitcoin Core y para solucionar problemas en Bitcoin Core. No he ido con diapositivas tradicionales porque quiero enseñarte a usar esta herramienta, el depurador, en el contexto de Bitcoin Core.</description></item><item><title>Bitcoin CLI y Regtest</title><link>https://btctranscripts.com/es/austin-bitcoin-developers/2018-08-17-richard-bondi-bitcoin-cli-regtest/</link><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/austin-bitcoin-developers/2018-08-17-richard-bondi-bitcoin-cli-regtest/</guid><description>Clone este repositorio para seguir el proceso: https://github.com/austin-bitcoin-developers/regtest-dev-environment
https://twitter.com/kanzure/status/1161266116293009408
Introducción Así que el objetivo aquí como Justin dijo es conseguir el entorno regtest configurado. Las ventajas que mencionó, también existe la ventaja de que usted puede minar sus propias monedas a voluntad por lo que no tiene que perder el tiempo con grifos testnet. También puedes generar bloques, así que no tienes que esperar seis confirmaciones o lo que sea, ni siquiera los diez minutos.</description></item></channel></rss>
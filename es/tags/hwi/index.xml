<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hwi on Transcripciones de ₿itcoin</title><link>https://btctranscripts.com/es/tags/hwi/</link><description>Recent content in hwi on Transcripciones de ₿itcoin</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Fri, 07 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/es/tags/hwi/index.xml" rel="self" type="application/rss+xml"/><item><title>Hardware Wallets</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2019-06/2019-06-07-hardware-wallets/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2019-06/2019-06-07-hardware-wallets/</guid><description>https://twitter.com/kanzure/status/1136924010955104257
¿Cuánto debería hacer Bitcoin Core y cuánto otras bibliotecas? Andrew Chow escribió la maravillosa herramienta HWI. Ahora mismo tenemos un pull request para soportar firmantes externos. El script HWI puede hablar con la mayoría de los monederos hardware porque tiene todos los controladores incorporados, y puede obtener claves de ellos, y firmar transacciones arbitrarias. Eso es más o menos lo que hace. Es un poco manual, sin embargo. Tienes que introducir algunos comandos python; llamar a algún RPC de Bitcoin Core para obtener el resultado; así que escribí algunos métodos RPC de conveniencia para Bitcoin Core que te permiten hacer las mismas cosas con menos comandos.</description></item></channel></rss>
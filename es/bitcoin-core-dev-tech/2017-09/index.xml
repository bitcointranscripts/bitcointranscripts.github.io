<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitcoin Core Dev Tech 2017 on Transcripciones de ₿itcoin</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/</link><description>Recent content in Bitcoin Core Dev Tech 2017 on Transcripciones de ₿itcoin</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Thu, 07 Sep 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/index.xml" rel="self" type="application/rss+xml"/><item><title>Árboles de sintaxis abstracta merkleizados</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/2017-09-07-merkleized-abstract-syntax-trees/</link><pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/2017-09-07-merkleized-abstract-syntax-trees/</guid><description>﻿https://twitter.com/kanzure/status/907075529534328832
Árboles de sintaxis abstracta merkleizados (MAST) https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014932.html
Voy a hablar del esquema que publiqué ayer en la lista de correo, que consiste en implementar MAST (árboles de sintaxis abstracta merkleizados) en bitcoin de la forma menos invasiva posible. Está dividido en dos grandes rasgos de consenso que juntos nos dan MAST. Empezaré con el último BIP.
Esto es la evaluación de la llamada de cola. Podemos generalizar P2SH para darnos capacidades más generales, que un solo script de redimensionamiento.</description></item><item><title>Agregación de firmas</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/2017-09-06-signature-aggregation/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/2017-09-06-signature-aggregation/</guid><description>﻿https://twitter.com/kanzure/status/907065194463072258
Agregación de firmas Sipa, ¿puedes firmar y verificar firmas ECDSA a mano? No. Sobre GF(43), tal vez. Los inversos podrían tomar un poco de tiempo para computar. Sobre GF(2).
Creo que lo primero de lo que deberíamos hablar es de algunas definiciones. Me gustaría empezar distinguiendo entre tres cosas: Agregación de claves, agregación de firmas y validación de lotes. Más adelante, la multifirma.
Hay tres problemas diferentes. La agregación de claves es cuando hay un número de personas con su propia clave, que quieren producir una clave combinada que sólo puede firmar cuando se reúnen.</description></item><item><title>Notas de la reunión</title><link>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/2017-09-05-meeting-notes/</link><pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/es/bitcoin-core-dev-tech/2017-09/2017-09-05-meeting-notes/</guid><description>coredev.tech septiembre 2017
https://twitter.com/kanzure/status/907233490919464960
((Como siempre, cualquier error es probablemente mío, etc.))
Introducción Existe una gran preocupación sobre si BlueMatt se ha convertido en un nombre erróneo.
Presentación del lunes por la noche: https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
Creo que deberíamos seguir usando #bitcoin-core-dev para cualquier cosa relacionada con el cambio de Bitcoin Core y tratar de mantener las cosas abiertas aunque estemos juntos aquí hoy y mañana y el siguiente.
Carteras y poda de bloques y rescates Nadie produce un cambio P2SH cuando tiene una salida nativa.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arik Sosman on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/arik-sosman/</link><description>Recent content in Arik Sosman on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 18 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/arik-sosman/index.xml" rel="self" type="application/rss+xml"/><item><title>Lightning on Taproot</title><link>https://btctranscripts.com/bitcoinplusplus/layer-2/lightning-on-taproot/</link><pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoinplusplus/layer-2/lightning-on-taproot/</guid><description>My name is Arik. I work at Spiral. And most recently I&amp;rsquo;ve been working on adding support for taproot channels. At least I try to work on that, but I&amp;rsquo;m getting pulled back into Swift bindings. And this presentation is supposed to be about why the taproot spec is laid out the way it is. What are some of the motivations, the constraints, limitations that are driving the design. And I wanna really dig deep into the math that some of the vulnerabilities that we&amp;rsquo;re trying to avoid as well as how we&amp;rsquo;re solving those issues.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marco Falke on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/marco-falke/</link><description>Recent content in Marco Falke on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 05 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/marco-falke/index.xml" rel="self" type="application/rss+xml"/><item><title>Bitcoin Toolchain, Unit Testing And Deterministic Builds</title><link>https://btctranscripts.com/edgedevplusplus/2018/bitcoin-toolchain-unit-testing-and-deterministic-builds/</link><pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/bitcoin-toolchain-unit-testing-and-deterministic-builds/</guid><description>https://twitter.com/kanzure/status/1048103693885759489
Introduction Just to continue on what James said about the build system on Bitcoin Core&amp;hellip; I am going to talk about deterministic builds. I am MarcoFalke and I also work at Chaincode Labs in NYC.
Bitcoin Core Build System The build system is based on autotools, so it should just work anywhere where autotools runs. Just run ./autogen.sh ./configure and then make, that&amp;rsquo;s it.
We recently added support for MSVC builds mostly for Windows developers to do native builds not having to switch between Linux and Windows all the time.</description></item></channel></rss>
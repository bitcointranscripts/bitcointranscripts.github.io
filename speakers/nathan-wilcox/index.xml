<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nathan Wilcox on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/nathan-wilcox/</link><description>Recent content in Nathan Wilcox on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://btctranscripts.com/speakers/nathan-wilcox/index.xml" rel="self" type="application/rss+xml"/><item><title>Bitcoin Load Spike Simulation</title><link>https://btctranscripts.com/scalingbitcoin/montreal-2015/bitcoin-load-spike-simulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/montreal-2015/bitcoin-load-spike-simulation/</guid><description>Our goal for this project, our rationale of what we&amp;rsquo;re interesting is when many transactions arrive in a short period of time. This could be because of denial of service attacks where few entities are creating a large number of transactions, or many people wanting to create transactions, like a shopping spree. We wanted to answer two questions, how does the temporary spike in transaction rate affect confirmation delay distribution? For a given spike shape, can we change the block size and how would that effect the evolution of the system?</description></item><item><title>Snarks</title><link>https://btctranscripts.com/scalingbitcoin/montreal-2015/snarks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/scalingbitcoin/montreal-2015/snarks/</guid><description>some setup motivating topics:
practicality pcp theorem trustless setup magic away the trusted setup schemes without trusted setup pcp theorem is the existent proof that the spherical cow exists. people:
Andrew Miller (AM) Madars Virza (MV) Andrew Poelstra (AP) Bryan Bishop (BB) Nathan Wilcox ZZZZZ: zooko gmaxwell&amp;rsquo;s ghost (only in spirit) SNARKs always require some sort of setup. PCP-based SNARKs can use random oracle assumption instantiated by hash function, sha256 acts as the random oracle.</description></item></channel></rss>
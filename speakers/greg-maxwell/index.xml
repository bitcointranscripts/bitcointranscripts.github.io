<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Greg Maxwell on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/greg-maxwell/</link><description>Recent content in Greg Maxwell on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 05 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/greg-maxwell/index.xml" rel="self" type="application/rss+xml"/><item><title>Covenants and BIP119</title><link>https://btctranscripts.com/greg-maxwell/2022-05-05-covenants-bip119/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2022-05-05-covenants-bip119/</guid><description>Location: Reddit
https://www.reddit.com/r/Bitcoin/comments/uim560/bip_119/i7dhfpb/
Covenants and BIP119 I was asked by an old colleague to respond to your post because I came up with the term covenant as applied Bitcoin many years ago back when I was still a Bitcoin developer.
does bip 119 completely mess the fungibility of bitcoin. If the idea of covenants is that you can create bitcoin that can only be sent to certain addresses, doesnt that make two classes of bitcoin?</description></item><item><title>Replacing PGP with Bitcoin public key infrastructure</title><link>https://btctranscripts.com/greg-maxwell/2020-11-25-greg-maxwell-replacing-pgp/</link><pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-11-25-greg-maxwell-replacing-pgp/</guid><description>Location: Reddit
https://www.reddit.com/r/Bitcoin/comments/k0rnq8/pgp_is_replaceable_with_the_bitcoin_public_key/gdjv1dn?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3
Is PGP replaceable with Bitcoin public key infrastructure? This is true in the same sense that PGP can also be replaced with some fancy functions on a school kids graphing calculator.
Yes you can construct some half-assed imitation of pgp using stuff from Bitcoin, but you probably shouldn&amp;rsquo;t.
If all you really want is some file signing thing without any key certification or encryption, I suggest looking into openbsd&amp;rsquo;s signify.</description></item><item><title>Yubikey Security</title><link>https://btctranscripts.com/greg-maxwell/2020-11-05-greg-maxwell-yubikey-security/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-11-05-greg-maxwell-yubikey-security/</guid><description>By this logic, a yubikey would also be a great targeting vector.
They would be, and if US intelligence services have not compromised yubis or at least have a perfect targeted substitution solutions for them then they should all be fired for gross incompetence and mismanagement of their funding.
Likewise, if parties which things of significant value to secure who might be targeted by state level attackers are securing those things with just yubs instead of using yubis as a second factor in an otherwise secure setup then those parties ought to be fired too.</description></item><item><title>Why do hardware wallets not support altcoins?</title><link>https://btctranscripts.com/greg-maxwell/2020-11-01-greg-maxwell-hardware-wallets-altcoins/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-11-01-greg-maxwell-hardware-wallets-altcoins/</guid><description>They&amp;rsquo;re an enormous distraction and hazard to software development. It&amp;rsquo;s hard enough to correctly and safely write software to support one system. Every minute spent creating and testing the software for some alternative is a minute taken away from supporting Bitcoin.
I can say first hand that my efforts to review hardware wallet code against possible vulnerabilities have been actively thwarted by hardware wallet codebases being crapped up with support for altcoins.</description></item><item><title>Bitcoin Core Github</title><link>https://btctranscripts.com/greg-maxwell/2020-10-26-greg-maxwell-bitcoin-core-github/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-10-26-greg-maxwell-bitcoin-core-github/</guid><description>Location: Reddit
https://www.reddit.com/r/Bitcoin/comments/jiat6s/can_github_censor_the_code_of_bitcoin_the/ga5k9ap?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3
Can GitHub censor Bitcoin Core? The event isn&amp;rsquo;t news to Bitcoin developers either, github has done this a number of times before&amp;ndash; even taking Mozilla offline as a result of an obviously spurious DMCA complaint.
Every developer that has the repository cloned has the full history.
Not just the developers, thousands of users who build from git checkouts have the complete source code history too. There is also a live replica available over Tor at http://www.</description></item><item><title>Checkmultisig Bug</title><link>https://btctranscripts.com/greg-maxwell/2020-08-27-greg-maxwell-checkmultisig-bug/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-08-27-greg-maxwell-checkmultisig-bug/</guid><description>What is stopping the OP_CHECKMULTISIG extra pop bug from being fixed?
Location: Bitcointalk
https://bitcointalk.org/index.php?topic=5271566.msg55079521#msg55079521
What is stopping the OP_CHECKMULTISIG extra pop bug from being fixed? I think it is probably wrong to describe it as a bug. I think it was intended to indicate which signatures were present to fix the otherwise terrible performance of CHECKMULTISIG.
Regardless, there is no real point to fixing it: Any &amp;lsquo;fix&amp;rsquo; would require that all software using CHECKMULTISIG get an incompatible change (as part of a highly disruptive hard fork).</description></item><item><title>Is Taproot development moving too fast or too slow?</title><link>https://btctranscripts.com/greg-maxwell/2020-07-20-greg-maxwell-taproot-pace/</link><pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-07-20-greg-maxwell-taproot-pace/</guid><description>Taproot has been discussed for 2.5 years already and by the time it would activate it will certainly at this point be over three years.
The bulk of the Taproot proposal, other than Taproot itself and specific encoding details, is significantly older too. (Enough that earlier versions of our proposals have been copied and activated in other cryptocurrencies already)
Taproot&amp;rsquo;s implementation is also extremely simple, and will make common operations in simple wallets simpler.</description></item><item><title>Useful Proof Of Work</title><link>https://btctranscripts.com/greg-maxwell/2020-07-05-greg-maxwell-useful-proof-of-work/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-07-05-greg-maxwell-useful-proof-of-work/</guid><description>Why can’t hash power be used for something useful?
Location: Reddit
https://www.reddit.com/r/Bitcoin/comments/hlu2ah/why_cant_hash_power_be_used_for_something_useful/fx1axlt?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3
Why can’t hash power be used for something useful? There is a general game theory reason why this doesn&amp;rsquo;t work out:
Imagine that you are considering attempting to reorder the chain to undo a transaction. You could decide to not attempt the attack in which case your cost is just the payment you made, or you could attempt the attack in which case the cost is the energy you put into the plus the cost of the payment times your odds of failure.</description></item><item><title>Liquid Censorship Resistance</title><link>https://btctranscripts.com/greg-maxwell/2020-06-08-greg-maxwell-liquid-censorship-resistance/</link><pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2020-06-08-greg-maxwell-liquid-censorship-resistance/</guid><description>Location: Reddit
https://www.reddit.com/r/Bitcoin/comments/gye0yv/liquid_censorship_resistance/ftcllcm?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3
Is Liquid censorship resistant? Liquid isn&amp;rsquo;t particularly censorship resistant. If someone tells you it is they&amp;rsquo;re confused.
Back when I worked at Blockstream there was thought in the design to mitigate some of the risks: make transactions difficult to identify, even the peg outs use a ring signature to authorize them, and Blockstream should have no ability to change the software in use (instead, they&amp;rsquo;d have to convince each of the functionaries to run replacement software if they wanted it deployed&amp;ndash; and the software is open source).</description></item><item><title>Should we be more concerned by the prospect of a 51 percent mining attack?</title><link>https://btctranscripts.com/greg-maxwell/2019-10-04-majority-miner-attack/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2019-10-04-majority-miner-attack/</guid><description>I think questions like this are ultimately the result of a fundamental lack of understanding about what Bitcoin is doing.
The problem Bitcoin is attempting to solve is getting everyone everywhere to agree on the same stable history of transactions. This is necessary because in order to prevent users from printing money from nothing the system must have a rule that you can&amp;rsquo;t spend a given coin more than once&amp;ndash; like I have a dollar then pay both alice and bob that dollar, creating a dollar out of nothing.</description></item><item><title>Bitcoin Core Testing</title><link>https://btctranscripts.com/greg-maxwell/2018-09-23-greg-maxwell-bitcoin-core-testing/</link><pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2018-09-23-greg-maxwell-bitcoin-core-testing/</guid><description>I believe slower would potentially result in less testing and not likely result in more at this point.
If we had an issue that newly introduced features were turning out to frequently have serious bugs that are discovered shortly after shipping there might be a case that it would improve the situation to delay improvements more before putting them into critical operation&amp;hellip; but I think we&amp;rsquo;ve been relatively free of such issues.</description></item><item><title>Multiple Implementations</title><link>https://btctranscripts.com/greg-maxwell/2018-09-23-greg-maxwell-multiple-implementations/</link><pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2018-09-23-greg-maxwell-multiple-implementations/</guid><description>Location: Bitcointalk
https://bitcointalk.org/index.php?topic=5035144.msg46077622#msg46077622
Risks of multiple implementations They would create more risk. I don&amp;rsquo;t think there is any reason to doubt that this is an objective fact which has been borne out by the history.
First, failures in software are not independent. For example, when BU nodes were crashing due to xthin bugs, classic were also vulnerable to effectively the same bug even though their code was different and some triggers that would crash one wouldn&amp;rsquo;t crash the other.</description></item><item><title>bech32 design</title><link>https://btctranscripts.com/greg-maxwell/2017-12-22-bech32-design/</link><pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2017-12-22-bech32-design/</guid><description>Location: Bitcointalk
https://bitcointalk.org/index.php?topic=2624630.msg26762627#msg26762627
bech32 design Bech32 is designed for human use and basically nothing else, the only consideration for QR codes is that all caps is also permitted.
For all your talk of human considerations you give a strong signal of having seldom actually used bitcoin addresses as a human. 1/3 type addresses are full of visually confusing characters and the case modulations are a pain to read and enter correctly.</description></item><item><title>Advances In Block Propagation</title><link>https://btctranscripts.com/greg-maxwell/2017-11-27-gmaxwell-advances-in-block-propagation/</link><pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2017-11-27-gmaxwell-advances-in-block-propagation/</guid><description>slides: https://web.archive.org/web/20190416113003/https://people.xiph.org/~greg/gmaxwell-sf-prop-2017.pdf
https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding
efficient block transfer: https://web.archive.org/web/20170912171304/https://people.xiph.org/~greg/efficient.block.xfer.txt
low latency block xfer: https://web.archive.org/web/20160607023347/https://people.xiph.org/~greg/lowlatency.block.xfer.txt
https://web.archive.org/web/20160607023408/https://people.xiph.org/~greg/mempool_sync_relay.txt
https://web.archive.org/web/20160607023359/http://people.xiph.org/~greg/weakblocks.txt
compact blocks FAQ https://bitcoincore.org/en/2016/06/07/compact-blocks-faq/
some history https://www.reddit.com/r/btc/comments/557ihg/what_are_the_arguments_against_xthin_blocks/d88q5l4/
more history https://www.reddit.com/r/btc/comments/6p076l/segwit_only_allows_170_of_current_transactions/dkmugw5/
https://twitter.com/kanzure/status/944656354307919873
Introduction I&amp;rsquo;ll be talking about some recent advances in block propagation and why this stuff is important. I am going to talk about how the original bitcoin p2p protocol works, and it doesn&amp;rsquo;t work that way for the most part anymore. I will talk about the history of this, including fast block relay protocol, block network coding, and then building up to where the state of the art is today.</description></item><item><title>Deep Dive Bitcoin Core V0.15</title><link>https://btctranscripts.com/greg-maxwell/2017-08-28-gmaxwell-deep-dive-bitcoin-core-v0.15/</link><pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2017-08-28-gmaxwell-deep-dive-bitcoin-core-v0.15/</guid><description>slides: https://people.xiph.org/~greg/gmaxwell-sf-015-2017.pdf
https://twitter.com/kanzure/status/903872678683082752
git repo: https://github.com/bitcoin/bitcoin
preliminary v0.15 release notes (not finished yet): http://dg0.dtrt.org/en/2017/09/01/release-0.15.0/
Introduction Alright let&amp;rsquo;s get started. There are a lot of new faces in the room. I feel like there&amp;rsquo;s an increase in excitement around bitcoin right now. That&amp;rsquo;s great. For those of you who are new to this space, I am going to be talking about some technical details here, so you&amp;rsquo;ll get to drink from the firehose.</description></item><item><title>Confidential Transactions</title><link>https://btctranscripts.com/greg-maxwell/2017-04-28-gmaxwell-confidential-transactions/</link><pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2017-04-28-gmaxwell-confidential-transactions/</guid><description>https://twitter.com/kanzure/status/859604355917414400
Introduction Thank you.
So as mentioned, I am going to be talking about confidential transactions today. And I look at confidential transactions as a building block fundamental piece of technology, it&amp;rsquo;s not like altcoin or something like that. It&amp;rsquo;s not a turnkey system, it&amp;rsquo;s some fundamental tech, and there are many different ways to use it and deploy it.
My interest in this technology is primarily driven by bitcoin, but the technology here could be applied to many other things, including things outside of the cryptocurrency space.</description></item><item><title>Mining And Block Size Etc</title><link>https://btctranscripts.com/greg-maxwell/2015-11-09-gmaxwell-mining-and-block-size-etc/</link><pubDate>Mon, 09 Nov 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-11-09-gmaxwell-mining-and-block-size-etc/</guid><description>Mining, block size, etc. So uh I am really excited to announce or introduce our next speaker, Greg Maxwell. Greg, well, there are people who talk and there&amp;rsquo;s people who do, and Greg is definitely a doer. He is definitely one of the most accomplished if not most helpful, one of the most active people, not just in terms of commits that we see, but also things we don&amp;rsquo;t see, like input regarding bugs and to other developers and being a great voice in this industry.</description></item><item><title>Sidechains Elements</title><link>https://btctranscripts.com/greg-maxwell/2015-06-08-gmaxwell-sidechains-elements/</link><pubDate>Mon, 08 Jun 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-06-08-gmaxwell-sidechains-elements/</guid><description>Bringing New Elements to Bitcoin with Sidechains
SF Bitcoin Devs Meetup
Gregory Maxwell DE47 BC9E 6D2D A6B0 2DC6 10B1 AC85 9362 B041 3BFA
slides: https://people.xiph.org/~greg/blockstream.gmaxwell.elements.talk.060815.pdf
https://github.com/ElementsProject/elements/
Hello, I am Greg Maxwell, one of the developers of the Bitcoin system and its reference software. Since 2011, I have worked on the system facing many interesting challenges and developing many solutions to many problems, adapting and growing and maintaining Bitcoin along with a community of other technical contributors.</description></item><item><title>Bitcoin Selection Cryptography</title><link>https://btctranscripts.com/greg-maxwell/2015-04-29-gmaxwell-bitcoin-selection-cryptography/</link><pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-04-29-gmaxwell-bitcoin-selection-cryptography/</guid><description>slides: https://people.xiph.org/~greg/gmaxwell_sfbitcoin_2015_04_20.pdf A deep dive with Bitcoin Core developer Greg Maxwell
The blueberry muffins are a lie. But instead I got some other things to present about. My name is Greg Maxwell. I am one of the committers to Bitcoin Core. I am one of the five people with commit access. I have been working on Bitcoin since 2011. Came into Bitcoin through assorted paths as has everyone else.</description></item><item><title>Bitcoin Sidechains - Unchained Epicenter</title><link>https://btctranscripts.com/misc/bitcoin-sidechains-unchained-epicenter-adam3us-gmaxwell/</link><pubDate>Tue, 03 Feb 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/misc/bitcoin-sidechains-unchained-epicenter-adam3us-gmaxwell/</guid><description>EB65 – Adam Back &amp;amp; Greg Maxwell: Sidechains Unchained
people:
Sebastien Couture Brian Fabian Crain Adam Back (adam3us) Greg Maxwell (gmaxwell) Brian: We are here today we have Adam Back and Greg Maxwell, to anyone who is following bitcoin and bitcoin&amp;rsquo;s development, you will have probably heard of these two gentlemen. I was fortunate enough that the first time that I went to a bitcoin conference at the beginning of my involvement in this space, it was in Amsterdam 2013 and I somehow randomly ended up having dinner twice with Adam which really was super fascinating talking to him about bitcoin, and so I&amp;rsquo;m really exciting to have them on today, especially since we are going to have a chance to talk about a project we have talked about many times on this show before, with different people, which is sidechains, because sidechains I think that everyone is in agreement that it is one of the more interesting projects in the space, and a lot of people have many questions about it.</description></item><item><title>libsecp256k1 testing</title><link>https://btctranscripts.com/greg-maxwell/2015-01-08-libsecp256k1-testing/</link><pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-01-08-libsecp256k1-testing/</guid><description>Today OpenSSL de-embargoed CVE-2014-3570 &amp;ldquo;Bignum squaring may produce incorrect results&amp;rdquo;. That particular security advisory is not a concern for Bitcoin users, but it allows me to explain some of the context behind a slightly cryptic statement I made in the release notes for the upcoming Bitcoin Core 0.10: “we have reason to believe that libsecp256k1 is better tested and more thoroughly reviewed than the implementation in OpenSSL”. Part of that “reason to believe” was our discovery of this OpenSSL flaw.</description></item><item><title>OpenSSL bug discovery</title><link>https://btctranscripts.com/greg-maxwell/2015-01-08-openssl-bug/</link><pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/greg-maxwell/2015-01-08-openssl-bug/</guid><description>I contributed to the discovery and analysis of CVE-2014-3570 &amp;ldquo;Bignum squaring may produce incorrect results&amp;rdquo;. In this case, the issue was that one of the carry propagation conditions was missed. The bug was discovered as part of the development of libsecp256k1, a high performance (and hopefully high quality: correct, complete, side-channel resistant) implementation of the cryptographic operators used by Bitcoin, developed primarily by Bitcoin Core developer Pieter Wuille along with a number of other people.</description></item></channel></rss>
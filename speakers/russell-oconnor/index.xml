<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Russell O’Connor on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/russell-oconnor/</link><description>Recent content in Russell O’Connor on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 21 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/russell-oconnor/index.xml" rel="self" type="application/rss+xml"/><item><title>Socratic Seminar - BIP Taproot (BIP 341)</title><link>https://btctranscripts.com/london-bitcoin-devs/2020-07-21-socratic-seminar-bip-taproot/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2020-07-21-socratic-seminar-bip-taproot/</guid><description>Pastebin of the resources discussed: https://pastebin.com/vsT3DNqW
Transcript of Socratic Seminar on BIP-Schnorr: https://diyhpl.us/wiki/transcripts/london-bitcoin-devs/2020-06-16-socratic-seminar-bip-schnorr/
The conversation has been anonymized by default to protect the identities of the participants. Those who have given permission for their comments to be attributed are attributed. If you were a participant and would like your comments to be attributed please get in touch.
Introductions Michael Folkson (MF): This is a Socratic Seminar on BIP-Taproot. Sorry for the delay for the people on the YouTube livestream.</description></item><item><title>Simplicity</title><link>https://btctranscripts.com/cryptoeconomic-systems/2019/2019-10-15-russell-oconnor-simplicity/</link><pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/cryptoeconomic-systems/2019/2019-10-15-russell-oconnor-simplicity/</guid><description>Location: CES Summit 2019
Slides: https://drive.google.com/file/d/1FivYGQzOYfM0JGl4SS3VR1UGKsyMn_L5/
Simplicity white paper: https://blockstream.com/simplicity.pdf
Intro So Simplicity is a programming language that I have been working on at Blockstream. I call it an alternative or reimagination of Bitcoin Script as it would have been if I had invented Bitcoin. An alternative or new instruction set that is compatible with Bitcoin. It could be soft forked in. We’ve experimented with it on sidechains such as Elements or Liquid.</description></item><item><title>Simplicity: A New Language for Blockchains</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2018/2018-01-25-russell-oconnor-simplicity/</link><pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2018/2018-01-25-russell-oconnor-simplicity/</guid><description>Slides: https://cyber.stanford.edu/sites/g/files/sbiybj9936/f/slides-bpase-2018.pdf
Simplicity white paper: https://blockstream.com/simplicity.pdf
Intro Good morning everyone. I have been working on a new language for the consensus layer of blockchains and I am here to present that to you today.
Blockchains and Smart Contracts I know everyone is familiar with this in the audience but I want to make sure that I’m on the same page with you guys. How do blockchains and smart contracts and programming languages work together?</description></item><item><title>Post’s Theorem and Blockchain Languages: A Short Course in the Theory of Computation</title><link>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-russell-oconnor-posts-theorem/</link><pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/blockchain-protocol-analysis-security-engineering/2017/2017-01-26-russell-oconnor-posts-theorem/</guid><description>Intro Hi. My name is Russell O’Connor. I am here to talk to you about Post’s theorem, the theory of computation and its applications to blockchain languages. There is a bit of a debate about whether Turing complete languages are appropriate or not for doing computations, whether the DAO fiasco is related to the Turing completeness problem or is it an unrelated issue? If we do go for non-Turing complete languages for our blockchains how much expressiveness are we losing?</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Luke Dashjr on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/luke-dashjr/</link><description>Recent content in Luke Dashjr on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 17 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/luke-dashjr/index.xml" rel="self" type="application/rss+xml"/><item><title>How Bitcoin UASF went down, Taproot LOT=true, Speedy Trial, Small Blocks</title><link>https://btctranscripts.com/stephan-livera-podcast/2021-03-17-luke-dashjr-taproot-activation/</link><pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/stephan-livera-podcast/2021-03-17-luke-dashjr-taproot-activation/</guid><description>Luke Dashjr arguments against LOT=false: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018498.html
T1-T6 and F1-F6 arguments for LOT=true and LOT=false: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018380.html
F7 argument for LOT=false: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-February/018415.html
Transcript by: Stephan Livera Edited by: Michael Folkson
Intro Stephan Livera (SL): Luke, welcome to the show.
Luke Dashjr (LD): Thanks.
SL: So, Luke for listeners who are unfamiliar, maybe you could take a minute and tell us a little bit about your background and how long you’ve been developing and contributing with Bitcoin Core.</description></item><item><title>How Bitcoin UASF Went Down, Taproot LOT=True, Speedy Trial, Small Blocks</title><link>https://btctranscripts.com/stephan-livera-podcast/2021-03-17-luke-dashjr/</link><pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/stephan-livera-podcast/2021-03-17-luke-dashjr/</guid><description>podcast: https://stephanlivera.com/episode/260/
Stephan Livera:
Luke welcome to the show.
Luke Dashjr:
Thanks.
Stephan Livera:
So, Luke for listeners who are unfamiliar, maybe you could just take a minute and just tell us a little bit about your background and how long you’ve been developing and contributing with Bitcoin core.
Luke Dashjr:
I first learned about Bitcoin back at the end of 2010, it was a new year’s party and I’ve been contributing since about a week later.</description></item><item><title>How to Activate a New Soft Fork</title><link>https://btctranscripts.com/bitcoin-magazine/2020-08-03-eric-lombrozo-luke-dashjr-taproot-activation/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-magazine/2020-08-03-eric-lombrozo-luke-dashjr-taproot-activation/</guid><description>Location: Bitcoin Magazine (online)
Aaron van Wirdum in Bitcoin Magazine on BIP 8, BIP 9 or Modern Soft Fork Activation: https://bitcoinmagazine.com/articles/bip-8-bip-9-or-modern-soft-fork-activation-how-bitcoin-could-upgrade-next
David Harding on Taproot activation proposals: https://gist.github.com/harding/dda66f5fd00611c0890bdfa70e28152d
Intro Aaron van Wirdum (AvW): Eric, Luke welcome. Happy Bitcoin Independence Day. How are you doing?
Eric Lombrozo (EL): We are doing great. How are you doing?
AvW: I am doing fine thanks. Luke how are you?
Luke Dashjr (LD): OK. How are you?</description></item><item><title>Segwit, PSBT Vulnerability</title><link>https://btctranscripts.com/la-bitdevs/2020-06-18-luke-dashjr-segwit-psbt-vulnerability/</link><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/la-bitdevs/2020-06-18-luke-dashjr-segwit-psbt-vulnerability/</guid><description>SegWit/PSBT vulnerability (CVE-2020-14199)
Location: LA BitDevs (online)
CVE: https://nvd.nist.gov/vuln/detail/CVE-2020-14199
Trezor blog post on the vulnerability: https://blog.trezor.io/latest-firmware-updates-correct-possible-segwit-transaction-vulnerability-266df0d2860
Greg Sanders Bitcoin dev mailing list post in April 2017: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-August/014843.html
The vulnerability The way Bitcoin transactions are encoded in the software is there is a list of coins essentially and then there is a list of destinations and the amount being sent to each destination. The destinations do not include the fee. Nothing in the transaction tells you what the fee of the transaction is.</description></item><item><title>Abstract Thinking About Consensus Systems</title><link>https://btctranscripts.com/edgedevplusplus/2018/abstract-thinking-about-consensus-systems/</link><pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/abstract-thinking-about-consensus-systems/</guid><description>https://twitter.com/kanzure/status/1048039485550690304
slides: https://drive.google.com/file/d/1LiGzgFXMI2zq8o9skErLcO3ET2YeQbyx/view?usp=sharing
Serialization Blocks are usually thought of as a serialized data stream. But really these are only true on the network serialization or over the network. A different implementation of bitcoin could in theory use a different format. The format is only used on the network and the disk, not the consensus protocol. The format could actually be completely different.
Each block is identified by a single cryptographic hash and it commits to various abstract information.</description></item><item><title>Bitcoin Protocol Development Panel</title><link>https://btctranscripts.com/magicalcryptoconference/2019/bitcoin-protocol-development-panel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/magicalcryptoconference/2019/bitcoin-protocol-development-panel/</guid><description>Bitcoin protocol development panel
KW: We have some wonderful panelists today. Let&amp;rsquo;s kick it off. Let&amp;rsquo;s start with Eric. Who are you and what role do you play in bitcoin development?
EL: I got into bitcoin in 2011. I had my own network stack. I almost had a full node implementation but I stopped short because it wasn&amp;rsquo;t as well tested or reviewed as Bitcoin Core. So I started to look into the community a little bit.</description></item><item><title>Why Block Sizes Should Not Be Too Big</title><link>https://btctranscripts.com/magicalcryptoconference/2019/why-block-sizes-should-not-be-too-big/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/magicalcryptoconference/2019/why-block-sizes-should-not-be-too-big/</guid><description>Briefly, why block sizes shouldn&amp;rsquo;t be too big
slides: https://luke.dashjr.org/tmp/code/block-sizes-mcc.pdf
I am luke-jr. I am going to go over why block size shouldn&amp;rsquo;t be too big.
How does bitcoin work? Miners put transactrions into blocks. Users verify that the blocks are valid. If the users don&amp;rsquo;t verify this, then miners can do basically anything. Because the users do this, 51% attacks are limited to reorgs which is undoing transactions. If there&amp;rsquo;s no users verifying this, then miners have no incentive to do this.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thomas Kerin on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/thomas-kerin/</link><description>Recent content in Thomas Kerin on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 03 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/thomas-kerin/index.xml" rel="self" type="application/rss+xml"/><item><title>Working on Scripts with logical opcodes</title><link>https://btctranscripts.com/building-on-bitcoin/2018/working-on-scripts/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/building-on-bitcoin/2018/working-on-scripts/</guid><description>https://twitter.com/kanzure/status/1014167120417091584
Bitcoin has logical opcodes in bitcoin script. Depending on whose is trying to spend coins or what information they have, they interact with logical opcodes. We could see a simple example here taken from one of the lightning network commitment transcraction scripts. It pushes a key on to the stack so that a checksig can run later. It adds a relative timelock as well. Two people can interact with that script and we can set different constraints on those.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lucas Ontivero on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/lucas-ontivero/</link><description>Recent content in Lucas Ontivero on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 16 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/lucas-ontivero/index.xml" rel="self" type="application/rss+xml"/><item><title>CJDNS</title><link>https://btctranscripts.com/wasabi/research-club/cjdns/</link><pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/wasabi/research-club/cjdns/</guid><description>This WRC episode shows Caleb DeLisle, the creator of the CJDNS project, discussing the benefits of decentralized mesh networking and its potential impact on the centralized internet controlled by companies. DeLisle explains the adversary tolerance of CJDNS and its use of public keys for communication verification. He also addresses concerns about the environmental impact of crypto mining and argues that it facilitates the transition to renewable energy sources. DeLisle emphasizes the attacks on decentralized finance and crypto by centralized entities and the importance of unity in the crypto community. He highlights the creation of PacketCrypt, a bandwidth-hard proof of work that incentivizes building out large amounts of bandwidth. DeLisle asserts the need to prioritize privacy, robustness, and resilience in the face of attacks and the value of positive engagement with policymakers. He also discusses the differences between CJDNS and other networking solutions, highlighting CJDNS&amp;rsquo;s focus on infrastructure and resilient internet access. In addition, DeLisle mentions the potential for individuals to provide internet access to their neighbors and the financing possibilities for the Packet Network Steward. Finally, he touches on the use of Rust programming language for code review and the productivity improvements it brings in terms of security.</description></item><item><title>CoinShuffle++ (Part 1)</title><link>https://btctranscripts.com/wasabi/research-club/coinshuffle-plusplus-part-1/</link><pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/wasabi/research-club/coinshuffle-plusplus-part-1/</guid><description>In today&amp;rsquo;s episode Tim Ruffing introduces the CoinShuffle++ protocol and explains its key components. He describes how the protocol uses power sums and polynomial roots to ensure secure messaging between participants. The protocol consists of four stages: Dimi Hellman key exchange, commitment, DC net, and confirmation. The protocol handles malicious peers by revealing secret keys and excluding them in the next round. Ruffing also highlights the scalability of the CoinShuffle++ protocol, as it can accommodate a large number of participants and complete the process in a relatively short time. The use of dice mix enhances the efficiency of the protocol compared to its predecessor, CoinShuffle. Futher Tim dives into the challenges of implementing CoinShuffle++, a decentralized protocol for coinjoining cryptocurrencies. He highlights the issues caused by varying internet connection speeds and round communication, leading to slower performance. Ruffing also discusses concerns about the negotiation process and cryptography affecting communication speed. Additionally, he acknowledges the complexity of the topic and expresses a desire to simplify it for wider understanding and implementation. Overall, Ruffing emphasizes the importance of maintaining privacy in peer-to-peer transactions and the potential of cryptography in various applications.</description></item><item><title>CoinShuffle</title><link>https://btctranscripts.com/wasabi/research-club/coinshuffle/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/wasabi/research-club/coinshuffle/</guid><description>CoinShuffle is a decentralized coinjoin protocol that aims to address the privacy and centralization issues of traditional coinjoins. Participants can anonymously submit their addresses in a process that uses encryption to prevent linking the addresses to specific individuals. The addresses are then shuffled using secure multi-party computation, creating coinjoin outputs that include inputs from all participants. CoinShuffle eliminates the need for a central coordinator and is resilient to denial of service attacks. However, the decryption process is sequential and the time cost increases with the number of participants. The protocol also has measures to handle misbehaving participants and failed rounds. Additionally, alternative approaches such as using mixnets and integrating with other infrastructures like the Lightning Network are discussed. Overall, CoinShuffle provides a viable solution for decentralized and coordinated coinjoins, but the performance is dependent on the number of participants. Further we discuss the importance of integrating second layer technologies like the Lightning Network in a private way and the challenges of achieving efficiency in coin mixing. They propose steps to improve the space efficiency of coin mixing and finding algorithms that perform well in simulations. They also explore the trade-off between space efficiency and privacy, suggesting that higher coin denominations could be more efficient and private. They discuss the idea of using existing data to simulate mixing transactions and score mixes based on real-world data. They also mention the possibility of using the knapsack algorithm for scoring and discuss the challenge of arranging inputs and outputs in a trustless manner. The speakers plan to explore different mixing networks and techniques, such as cache fusion, to improve coordination and trustlessness.</description></item><item><title>Knapsack Mixing</title><link>https://btctranscripts.com/wasabi/research-club/knapsack-mixing/</link><pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/wasabi/research-club/knapsack-mixing/</guid><description>In this video, the participants of the Wasabi Research Club discuss the concept of knapsack mixing and its potential for privacy in Bitcoin transactions. They explain the process of merging inputs and outputs to create sub-transactions, and how different versions of the knapsack mixing algorithm have improved over time. However, they acknowledge that perfect anonymity is difficult to achieve and there are computational complexities involved. They also discuss the challenges of handling transaction fees and the difficulty of implementing efficient algorithms for finding all possible mappings and partitions. Overall, the speaker believes that knapsack mixing has the potential for anonymity but more research and testing is needed.
Furthermore, they discuss various aspects of knapsack mixing, including the potential benefits and limitations. They explore the possibility of combining multiple inputs in a transaction and its impact on privacy. The necessity of calculating mappings in Wasabi is also debated, with the suggestion that it could help identify bottlenecks in blockchain analysis companies. The participants discuss the idea of setting a lower bound for the number of participants and outputs in a transaction to ensure computational privacy. Additionally, they consider the possibility of allowing non-mixing participants to participate in Wasabi transactions for stronger privacy. The conversation then shifts to the concept of users participating in knapsack-type coin joints for spending purposes only, which could be offered as a separate service in Wasabi. They also touch upon topics like blockchain with lists of inputs and outputs, determining conjoined transactions, RBF in transactions, and feedback for improving future episodes of the club. Overall, the participants engage in an informative discussion on knapsack mixing and its implications.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ariel Gabizon on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/ariel-gabizon/</link><description>Recent content in Ariel Gabizon on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://btctranscripts.com/speakers/ariel-gabizon/index.xml" rel="self" type="application/rss+xml"/><item><title>Plonk</title><link>https://btctranscripts.com/stanford-blockchain-conference/2020/plonk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/stanford-blockchain-conference/2020/plonk/</guid><description>PLONK: Permutations over Lagrange-bases for Oecumenical Noninteractive arguments of Knowledge
Ariel Gabizon
https://twitter.com/kanzure/status/1230287617972768769
paper: https://eprint.iacr.org/2019/pdf
Introduction One of the things you need when you design a zk proof system is that you need to know about polynomials. Two polynomials if they are the same then they are the same everywhere and if they are different then they are different almost everywhere. The other thing you need is how to get a good name.</description></item></channel></rss>
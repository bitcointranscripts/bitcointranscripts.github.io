<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Max Hillebrand on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/max-hillebrand/</link><description>Recent content in Max Hillebrand on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 01 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/max-hillebrand/index.xml" rel="self" type="application/rss+xml"/><item><title>ZKSnacks Blacklisting Coins</title><link>https://btctranscripts.com/stephan-livera-podcast/2022-04-01-max-hillebrand/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/stephan-livera-podcast/2022-04-01-max-hillebrand/</guid><description>podcast: https://stephanlivera.com/episode/364/
Stephan Livera:
Max, great to chat again.
Max Hillebrand:
Oh, welcome, Stephan. I’m really looking forward to this conversation. It’s gonna be a fun one.
Stephan Livera:
Right. So look, as I’ve mentioned, I think we’re gonna disagree a bit on this one, but let’s chat it out. Let’s discuss what’s going on in the world of Bitcoin and privacy. So obviously the main topic here is going to be around what’s going on with Wasabi Wallet and the blacklisting, but if you wanted to just give us your thoughts on how we got to this situation, or maybe just provide a bit of an overview about what’s going on for listeners who aren’t familiar and then we can discuss the various issues.</description></item><item><title>Socratic Seminar - Coinswap</title><link>https://btctranscripts.com/london-bitcoin-devs/2020-06-23-socratic-seminar-coinswap/</link><pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/2020-06-23-socratic-seminar-coinswap/</guid><description>Pastebin of the resources discussed: https://pastebin.com/zbegGmb8
The conversation has been anonymized by default to protect the identities of the participants. Those who have given permission for their comments to be attributed are attributed. If you were a participant and would like your comments to be attributed please get in touch.
Introductions Michael Folkson (MF): This is London BitDevs, this is a Socratic Seminar. We had two events last week so it is great to see so many people on the call.</description></item><item><title>CoinShuffle++ (Part 1)</title><link>https://btctranscripts.com/wasabi/research-club/coinshuffle-plusplus-part-1/</link><pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/wasabi/research-club/coinshuffle-plusplus-part-1/</guid><description>In today&amp;rsquo;s episode Tim Ruffing introduces the CoinShuffle++ protocol and explains its key components. He describes how the protocol uses power sums and polynomial roots to ensure secure messaging between participants. The protocol consists of four stages: Dimi Hellman key exchange, commitment, DC net, and confirmation. The protocol handles malicious peers by revealing secret keys and excluding them in the next round. Ruffing also highlights the scalability of the CoinShuffle++ protocol, as it can accommodate a large number of participants and complete the process in a relatively short time. The use of dice mix enhances the efficiency of the protocol compared to its predecessor, CoinShuffle. Futher Tim dives into the challenges of implementing CoinShuffle++, a decentralized protocol for coinjoining cryptocurrencies. He highlights the issues caused by varying internet connection speeds and round communication, leading to slower performance. Ruffing also discusses concerns about the negotiation process and cryptography affecting communication speed. Additionally, he acknowledges the complexity of the topic and expresses a desire to simplify it for wider understanding and implementation. Overall, Ruffing emphasizes the importance of maintaining privacy in peer-to-peer transactions and the potential of cryptography in various applications.</description></item><item><title>CoinShuffle</title><link>https://btctranscripts.com/wasabi/research-club/coinshuffle/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/wasabi/research-club/coinshuffle/</guid><description>CoinShuffle is a decentralized coinjoin protocol that aims to address the privacy and centralization issues of traditional coinjoins. Participants can anonymously submit their addresses in a process that uses encryption to prevent linking the addresses to specific individuals. The addresses are then shuffled using secure multi-party computation, creating coinjoin outputs that include inputs from all participants. CoinShuffle eliminates the need for a central coordinator and is resilient to denial of service attacks. However, the decryption process is sequential and the time cost increases with the number of participants. The protocol also has measures to handle misbehaving participants and failed rounds. Additionally, alternative approaches such as using mixnets and integrating with other infrastructures like the Lightning Network are discussed. Overall, CoinShuffle provides a viable solution for decentralized and coordinated coinjoins, but the performance is dependent on the number of participants. Further we discuss the importance of integrating second layer technologies like the Lightning Network in a private way and the challenges of achieving efficiency in coin mixing. They propose steps to improve the space efficiency of coin mixing and finding algorithms that perform well in simulations. They also explore the trade-off between space efficiency and privacy, suggesting that higher coin denominations could be more efficient and private. They discuss the idea of using existing data to simulate mixing transactions and score mixes based on real-world data. They also mention the possibility of using the knapsack algorithm for scoring and discuss the challenge of arranging inputs and outputs in a trustless manner. The speakers plan to explore different mixing networks and techniques, such as cache fusion, to improve coordination and trustlessness.</description></item></channel></rss>
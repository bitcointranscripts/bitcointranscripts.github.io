<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>John Newbery on ₿itcoin Transcripts</title><link>https://btctranscripts.com/speakers/john-newbery/</link><description>Recent content in John Newbery on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 24 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/speakers/john-newbery/index.xml" rel="self" type="application/rss+xml"/><item><title>Mempool Ancestors and Descendants</title><link>https://btctranscripts.com/brink/the-bitcoin-development-podcast/mempool-ancestors-and-descendants/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/brink/the-bitcoin-development-podcast/mempool-ancestors-and-descendants/</guid><description>John and Gloria continue their discussion of Bitcoin&amp;rsquo;s mempool by explaining parent, child, ancestor and descendant transactions.</description></item><item><title>Mempool Policy</title><link>https://btctranscripts.com/brink/the-bitcoin-development-podcast/mempool-policy/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/brink/the-bitcoin-development-podcast/mempool-policy/</guid><description>Brink co-founder, John Newbery, and Brink fellow, Gloria Zhao, discuss Bitcoin Core&amp;rsquo;s mempool policy.</description></item><item><title>Bitcoin Script: Past and Future</title><link>https://btctranscripts.com/chaincode-labs/2020-04-08-john-newbery-contracts-in-bitcoin/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/2020-04-08-john-newbery-contracts-in-bitcoin/</guid><description>Location: She256 Onboarding to Bitcoin Webinar
Introduction John: My name is John. I am a Bitcoin Protocol Engineer at Chaincode Labs in New York. I&amp;rsquo;m going to talk about contracts a little bit from a theoretical perspective, but I&amp;rsquo;m not a lawyer, and I&amp;rsquo;m not a legal scholar. For all of you legally minded people out there, I apologize in advance if I gobble this and say some nonsense.
Before I do that, I&amp;rsquo;m going to tell you a story and the story based on this picture.</description></item><item><title>Chaincode Decoded: UTXOs</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/utxos-chaincode-decoded/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/utxos-chaincode-decoded/</guid><description>Introduction John Newbery: 00:00:00
If we go back in time to version 0.1, all that was stored was the blockchain and I think a marker saying whether that coin was spent or not. I mean that&amp;rsquo;s okay for your first version but it doesn&amp;rsquo;t really scale and it&amp;rsquo;s bad performance because every time you want to access a coin you need to read it from disk.
Adam Jonas: 00:00:28
Welcome back to the Chaincode Podcast.</description></item><item><title>Wallet Architecture in Bitcoin Core</title><link>https://btctranscripts.com/edgedevplusplus/2019/wallet-architecture/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2019/wallet-architecture/</guid><description>https://twitter.com/kanzure/status/1171018684816605185
Introduction Thanks Bryan for talking about HD wallets. I am going to be talking about wallet architecture in Bitcoin Core. Alright. Who am I? I work on Bitcoin Core. I&amp;rsquo;ve been writing code on Bitcoin Core for about 3 years. Lately I have been working on the wallet. I work for Chaincode Labs which is why I get to work on Bitcoin Core. We are a small research lab in New York.</description></item><item><title>Wallet Development in Bitcoin Core</title><link>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-19-john-newbery-wallet-development/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-19-john-newbery-wallet-development/</guid><description>Location: Chaincode Labs 2019 Residency
Slides: https://residency.chaincode.com/presentations/bitcoin/Wallet_Development.pdf
Intro I am going to talk to you about wallets. As for the previous presentation I have all of the links in this document which I will share with you. First of all why should we care about wallets? Kind of boring right? You’ve had all this fun stuff about peer-to-peer and consensus. Wallets are just on the edge. Maybe you’re not even interested in Bitcoin Core.</description></item><item><title>Security Models</title><link>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-17-john-newbery-security-models/</link><pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-residency/2019-06-17-john-newbery-security-models/</guid><description>Topic: Security Models
Location: Chaincode Labs 2019 Residency
Slides: https://residency.chaincode.com/presentations/bitcoin/security_models.pdf
Intro John Newbery: Alright, Security Models. This is going to be like a quick whistle-stop tour of various things, very high-level view. I&amp;rsquo;m going to start by giving you some kind of framework to think about things. So in cryptography, we often talk about security proofs in terms of existing schemes, we talk about assumptions.
So, for example&amp;hellip; If you can break new scheme B, then you&amp;rsquo;ll also be able to break old scheme A.</description></item><item><title>Finite fields, Elliptic curves, ECDSA, Schnorr</title><link>https://btctranscripts.com/edgedevplusplus/2018/digital-signatures/</link><pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/digital-signatures/</guid><description>https://twitter.com/kanzure/status/1047634593619181568
Introduction Thank you to Anton and to everyone at Keio University and Digital Garage. I have an hour to talk about digital signatures, finite fields, ECDSA, Schnorr signatures, there&amp;rsquo;s a lot of ground to cover. I&amp;rsquo;m going to move quickly and start from a high level.
My name is John. I live in New York. I work at a company called Chaincode Labs. Most of the time, I contribute to Bitcoin Core.</description></item><item><title>Scripts (general &amp; simple)</title><link>https://btctranscripts.com/edgedevplusplus/2018/scripts-general-and-simple/</link><pubDate>Thu, 04 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2018/scripts-general-and-simple/</guid><description>https://twitter.com/kanzure/status/1047679223115083777
Introduction I am going to talk about why we have scripts in bitcoin. I&amp;rsquo;ll give some examples and the design philosophy. I am not going to talk about the semantics of bitcoin script, though. Why do we have bitcoin script? I&amp;rsquo;ll show how to lock and unlock coins. I&amp;rsquo;ll talk about pay-to-pubkey, multisig, and computing vs verification in the blockchain.
Why have script at all? In my first talk, I talked about digital signatures to transfer coins from one person to another.</description></item><item><title>CVE-2018-17144 Bug</title><link>https://btctranscripts.com/noded-podcast/jnewbery-cve-2018-17144-bug/</link><pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/noded-podcast/jnewbery-cve-2018-17144-bug/</guid><description>Noded podcast September 26th 2018
Intros
Pierre: This is an issue that affects our audience directly, right. This is the Noded podcast. It is for people who run Bitcoin full nodes and we had what is called a critical vulnerability exposure - CVE drop on Monday and there was an issue with our node software - specific versions and we can get into that.
bitstein: And in a bombshell Tweet John Newbery said that he was responsible for the CVE.</description></item><item><title>Bitcoin Core V0.17</title><link>https://btctranscripts.com/london-bitcoin-devs/jnewbery-bitcoin-core-v0.17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/london-bitcoin-devs/jnewbery-bitcoin-core-v0.17/</guid><description>Bitcoin Core v0.17
slides: https://www.dropbox.com/s/9kt32069hoxmgnt/john-newbery-bitcoincore0.17.pptx
https://twitter.com/kanzure/status/1031960170027536384
Introduction I am John Newbery. I work on Bitcoin Core. This talk is going to be mostly about Bitcoin Core 0.17 which was branched on Monday. Hopefully the final release will be in the next couple of weeks.
whoami I live in New York and work at Chaincode Labs. I&amp;rsquo;m not actually a native born New Yorker. It&amp;rsquo;s nice to be back in London and talking with you guys about bitcoin.</description></item><item><title>Bitcoin Peer-to-Peer Network and Mempool</title><link>https://btctranscripts.com/edgedevplusplus/2017/p2p-john-newbery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/edgedevplusplus/2017/p2p-john-newbery/</guid><description>John Newbery covers the primitives and functionality that comprises Bitcoin peer-to-peer network. This includes types of nodes that comprise the network, message format, control messages, transaction and block propagation, mempool, fee estimation, compact blocks etc.</description></item><item><title>Bitcoin Protocol Development Panel</title><link>https://btctranscripts.com/magicalcryptoconference/2019/bitcoin-protocol-development-panel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/magicalcryptoconference/2019/bitcoin-protocol-development-panel/</guid><description>Bitcoin protocol development panel
KW: We have some wonderful panelists today. Let&amp;rsquo;s kick it off. Let&amp;rsquo;s start with Eric. Who are you and what role do you play in bitcoin development?
EL: I got into bitcoin in 2011. I had my own network stack. I almost had a full node implementation but I stopped short because it wasn&amp;rsquo;t as well tested or reviewed as Bitcoin Core. So I started to look into the community a little bit.</description></item></channel></rss>
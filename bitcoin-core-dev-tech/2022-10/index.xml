<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitcoin Core Dev Tech 2022 on ₿itcoin Transcripts</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/</link><description>Recent content in Bitcoin Core Dev Tech 2022 on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 12 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/index.xml" rel="self" type="application/rss+xml"/><item><title>Libsecp256k1 Maintainers Meeting</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-libsecp256k1/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-libsecp256k1/</guid><description>Q: Why C89? When I asked you this question a few years ago, I think you said gmaxwell.
A: There are a number of embedded devices that only support C89 and it&amp;rsquo;d be good to support those devices. That was the answer back then at least.
Q: Is it a large cost to keep doing C89?
A: The only cost is for the context stuff we want to make threadlocal. The CPUid or the x86-specific things.</description></item><item><title>Research wishlist</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-research-wishlist/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-research-wishlist/</guid><description>https://docs.google.com/document/d/1oRCeDzY3zH2ZY-BUYIVfJ1GMkvLlqKHWCFdtS62QWAo/edit
Introduction In spirit of the conversation happening today earlier, I&amp;rsquo;ll give some motivation. In general there is a disconnect between academic researchers and people who work in open-source software. It&amp;rsquo;s a pity because these two groups are interested in bitcoin, they love difficult questions and working on them, and somehow it seems like the choice of questions and spirit of work is sometimes not aligned to the best of bitcoin.</description></item><item><title>Strategies for getting stuff merged</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-merging/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-12-merging/</guid><description>Introduction I wanted to talk about things that have been leaking out over other conversations because sometimes people get frustrated that their stuff doesn&amp;rsquo;t get merged. This is not a new problem. It&amp;rsquo;s an issue that has been going on for a long time. It can be frustrating. I don&amp;rsquo;t have the answer. This is going to be more discussion based and I&amp;rsquo;ve asked a few folks to talk about strategies that have worked for them.</description></item><item><title>Bitcoin Core and GitHub</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-github/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-github/</guid><description>Bitcoin Core and GitHub
I think at this point it&amp;rsquo;s quite clear that it&amp;rsquo;s not necessarily a &amp;ldquo;if&amp;rdquo; we get off github, but a when and how. The question would be, how would we do that? This isn&amp;rsquo;t really a presentation. It&amp;rsquo;s more of a discussion. There&amp;rsquo;s a few things to keep in mind, like the bitcoin-gh-meta repo, which captures all the issues, comments and pull requests. It&amp;rsquo;s quite good. The ability to reconstruct what&amp;rsquo;s inside of here on another platform doesn&amp;rsquo;t really seem possible in its entirety.</description></item><item><title>Fee Market</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-fee-market/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-fee-market/</guid><description>Fee market
There are two times we have had sustained fees: late 2017 and early 2021. In late 2017 we saw lots of things break because people hadn&amp;rsquo;t written software to deal with variable fees or anything. I don&amp;rsquo;t know if that was as big of a problem in 2021. I do worry that this will start to become a thing. If you have no variable fee market, and you can just throw in 1 sat/vbyte for several years then it will just work until it doesn&amp;rsquo;t.</description></item><item><title>FROST</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-frost/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-frost/</guid><description>Introduction I am going to be going over the FROST implementation. I also have an early draft of the BIP. I am going to be focusing on the differences between the paper and the RFC and the overall scheme. This is meant to be an open discussion so feel free to jump in.
Distributed key generation Maybe one good place to start is to look at the example file in the PR.</description></item><item><title>High-assurance cryptography specifications (hac-spec)</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-hac-spec/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-hac-spec/</guid><description>See https://btctranscripts.com/tabconf/2022/2022-10-14-hac-spec/ instead for a full transcript of a similar talk.
Far far future In the far far future, we could get rid of this weird paper notation scheme and do a security proof directly for the specification. Presumably that is much harder than anything else in my slides. But this would rule out a lot of bugs.
Q: But the security proof itself is written in a paper?
A: The security proof itself would be written in hac-spec.</description></item><item><title>Package Relay BIP, implementation, V3, and package RBF proposals</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-package-relay/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-package-relay/</guid><description>Notes on Package Relay BIP, implementation, V3, and package RBF proposals from Core Dev in Atlanta.
Also at https://gist.github.com/glozow/8469dc9c3a003c7046033a92dd504329.
Ancestor Package Relay BIP BIP updated to be receiver-initiated ancestor packages only. Sender-initiated vs receiver-initiated package relay. Receiver-intiated package relay enables a node to ask for more information when they suspect they are missing something (i.e. to resolve orphans). Sender-initiated package relay should, theoretically, save a round trip by notifying the receiver ahead of time that &amp;ldquo;hey, this is going to be a package, so make sure you download and submit these transactions together.</description></item><item><title>Stratum V2</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-stratum-v2/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-11-stratum-v2/</guid><description>Introduction There was an announcement earlier this morning that announced the open-source project implementing Stratum v2 is ready for testing now. Spiral has been contributing to this project for a few years. There&amp;rsquo;s a few other companies funding it as well. It&amp;rsquo;s finally ready for testing.
History About 4 years ago or so, Matt proposed BetterHash which focused on enabling miners to be able to do their own transaction selection. There was an independent effort from Braaains that they called stratum v2 which added encryption and authentication between miners and pools and other improvements over stratum v1 like switching from JSON to binary and some other optimizations that were needed over the past 10 years.</description></item><item><title>BIP324 - Version 2 of p2p encrypted transport protocol</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-10-p2p-encryption/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-10-p2p-encryption/</guid><description>Previous talks https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/
https://btctranscripts.com/breaking-bitcoin/2019/p2p-encryption/
Introduction and motivation Can we turn down the lights? &amp;ldquo;Going dark&amp;rdquo; is a nice theme for the talk. I also have dark coffee. Okay.
We&amp;rsquo;re going to talk a little bit about bip324. This is a BIP that has had a long history. We even have a page about the history. It all started more than 6 years ago&amp;hellip; Bitcoin p2p traffic is unencrypted. It always has been.</description></item><item><title>Misc</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-10-misc/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10/2022-10-10-misc/</guid><description>Web of Trust Some of the public key server operators interpreted GDPR to mean that they can&amp;rsquo;t operate public key infrastructure anymore. There needs to be another solution for p2p distribution of keys and Web-of-Trust.
&amp;lt;bitcoin-otc.com&amp;gt; continues to be the longest operating PGP web-of-trust using public key infrastructure. Rumplepay might be able to bootstrap a web-of-trust over time.
Stealth addresses and silent payments Here&amp;rsquo;s something controversial. Say you keep an in-memory map of all addresses that have already been used.</description></item></channel></rss>
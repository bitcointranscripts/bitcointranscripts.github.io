<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitcoin Core Dev Tech 2018 (Oct) on ₿itcoin Transcripts</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/</link><description>Recent content in Bitcoin Core Dev Tech 2018 (Oct) on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 10 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/index.xml" rel="self" type="application/rss+xml"/><item><title>Signmessage</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-10-signmessage/</link><pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-10-signmessage/</guid><description>kallewoof and others
https://twitter.com/kanzure/status/1049834659306061829
I am trying to make a new signmessage to do other things. Just use the signature system inside bitcoin to sign a message. Sign a message that someone wants. You can use proof-of-funds or whatever.
You could just have a signature and it&amp;rsquo;s a signature inside of a package and it&amp;rsquo;s small and easy. Another option is to have a .. that is invalid somehow. You do a transaction with some input, where the txid is the message hash or something.</description></item><item><title>Bitcoin Optech</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-09-bitcoin-optech/</link><pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-09-bitcoin-optech/</guid><description>https://twitter.com/kanzure/status/1049527415767101440
https://bitcoinops.org/
Bitcoin Optech is trying to encourage bitcoin businesses to adopt better scaling techniques and technologies, things like batching, segwit, down the line maybe Schnorr signatures, aggregatable signatures, maybe lightning. Right now we&amp;rsquo;re focusing on things that businesses could be doing right now. Exchanges could be batching, and some aren&amp;rsquo;t. We&amp;rsquo;re talking to those companies and listening to their concerns and what they&amp;rsquo;re doing, and just trying to nudge them in the right direction.</description></item><item><title>Wallet Stuff</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-09-wallet-stuff/</link><pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-09-wallet-stuff/</guid><description>https://twitter.com/kanzure/status/1049526667079643136
Maybe we can have the wallet PRs have a different review process so that there can be some specialization, even if the wallet is not ready to be split out. In the future, if the wallet was a separate project or repository, then that would be better. We need to be able to subdivide the work better than we already do, and the wallet is a good place to start doing it.</description></item><item><title>Efficient P2P Transaction Relay</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-efficient-p2p-transaction-relay/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-efficient-p2p-transaction-relay/</guid><description>p2p transaction relay protocol improvements with set reconciliation gleb
I don&amp;rsquo;t know if I need to motivate this problem. I presented a work in progress session at Scaling. The cost of relaying transactions or announcing a transaction in a network&amp;ndash; how many announcements do you have? Every link has an announcement in either direction right now, and then there&amp;rsquo;s the number of nodes multiplied by the number of connections per node.</description></item><item><title>Script Descriptors</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-script-descriptors/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-script-descriptors/</guid><description>https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md
I would like to talk about script descriptors. There&amp;rsquo;s a number of projects we&amp;rsquo;re working on and they are all kind of related. I&amp;rsquo;d like to clarify how things fit together.
Note: there is an earlier transcript that has not been published (needs review) about script descriptors.
Agenda History of script descriptors and how we came to this. What&amp;rsquo;s currently in Bitcoin Core v0.17 Wallet integration DESCRIPT About script descriptors The problem that I wanted to tackle was that currently in Bitcoin Core wallet we have a blob of public keys and private keys and HD chains and scripts and a bunch of other metadata and keypools.</description></item><item><title>UTXO accumulators, UTXO commitments, and Utreexo</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-utxo-accumulators-and-utreexo/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10/2018-10-08-utxo-accumulators-and-utreexo/</guid><description>https://twitter.com/kanzure/status/1049112390413897728
If people saw Benedikt&amp;rsquo;s talk, two days ago, it&amp;rsquo;s related. It&amp;rsquo;s a different construction but same goal. The basic idea is, and I think Cory kind of started to talk about this a few months ago on the mailing list&amp;hellip; instead of storing all UTXOs in leveldb, store the hash of each UTXO, and then it&amp;rsquo;s half the size, and then you could almost create it from the hash of the input, it&amp;rsquo;s like 10 bytes more.</description></item></channel></rss>
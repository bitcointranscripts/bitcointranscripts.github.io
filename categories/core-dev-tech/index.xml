<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>core-dev-tech on ₿itcoin Transcripts</title><link>https://btctranscripts.com/categories/core-dev-tech/</link><description>Recent content in core-dev-tech on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 15 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/categories/core-dev-tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Braidpool</title><link>https://btctranscripts.com/tabconf/2022/2022-10-15-braidpool/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2022/2022-10-15-braidpool/</guid><description>Introduction I am going to talk today about Braidpool which is a decentralized mining pool. I hope some of you were in the mining panel earlier today in particular p2pool which this is a successor to. I gave a talk a long time ago about a directed acyclic graph blockchain.
Braidpool Braidpool is a proposal for a decentralized mining pool which uses a merge-mined DAG with Nakamoto-like consensus to track shares.</description></item><item><title>Misconceptions about segwit vbytes</title><link>https://btctranscripts.com/tabconf/2022/2022-10-15-segwit-vbytes-misconceptions/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2022/2022-10-15-segwit-vbytes-misconceptions/</guid><description>Weighing transactions: The witness discount You&amp;rsquo;ve already heard from someone that this presentation will be more interactive. I probably won&amp;rsquo;t get through all of my material. If you have questions during the talk, please feel free to raise your hand and we can cover it right away. I&amp;rsquo;m going to try to walk you through a transaction serialization for both a non-segwit transaction and a segwit transaction. By the end of the talk, I hope you understand how the transaction weight is calculated and how the witness discount works.</description></item><item><title>Silent Payments and Alternatives</title><link>https://btctranscripts.com/tabconf/2022/2022-10-15-silent-payments/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2022/2022-10-15-silent-payments/</guid><description>Introduction I will talk about silent payments but also in general the design space around what kind of constructs you can have to pay people in a non-interactive way. In the bitcoin world, there are a couple common ways of paying someone. Making a payment is such a basic thing. &amp;hellip; The alternative we have is that you can generate a single address and put it in your twitter profile and everyone can pay you, but that&amp;rsquo;s not private.</description></item><item><title>Provably bug-free BIPs and implementations using hac-spec</title><link>https://btctranscripts.com/tabconf/2022/2022-10-14-hac-spec/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2022/2022-10-14-hac-spec/</guid><description>https://nickler.ninja/
Alright. Strong crowd here, I can see. That&amp;rsquo;s very nice.
Introduction I am Jonas and I will talk about provably bug-free BIPs and implementations. I don&amp;rsquo;t have such a BIP nor such an implementation but if you lower your time-preference enough this could eventually be true at some point. This presentation is only 15 minutes so raise your hand if you have questions.
Just to set the stage. Specifications should be free of bugs, we want them easy to implement and hard to misinterpret.</description></item><item><title>ROAST - Robust asynchronous Schnorr threshold signatures</title><link>https://btctranscripts.com/tabconf/2022/2022-10-14-roast/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/tabconf/2022/2022-10-14-roast/</guid><description>paper: https://ia.cr/2022/550
slides: https://slides.com/real-or-random/roast-tabconf22/
Hey. Hello. My name is Tim and I work at Blockstream. This is some academic work in joint with some of my coworkers.
Schnorr signatures in Bitcoin We recently got support for Schnorr signatures in bitcoin, introduced as part of bip340 which was activated as part of the taproot soft-fork. There are three main reasons why we want Schnorr signatures and prefer them over ECDSA bitcoin signatures which can still be used: one is that Schnorr signatures have provable security and give the theory guys more confidence; Schnorr signatures are more efficient; and the main thing is that we can get easier constructions of advanced signing protocols.</description></item><item><title>Libsecp256k1 Maintainers Meeting</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-libsecp256k1/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-libsecp256k1/</guid><description>Q: Why C89? When I asked you this question a few years ago, I think you said gmaxwell.
A: There are a number of embedded devices that only support C89 and it&amp;rsquo;d be good to support those devices. That was the answer back then at least.
Q: Is it a large cost to keep doing C89?
A: The only cost is for the context stuff we want to make threadlocal. The CPUid or the x86-specific things.</description></item><item><title>Research wishlist</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-research-wishlist/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-research-wishlist/</guid><description>https://docs.google.com/document/d/1oRCeDzY3zH2ZY-BUYIVfJ1GMkvLlqKHWCFdtS62QWAo/edit
Introduction In spirit of the conversation happening today earlier, I&amp;rsquo;ll give some motivation. In general there is a disconnect between academic researchers and people who work in open-source software. It&amp;rsquo;s a pity because these two groups are interested in bitcoin, they love difficult questions and working on them, and somehow it seems like the choice of questions and spirit of work is sometimes not aligned to the best of bitcoin.</description></item><item><title>Strategies for getting stuff merged</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-merging/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-12-merging/</guid><description>Introduction I wanted to talk about things that have been leaking out over other conversations because sometimes people get frustrated that their stuff doesn&amp;rsquo;t get merged. This is not a new problem. It&amp;rsquo;s an issue that has been going on for a long time. It can be frustrating. I don&amp;rsquo;t have the answer. This is going to be more discussion based and I&amp;rsquo;ve asked a few folks to talk about strategies that have worked for them.</description></item><item><title>Bitcoin Core and GitHub</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-github/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-github/</guid><description>Bitcoin Core and GitHub
I think at this point it&amp;rsquo;s quite clear that it&amp;rsquo;s not necessarily a &amp;ldquo;if&amp;rdquo; we get off github, but a when and how. The question would be, how would we do that? This isn&amp;rsquo;t really a presentation. It&amp;rsquo;s more of a discussion. There&amp;rsquo;s a few things to keep in mind, like the bitcoin-gh-meta repo, which captures all the issues, comments and pull requests. It&amp;rsquo;s quite good. The ability to reconstruct what&amp;rsquo;s inside of here on another platform doesn&amp;rsquo;t really seem possible in its entirety.</description></item><item><title>Fee Market</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-fee-market/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-fee-market/</guid><description>Fee market
There are two times we have had sustained fees: late 2017 and early 2021. In late 2017 we saw lots of things break because people hadn&amp;rsquo;t written software to deal with variable fees or anything. I don&amp;rsquo;t know if that was as big of a problem in 2021. I do worry that this will start to become a thing. If you have no variable fee market, and you can just throw in 1 sat/vbyte for several years then it will just work until it doesn&amp;rsquo;t.</description></item><item><title>FROST</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-frost/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-frost/</guid><description>Introduction I am going to be going over the FROST implementation. I also have an early draft of the BIP. I am going to be focusing on the differences between the paper and the RFC and the overall scheme. This is meant to be an open discussion so feel free to jump in.
Distributed key generation Maybe one good place to start is to look at the example file in the PR.</description></item><item><title>High-assurance cryptography specifications (hac-spec)</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-hac-spec/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-hac-spec/</guid><description>See https://btctranscripts.com/tabconf/2022/2022-10-14-hac-spec/ instead for a full transcript of a similar talk.
Far far future In the far far future, we could get rid of this weird paper notation scheme and do a security proof directly for the specification. Presumably that is much harder than anything else in my slides. But this would rule out a lot of bugs.
Q: But the security proof itself is written in a paper?
A: The security proof itself would be written in hac-spec.</description></item><item><title>Package Relay BIP, implementation, V3, and package RBF proposals</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-package-relay/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-package-relay/</guid><description>Notes on Package Relay BIP, implementation, V3, and package RBF proposals from Core Dev in Atlanta.
Also at https://gist.github.com/glozow/8469dc9c3a003c7046033a92dd504329.
Ancestor Package Relay BIP BIP updated to be receiver-initiated ancestor packages only. Sender-initiated vs receiver-initiated package relay. Receiver-intiated package relay enables a node to ask for more information when they suspect they are missing something (i.e. to resolve orphans). Sender-initiated package relay should, theoretically, save a round trip by notifying the receiver ahead of time that &amp;ldquo;hey, this is going to be a package, so make sure you download and submit these transactions together.</description></item><item><title>Stratum V2</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-stratum-v2/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-11-stratum-v2/</guid><description>Introduction There was an announcement earlier this morning that announced the open-source project implementing Stratum v2 is ready for testing now. Spiral has been contributing to this project for a few years. There&amp;rsquo;s a few other companies funding it as well. It&amp;rsquo;s finally ready for testing.
History About 4 years ago or so, Matt proposed BetterHash which focused on enabling miners to be able to do their own transaction selection. There was an independent effort from Braaains that they called stratum v2 which added encryption and authentication between miners and pools and other improvements over stratum v1 like switching from JSON to binary and some other optimizations that were needed over the past 10 years.</description></item><item><title>BIP324 - Version 2 of p2p encrypted transport protocol</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-p2p-encryption/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-p2p-encryption/</guid><description>Previous talks https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/
https://btctranscripts.com/breaking-bitcoin/2019/p2p-encryption/
Introduction and motivation Can we turn down the lights? &amp;ldquo;Going dark&amp;rdquo; is a nice theme for the talk. I also have dark coffee. Okay.
We&amp;rsquo;re going to talk a little bit about bip324. This is a BIP that has had a long history. We even have a page about the history. It all started more than 6 years ago&amp;hellip; Bitcoin p2p traffic is unencrypted. It always has been.</description></item><item><title>Misc</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-misc/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2022-10-10-misc/</guid><description>Web of Trust Some of the public key server operators interpreted GDPR to mean that they can&amp;rsquo;t operate public key infrastructure anymore. There needs to be another solution for p2p distribution of keys and Web-of-Trust.
&amp;lt;bitcoin-otc.com&amp;gt; continues to be the longest operating PGP web-of-trust using public key infrastructure. Rumplepay might be able to bootstrap a web-of-trust over time.
Stealth addresses and silent payments Here&amp;rsquo;s something controversial. Say you keep an in-memory map of all addresses that have already been used.</description></item><item><title>Assumeutxo</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-assumeutxo/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-assumeutxo/</guid><description>Assumeutxo
https://twitter.com/kanzure/status/1137008648620838912
Why assumeutxo assumeutxo is a spiritual continuation of assumevalid. Why do we want to do this in the first place? At the moment, it takes hours and days to do initial block download. Various projects in the community have been implementing meassures to speed this up. Casa I think bundles datadir with their nodes. Other projects like btcpay have various ways of bundling this up and signing things with gpg keys and these solutions are not quite half-baked but they are probably not desirable either.</description></item><item><title>Hardware Wallets</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-hardware-wallets/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-hardware-wallets/</guid><description>https://twitter.com/kanzure/status/1136924010955104257
How much should Bitcoin Core do, and how much should other libraries do? Andrew Chow wrote the wonderful HWI tool. Right now we have a pull request to support external signers. The HWI script can talk to most major hardware wallets because it has all the drivers built in now, and it can get keys from it, and sign arbitrary transactions. That&amp;rsquo;s roughly what it does. It&amp;rsquo;s kind of manual, though.</description></item><item><title>P2P Encryption</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-p2p-encryption/</guid><description>https://twitter.com/kanzure/status/1136939003666685952
https://github.com/bitcoin-core/bitcoin-devwiki/wiki/P2P-Design-Philosophy
&amp;ldquo;Elligator Squared: Uniform Points on Elliptic Curves of Prime Order as Uniform Random Strings&amp;rdquo; https://eprint.iacr.org/2014/043
Previous talks https://btctranscripts.com/scalingbitcoin/milan-2016/bip151-peer-encryption/
https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
Introduction This proposal has been in progress for years. Many ideas from sipa and gmaxwell went into bip151. Years ago I decided to try to move this forward. There is bip151 that again most of the ideas are not from myself but come from sipa and gmaxwell. The original proposal was withdrawn because we figured out ways to do it better.</description></item><item><title>Signet</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-signet/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-signet/</guid><description>Signet
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016734.html
https://twitter.com/kanzure/status/1136980462524608512
Introduction I am going to talk a little bit about signet. Does anyone not know what signet is? The idea is to have a signature of the block or the previous block. The idea is that testnet is horribly broken for testing things, especially testing things for long-term. You have large reorgs on testnet. What about testnet with a less broken difficulty adjustment? Testnet is for miner testing really.</description></item><item><title>Statechains</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-statechains/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-07-statechains/</guid><description>Blind statechains: UTXO transfer with a blind signing server
https://twitter.com/kanzure/status/1136992734953299970
&amp;ldquo;Formalizing Blind Statechains as a minimalistic blind signing server&amp;rdquo; https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017005.html
overview: https://medium.com/@RubenSomsen/statechains-non-custodial-off-chain-bitcoin-transfer-1ae4845a4a39
statechains paper: https://github.com/RubenSomsen/rubensomsen.github.io/blob/master/img/statechains.pdf
previous transcript: http://diyhpl.us/wiki/transcripts/scalingbitcoin/tokyo-2018/statechains/
Introduction I am going to talk casually through the whole statechains thing. If you want to interject, please do. I&amp;rsquo;ll get started. The current idea is to make it completely blind. It&amp;rsquo;s blinded statechains. The goal is to allow people to transfer a UTXO without changing anything on-chain.</description></item><item><title>Great Consensus Cleanup</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-great-consensus-cleanup/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-great-consensus-cleanup/</guid><description>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016714.html
https://twitter.com/kanzure/status/1136591286012698626
Introduction There&amp;rsquo;s not much new to talk about. Unclear about CODESEPARATOR. You want to make it a consensus rule that transactions can&amp;rsquo;t be larger than 100 kb. No reactions to that? Alright. Fine, we&amp;rsquo;re doing it. Let&amp;rsquo;s do it. Does everyone know what this proposal is?
Validation time for any block&amp;ndash; we were lazy about fixing this. Segwit was a first step to fixing this, by giving people a way to do this in a more efficient way.</description></item><item><title>Maintainers view of the Bitcoin Core project</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-maintainers/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-maintainers/</guid><description>https://twitter.com/kanzure/status/1136568307992158208
How do the maintainers think or feel everything is going? Are there any frustrations? Could contributors help eliminate these frustrations? That&amp;rsquo;s all I have.
It would be good to have better oversight or overview about who is working in what direction, to be more efficient. Sometimes I have seen people working on the same thing, and both make a similar pull request with a lot of overlap. This is more of a coordination issue.</description></item><item><title>SIGHASH_NOINPUT, ANYPREVOUT</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-noinput-etc/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-noinput-etc/</guid><description>SIGHASH_NOINPUT, ANYPREVOUT, OP_CHECKSIGFROMSTACK, OP_CHECKOUTPUTSHASHVERIFY, and OP_SECURETHEBAG
https://twitter.com/kanzure/status/1136636856093876225
There&amp;rsquo;s apparently some political messaging around OP_SECURETHEBAG and &amp;ldquo;secure the bag&amp;rdquo; might be an Andrew Yang thing.
SIGHASH_NOINPUT A bunch of us are familiar with NOINPUT. Does anyone need an explainer? What&amp;rsquo;s the difference from the original NOINPUT and the new one? NOINPUT is kind of scary to at least some people. If we just do NOINPUT, does that start causing problems in bitcoin?</description></item><item><title>Taproot</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-taproot/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-taproot/</guid><description>Taproot
https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-May/016914.html
https://bitcoinmagazine.com/articles/taproot-coming-what-it-and-how-it-will-benefit-bitcoin/
previously: http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2018-03-06-taproot-graftroot-etc/
https://twitter.com/kanzure/status/1136616356827283456
Introduction Okay, so, first question- who put my name on that list and what do they want? It wasn&amp;rsquo;t me. I&amp;rsquo;ll ask questions. I can give a summary, but there&amp;rsquo;s been a lot of talk already and I don&amp;rsquo;t know what to focus on. What would sipa like us to review in particular about it? What design decisions do you feel least confident about?</description></item><item><title>Utreexo</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-utreexo/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-06-utreexo/</guid><description>Utreexo: hash-based accumulator for bitcoin UTXOs
http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2018-10-08-utxo-accumulators-and-utreexo/
http://diyhpl.us/wiki/transcripts/mit-bitcoin-expo-2019/utreexo/
Utreexo paper https://eprint.iacr.org/2019/611.pdf
https://github.com/mit-dci/utreexo
https://twitter.com/kanzure/status/1136560700187447297
Introduction You still download everything; instead of writing to your UTXO database, you modify your accumulator. You accept a proof that it&amp;rsquo;s in the UTXO accumulator, you put it in there yourself, you just don&amp;rsquo;t remember it anymore. The end result is that you store less than a kilobyte instead of 4 GB or so. But the downside is that you need all these proofs.</description></item><item><title>Code Review</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-05-code-review/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-05-code-review/</guid><description>Code review survey and complaints
https://twitter.com/kanzure/status/1136261311359324162
Introduction I wanted to talk about the code review process for Bitcoin Core. I have done no code reviews, but following along the project for the past year I&amp;rsquo;ve heard that this is a pain point for the project and I think most developers would love to see it improved. I&amp;rsquo;d like to help out in some way to help infuse some energy to help with code reviews.</description></item><item><title>Wallet Architecture</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-05-wallet-architecture/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2019-06-05-wallet-architecture/</guid><description>Bitcoin Core wallet architecture + descriptors
https://twitter.com/kanzure/status/1136282460675878915
writeup: https://github.com/bitcoin/bitcoin/issues/16165
Wallet architecture discussion There are three main areas here. One is IsMine: how do I determine a particular output is affecting my wallet? What about asking for a new address, where is it coming from? That&amp;rsquo;s not just get new address, it&amp;rsquo;s get raw change address, it&amp;rsquo;s also change being created in fundrawtransaction. The third issue is wallet signing. Storage is not an entrypoint, it&amp;rsquo;s just a way of implementing these things.</description></item><item><title>Signmessage</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-10-signmessage/</link><pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-10-signmessage/</guid><description>https://twitter.com/kanzure/status/1049834659306061829
signmessage kallewoof and others
I am trying to make a new signmessage to do other things. Just use the signature system inside bitcoin to sign a message. Sign a message that someone wants. You can use proof-of-funds or whatever.
You could just have a signature and it&amp;rsquo;s a signature inside of a package and it&amp;rsquo;s small and easy. Another option is to have a .. that is invalid somehow. You do a transaction with some input, where the txid is the message hash or something.</description></item><item><title>Bitcoin Optech</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-09-bitcoin-optech/</link><pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-09-bitcoin-optech/</guid><description>https://twitter.com/kanzure/status/1049527415767101440
Bitcoin Optech https://bitcoinops.org/
Bitcoin Optech is trying to encourage bitcoin businesses to adopt better scaling techniques and technologies, things like batching, segwit, down the line maybe Schnorr signatures, aggregatable signatures, maybe lightning. Right now we&amp;rsquo;re focusing on things that businesses could be doing right now. Exchanges could be batching, and some aren&amp;rsquo;t. We&amp;rsquo;re talking to those companies and listening to their concerns and what they&amp;rsquo;re doing, and just trying to nudge them in the right direction.</description></item><item><title>Wallet Stuff</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-09-wallet-stuff/</link><pubDate>Tue, 09 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-09-wallet-stuff/</guid><description>https://twitter.com/kanzure/status/1049526667079643136
Wallet stuff Maybe we can have the wallet PRs have a different review process so that there can be some specialization, even if the wallet is not ready to be split out. In the future, if the wallet was a separate project or repository, then that would be better. We need to be able to subdivide the work better than we already do, and the wallet is a good place to start doing it.</description></item><item><title>Efficient P2P Transaction Relay</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-08-efficient-p2p-transaction-relay/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-08-efficient-p2p-transaction-relay/</guid><description>p2p transaction relay protocol improvements with set reconciliation gleb
I don&amp;rsquo;t know if I need to motivate this problem. I presented a work in progress session at Scaling. The cost of relaying transactions or announcing a transaction in a network&amp;ndash; how many announcements do you have? Every link has an announcement in either direction right now, and then there&amp;rsquo;s the number of nodes multiplied by the number of connections per node.</description></item><item><title>Script Descriptors</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-08-script-descriptors/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-08-script-descriptors/</guid><description>https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md
I would like to talk about script descriptors. There&amp;rsquo;s a number of projects we&amp;rsquo;re working on and they are all kind of related. I&amp;rsquo;d like to clarify how things fit together.
Note: there is an earlier transcript that has not been published (needs review) about script descriptors.
Agenda History of script descriptors and how we came to this. What&amp;rsquo;s currently in Bitcoin Core v0.17 Wallet integration DESCRIPT About script descriptors The problem that I wanted to tackle was that currently in Bitcoin Core wallet we have a blob of public keys and private keys and HD chains and scripts and a bunch of other metadata and keypools.</description></item><item><title>Utxo Accumulators And Utreexo</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-08-utxo-accumulators-and-utreexo/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-10-08-utxo-accumulators-and-utreexo/</guid><description>UTXO accumulators, UTXO commitments, and utreexo
https://twitter.com/kanzure/status/1049112390413897728
If people saw Benedikt&amp;rsquo;s talk, two days ago, it&amp;rsquo;s related. It&amp;rsquo;s a different construction but same goal. The basic idea is, and I think Cory kind of started to talk about this a few months ago on the mailing list&amp;hellip; instead of storing all UTXOs in leveldb, store the hash of each UTXO, and then it&amp;rsquo;s half the size, and then you could almost create it from the hash of the input, it&amp;rsquo;s like 10 bytes more.</description></item><item><title>Priorities</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-07-priorities/</link><pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-07-priorities/</guid><description>https://twitter.com/kanzure/status/972863994489901056
Priorities We&amp;rsquo;re going to wait until BlueMatt is here. Nobody knows what his priorities are. He says he might be in around noon.
There&amp;rsquo;s an ex-Google product director interested in helping with Bitcoin Core. He was asking about how to get involved. I told him to get involved by just diving in. He will be spending some time at Chaincode at the end of March. We&amp;rsquo;ll get a sense for what his skills are.</description></item><item><title>Merkleized Abstract Syntax Trees - MAST</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-merkleized-abstract-syntax-trees-mast/</guid><description>https://twitter.com/kanzure/status/972120890279432192
See also http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/
MAST stuff You could directly merkleize scripts if you switch from IF, IFNOT, ELSE with IFJUMP that has the number of bytes.
With graftroot and taproot, you never to do any scripts (which were a hack to get things started). But we&amp;rsquo;re doing validation and computation.
You take every single path it has; so instead, it becomes &amp;hellip; certain condition, or certain not conditions&amp;hellip; You take every possible ifs, you use this, you say it&amp;rsquo;s one of these, then you specify which one, and you show it and everyone else can validate this.</description></item><item><title>Taproot, Graftroot, Etc</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-taproot-graftroot-etc/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-06-taproot-graftroot-etc/</guid><description>https://twitter.com/kanzure/status/972468121046061056
graftroot The idea of graftroot is that in every contract there is a superset of people that can spend the money. This assumption is not always true but it&amp;rsquo;s almost always true. Say you want to lock up these coins for a year, without any conditionals to it, then it doesn&amp;rsquo;t work. But assume you have&amp;ndash; pubkey recovery? No&amp;hellip; pubkey recovery is inherently incompatible with any form of aggregation, and aggregation is far superior.</description></item><item><title>Bellare Neven</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-05-bellare-neven/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-05-bellare-neven/</guid><description>See also http://diyhpl.us/wiki/transcripts/bitcoin-core-dev-tech/2017-09-06-signature-aggregation/
Bellare-Neven It&amp;rsquo;s been published, it&amp;rsquo;s been around for a decade, and it&amp;rsquo;s widely cited. In Bellare-Neven, it&amp;rsquo;s itself, it&amp;rsquo;s a multi-signature scheme which means multiple pubkeys and one message. You should treat the individual authorizations to spend inputs, as individual messages. What we need is an interactive aggregate signature scheme. Bellare-Neven&amp;rsquo;s paper suggests a trivial way of building an aggregate signature scheme out of a multisig scheme where interactively everyone signs everyone&amp;rsquo;s message.</description></item><item><title>Cross Curve Atomic Swaps</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-05-cross-curve-atomic-swaps/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2018-03-05-cross-curve-atomic-swaps/</guid><description>https://twitter.com/kanzure/status/971827042223345664
Draft of an upcoming scriptless scripts paper. This was at the beginning of 2017. But now an entire year has gone by.
post-schnorr lightning transactions https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/001031.html
An adaptor signature.. if you have different generators, then the two secrets to reveal, you just give someone both of them, plus a proof of a discrete log, and then you say learn the secret to one that gets the reveal to be the same.</description></item><item><title>Merkleized Abstract Syntax Trees</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/</link><pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09-07-merkleized-abstract-syntax-trees/</guid><description>﻿https://twitter.com/kanzure/status/907075529534328832
Merkleized abstract syntax trees (MAST) https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/014932.html
I am going to talk about the scheme I posted to the mailing list yesterday which is to implement MAST (merkleized abstract syntax trees) in bitcoin in a minimally invasive way as possible. It&amp;rsquo;s broken into two major consensus features that together gives us MAST. I&amp;rsquo;ll start with the last BIP.
This is tail-call evaluation. Can we generalize P2SH to give us more general capabilities, than just a single redeem script.</description></item><item><title>Signature Aggregation</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09-06-signature-aggregation/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09-06-signature-aggregation/</guid><description>﻿https://twitter.com/kanzure/status/907065194463072258
Signature aggregation Sipa, can you sign and verify ECDSA signatures by hand? No. Over GF(43), maybe. Inverses could take a little bit to compute. Over GF(2).
I think the first thing we should talk about is some definitions. I&amp;rsquo;d like to start by distinguishing between three things: Key aggregation, signature aggregation, and batch validation. Multi-signature later.
There are three different problems. Key aggregation is where there are a number of people with each their own key, they want to produce a combined key that can only sign when they come together.</description></item><item><title>Meeting Notes</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09-05-meeting-notes/</link><pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/2017-09-05-meeting-notes/</guid><description>coredev.tech september 2017
https://twitter.com/kanzure/status/907233490919464960
((As always, any errors are most likely my own. etc.))
# Introduction There is significant concern regarding whether BlueMatt has become a misnomer.
Monday night presentation: https://btctranscripts.com/sf-bitcoin-meetup/2017-09-04-jonas-schnelli-bip150-bip151/
I think we should continue to use #bitcoin-core-dev for anything about changing Bitcoin Core and try to keep things open even though we&amp;rsquo;re together here today and tomorrow and the next.
# Wallets and block pruning and rescans Nobody produces P2SH change when they have a native output.</description></item><item><title>Bitcoin Law For Developers</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/james-gatto-marco-santori-bitcoin-law-for-developers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/james-gatto-marco-santori-bitcoin-law-for-developers/</guid><description>We are going to be taking a 15 minute coffee break after our next two speakers. I want to introduce you to James Gatto and Marco Santori with Pilsbury. They will be spending some time talking about Bitcoin law. They have a room this afternoon and they are offering to talk with you one on one. So Marco and James.
You missed the introduction. Was it any good? (laughter)
We are here to talk about legal issues.</description></item><item><title>Circle</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/jeremy-allaire-circle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/jeremy-allaire-circle/</guid><description>We are excited to be here and sponsoring this event. We have backgrounds in working on developer tools that goes back to the early days of something.
How do we mature the development of Bitcoin Core itself? One of the things that is useful is suss out the key components of it. In a standard you have a spec, it could be a whitepaper, and then you have a reference implementation, and then a test suite that enforces interoperability.</description></item><item><title>Gavinandresen</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/gavinandresen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/gavinandresen/</guid><description>http://blog.circle.com/2015/02/10/devcore-livestream/
The instant transaction time.. you know I walk up to a cash register, I put my phone there, and in a second or two the transaction is confirmed and I walk away with my coffee. Anything beyond that, 10 minutes versus 1 minute doesn&amp;rsquo;t matter. So the problem you want to solve is how do we get instant confirmation.. there&amp;rsquo;s a bunch of ideas about this, like a trusted third party that promises to not double spend, have some coins locked up in a multisig wallet like Green Address.</description></item><item><title>Research And Development Goals</title><link>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/research-and-development-goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-core-dev-tech/bitcoin-devcore-2015/research-and-development-goals/</guid><description>R&amp;amp;D Goals &amp;amp; Challenges
We often see people saying they are testing the waters, they fixed a typo, they made a tiny little fix that doesn&amp;rsquo;t impact much, they are getting used to the process. They are finding that it&amp;rsquo;s really easy to contribut to Bitcoin Core. You code your changes, you submit your changes, there&amp;rsquo;s not much to it.
There&amp;rsquo;s a difference, and the lines are fuzzy and undefined, and you cna make a change to Core that changes a spelling error or a change to policy or consensus rules, for those high-level things, for ecosystem-level things, there&amp;rsquo;s several mailing lists, the dev list gets the most traffic.</description></item></channel></rss>
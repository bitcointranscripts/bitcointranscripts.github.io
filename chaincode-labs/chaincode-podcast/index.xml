<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chaincode Podcast on ₿itcoin Transcripts</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/</link><description>Recent content in Chaincode Podcast on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 09 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/chaincode-labs/chaincode-podcast/index.xml" rel="self" type="application/rss+xml"/><item><title>Privacy and robustness in Lightning</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/privacy-and-robustness-in-lightning/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/privacy-and-robustness-in-lightning/</guid><description>Speaker 0: 00:00:00
Simplicity is a virtue in itself, right? So you can try to increase fairness. If you reduce simplicity, you end up actually often stepping backwards. So I really, the thing that really appeals about element symmetry is it&amp;rsquo;s simple. And every scheme to fix things by introducing more fairness and try to reintroduce penalties and everything else ends up destroying the simplicity.
Speaker 1: 00:00:27
So soon again.</description></item><item><title>Lightning updates / Stratum V2</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/lightning-updates-stratum-v2/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/lightning-updates-stratum-v2/</guid><description>Speaker 0: 00:00:00
Hey Jonas.
Speaker 1: 00:00:00
Hey Merch. What are we up to? We are back.
Speaker 0: 00:00:03
Who are we recording today? We have Steve Lee in the office this week. He is the head at Spiral. Yeah. He&amp;rsquo;s done a lot of open source development. He talks to a bunch of people. He&amp;rsquo;s also the PM for the LDK team. So we&amp;rsquo;re going to talk Lightning, the challenges that are open with Lightning, and maybe a little bit about other projects in the space.</description></item><item><title>Address Relay</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/address-relay/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/address-relay/</guid><description>Martin Zumsande joins us to tell us about the address spam in the summer of 2021 and his interests in AddrRelay and Bitcoin Core development.</description></item><item><title>Block Building</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/block-building/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/block-building/</guid><description>Postdoc Researcher Clara joins Murch to discuss their block building research. They cover their proposal, which outlines suggested improvements to the current Bitcoin Core block building algorithm using candidate sets</description></item><item><title>Lightning Development Kit</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2021-05-12-matt-corallo-ldk/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2021-05-12-matt-corallo-ldk/</guid><description>Matt Corallo presentation at Advancing Bitcoin 2019: https://btctranscripts.com/advancing-bitcoin/2019/2019-02-07-matt-corallo-rust-lightning/
rust-lightning repo: https://github.com/rust-bitcoin/rust-lightning
Intro Adam Jonas (AJ): Welcome back to the office Matt, glad to have you back on the podcast.
Matt Corallo (MC): Thank you.
Update on LDK AJ: We are going to start with LDK. Where are we at? What is going on?
MC: If listeners are aware LDK kind of grew out of a project that I started a few years ago when I was working at Chaincode called rust-lightning.</description></item><item><title>Modularizing the Bitcoin Consensus Engine</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/modularizing-the-bitcoin-consensus-engine/</link><pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/modularizing-the-bitcoin-consensus-engine/</guid><description>AJ: Do you want to talk about isolating the consensus engine?
CD: Sure. More recently I have dove into the codebase a little bit more. That started with looking at Matt’s async ProcessNewBlock work and playing around with that. Learning from that how do you make a change to the core engine of Bitcoin Core.
Matt Corallo’s PR on async ProcessNewBlock https://github.com/bitcoin/bitcoin/pull/16175
AJ: Can you talk about that PR a little bit and what it would do?</description></item><item><title>Reproducible Builds</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-11-30-carl-dong-reproducible-builds/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-11-30-carl-dong-reproducible-builds/</guid><description>Carl Dong’s presentation at Breaking Bitcoin 2019 on “Bitcoin Build System Security”: https://diyhpl.us/wiki/transcripts/breaking-bitcoin/2019/bitcoin-build-system/
Intro Adam Jonas (AJ): Welcome to the Chaincode podcast Carl.
Carl Dong (CD): Hello.
AJ: You know we’ve been doing this podcast for a while now. How come you haven’t been on the show yet?
CD: We’ve been at home.
AJ: We did a few episodes before that though.
Murch (M): It is fine. We’ve got you now.</description></item><item><title>Enterprise Wallets/UTXO Management</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-11-09-enterprise-walletsutxo-management/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-11-09-enterprise-walletsutxo-management/</guid><description>Mark Erhardt: 00:00:00
Just to throw out a few numbers there, non-SegWit inputs cost almost 300 bytes, and native SegWit inputs cost slightly more than 100 bytes. There&amp;rsquo;s almost a reduction by two-thirds in fees if you switch from non-SegWit to native SegWit.
Introduction Caralie Chrisco: 00:00:29
Hi, everyone, welcome to the Chaincode podcast. My name is Caralie.
Adam Jonas: 00:00:32
And it&amp;rsquo;s Jonas.
Caralie Chrisco: 00:00:33
And we&amp;rsquo;re back!</description></item><item><title>Payment Points</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/payment-points/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/payment-points/</guid><description>Nadav Kohen: 00:00:00
Right now in the Lightning Network, if I were to make a payment every single hop along that route, they would know that they&amp;rsquo;re on the same route, because every single HTLC uses the same hash. It&amp;rsquo;s a bad privacy leak. It&amp;rsquo;s actually a much worse privacy leak now that we have multi-path payments, because every single path along your multi-path payment uses the same hash as well.</description></item><item><title>Compact Blocks and Fibre</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-03-12-matt-corallo-compact-blocks-fibre/</link><pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-03-12-matt-corallo-compact-blocks-fibre/</guid><description>Intro Adam Jonas (AJ): Welcome Matt
Matt Corallo (MC): Hi
John Newbery (JN): Hi Matt
AJ: Today we are going to do a little bit of a “This is your life Bitcoin”.
MC: I am not dead yet.
AJ: You have a lot of contributions over the years so there is lots to talk about but we’ll start with three. Let’s start with compact blocks. Tell us a little bit about what compact blocks are and then we can dive a little bit deeper.</description></item><item><title>Chaincode Decoded: UTXOs</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/utxos-chaincode-decoded/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/utxos-chaincode-decoded/</guid><description>Introduction John Newbery: 00:00:00
If we go back in time to version 0.1, all that was stored was the blockchain and I think a marker saying whether that coin was spent or not. I mean that&amp;rsquo;s okay for your first version but it doesn&amp;rsquo;t really scale and it&amp;rsquo;s bad performance because every time you want to access a coin you need to read it from disk.
Adam Jonas: 00:00:28
Welcome back to the Chaincode Podcast.</description></item><item><title>AssumeUTXO</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/assumeutxo/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/assumeutxo/</guid><description>Next in the studio, we caught James O&amp;rsquo;Beirne, who until recently was a co-worker of ours at Chaincode. We talked to James about his experience at the Chaincode residency, his most recent project AssumeUTXO and how he champions and effects change in Bitcoin Core.</description></item><item><title>CHECKTEMPLATEVERIFY (CTV)</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-02-11-jeremy-rubin-ctv/</link><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-02-11-jeremy-rubin-ctv/</guid><description>CTV BIP review workshop transcript: https://diyhpl.us/wiki/transcripts/ctv-bip-review-workshop/
Intro Jonas: Welcome to the podcast Jeremy.
Jeremy: Thanks for having me on.
Jonas: I think to start us off tell us a bit about your background, how you got into Bitcoin and we&amp;rsquo;ll take it from there.
Jeremy: I first heard about Bitcoin in 2011. I was interning at MIT during high school and I was doing what interns do which is read Hacker News.</description></item><item><title>Pieter Wuille (part 1 of 2)</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-01-28-pieter-wuille-part1/</link><pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-01-28-pieter-wuille-part1/</guid><description>Part 2: https://www.youtube.com/watch?v=Q2lXSRcacAo
Jonas: Welcome to the podcast
John: Hi Pieter
Pieter: Hello John and Jonas
John: Thank you for being the first guest on our podcast.
Jonas: So far the most important guest we’ve had.
Pieter: That’s an amazing honor. Thank you so much for having me.
John: We’re here to talk about Bitcoin and Bitcoin Core development. We have Pieter Wuille as our guest who is a Bitcoin Core contributor of many years standing.</description></item><item><title>Pieter Wuille (part 2 of 2)</title><link>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-01-28-pieter-wuille-part2/</link><pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/chaincode-labs/chaincode-podcast/2020-01-28-pieter-wuille-part2/</guid><description>Jonas: We are gonna pick up where we left off in episode 1 with a discussion of lessons learned from the 0.8 consensus failure. We then go on to cover libsecp and Pieter&amp;rsquo;s thoughts about Bitcoin in 2020. We hope you enjoy this as much as we did.
John: Ok I have a bunch of questions from that. One is what are the lessons from that?
Pieter: One of the things I think learned from that is specifying what your consensus rules is really hard.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitcoin Research Week 2024 on ₿itcoin Transcripts</title><link>https://btctranscripts.com/bitcoin-research-week-2024/</link><description>Recent content in Bitcoin Research Week 2024 on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 21 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://btctranscripts.com/bitcoin-research-week-2024/index.xml" rel="self" type="application/rss+xml"/><item><title>IBD, Utreexo, UTXO Commitments</title><link>https://btctranscripts.com/bitcoin-research-week-2024/ibd-utreexo-utxo-commitments/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/ibd-utreexo-utxo-commitments/</guid><description>IBD libbitcoin approach to IBD General idea: maximize parallelism Transaction table, input table, output table Remove force ordering (caused by UTXO model) Perform checks whenever a matching input/output pair has arrived Aggressive on P2P (&amp;gt;100 connections) Adding a new block to the tip is slower as a result Does not work well in a low-memory environment Alternative thoughts Pre-assumevalid: could we do the same? Is it focusing on the wrong thing?</description></item><item><title>Linear Programming Approach</title><link>https://btctranscripts.com/bitcoin-research-week-2024/linear-programming-approach/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/linear-programming-approach/</guid><description>We consider the following linear programming formulation for transaction selection:
Variables and Objective Let $f_i$ represent the fee rate of transaction $i$ and $s_i$ represent its size.
Define decision variables $x_i$, where $x_i = 1$ if transaction $i$ is selected, and $x_i = 0$ otherwise.
The objective is to maximize the total fee rate:
$$ \text{Maximize: } \sum f_i x_i $$
Constraints Size Constraint: The sum of the sizes of selected transactions must equal the block size (normalized to 1 for simplicity): $$ \sum s_i x_i = 1 $$</description></item><item><title>LN Simulation Workshop</title><link>https://btctranscripts.com/bitcoin-research-week-2024/ln-simulation-workshop/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/ln-simulation-workshop/</guid><description>Tools and Frameworks Warnet SimLN Scaling Lightning Polar Good for teaching because of the GUI Goals What&amp;rsquo;s best for research/writing papers Pressing issue: padding Payment Channel Networks (PCN) Are there any frameworks for PCN besides LN?
Sprites (?) - Patrick McCory paper Master smart contract Doesn&amp;rsquo;t have the increasing time lock issue that LN does WARNET Helm, k8s: Launches a p2p network of core nodes with LN nodes attached Hundreds of nodes Imports “neighborhood” of the mainnet LN graph Potential use case: more than one LN node per BTC node Or Electrum or Neutrino Documentation is OK, can also be a service Internet connection adjustments at the network level: Netem Most realistic simulation includes traffic patterns, geolocation, latency, etc.</description></item><item><title>Modeling Lightning for Simulation</title><link>https://btctranscripts.com/bitcoin-research-week-2024/modeling-lightning-for-simulation/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/modeling-lightning-for-simulation/</guid><description>How can we achieve the most realistic simulations? Ad-hoc Simulations for Individuals: How can we develop a framework that better suits everyone&amp;rsquo;s needs? Each paper uses its own simulations. It would be better to have a unified solution that is broadly applicable.
The research papers differ significantly in what they measure, leading to the use of custom simulations (e.g., pathfinding, routing, and other models). While different use cases might justify this variation, we still need a unified strategy.</description></item><item><title>Shielded CSV Deep Dive</title><link>https://btctranscripts.com/bitcoin-research-week-2024/shielded-csv-deep-dive/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/shielded-csv-deep-dive/</guid><description>CSV is a way to build a new Layer 1 blockchain
L1 is defined as a transaction protocol, separate from defining consensus/ordering L1 - Bitcoin Tx Verification / CSV
L0.5 - Blockchain PoW
Recipe Sender prepares a tx
Sender derives a nullifier from the tx. Used to nullify the tx inputs that have been spent in the tx.
Put nullifier onchain to prevent double-spending. The nullifier is short (64 B) regardless of how big the tx is.</description></item><item><title>Soft Fork Proposals Analysis</title><link>https://btctranscripts.com/bitcoin-research-week-2024/soft-fork-proposals-analysis/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/soft-fork-proposals-analysis/</guid><description>Taproot Benefits Cost/risks Larger anonsets Easier/cheaper jpegs Cost effectiveness Raised script limits - yet unknown possibilities Fixed sighash Temporary splitting of anonymity set due to new address type Schnorr - batch validation, PTLC/Musig/FROST More complexity Less bandwidth for signers Quantum risk Raised script limits -&amp;gt; more capable scripts General soft fork risks CTV Benefits Cost/risks Reduced interactivity in some shared UTXO protocols e.g. Ark General soft fork risks Timeout trees Congestion control CAT Benefits Cost/risks Trustless bridging to sidesystems: Scaling, Privacy, More expressivity (safer/easier languages than Script) General soft fork risks Non-equivocation contracts Bigger txs could lead to harder knapsack problem -&amp;gt; miner centralization?</description></item><item><title>Undercutting Attacks in Bitcoin</title><link>https://btctranscripts.com/bitcoin-research-week-2024/undercutting-attacks-in-bitcoin/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/undercutting-attacks-in-bitcoin/</guid><description>In Bitcoin, miners earn from block subsidies and fees. Why is it worrisome when the Bitcoin subsidy is zero?
There is an attack possible: undercutting attacks. There is a strong social convention not to undercut, and also the miner subsidy needs to extend the change.
If the costs of mining are high, you start seeing bad behavior. The Princeton paper, defines a game in which you can choose the number of miners using a possession distribution.</description></item><item><title>What is the process to arrive to rough consensus about a soft fork proposal</title><link>https://btctranscripts.com/bitcoin-research-week-2024/rough-consensus/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/rough-consensus/</guid><description>Definition of rough consensus How do we define the group to have rough consensus on? For instance, a sub-group could have rough consensus on a proposal just because the largest group of experts isn’t interested in participating. Both groups may have a very different perception of the consensus.
The stakeholders defined in a recently published document could be a good starting point.
Different groups don’t talk much to each other, so it’d be hard to get rough consensus across all those groups.</description></item><item><title>Attacks on Lightning</title><link>https://btctranscripts.com/bitcoin-research-week-2024/attacks-on-lightning/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/attacks-on-lightning/</guid><description>Three Categories of Attacks: Loss of Funds Privacy Quality of Service Brainstorming of Existing Attacks Jamming
Slow Proposed solution: Reputation. Fast: Send a large number of HTLCs in a short time. Proposed solution: Fees. Mitigation has been proposed but not implemented. DoS Attacks
Implementations may not be well-prepared. Not HTTP-based, so common tooling (e.g., Cloudflare) is not applicable. Route Hijacking
Probing / Balance Discovery
Purpose: Track individual payments. Becomes harder with increased traffic and noise on the network.</description></item><item><title>List of Upgrades and Feasibility</title><link>https://btctranscripts.com/bitcoin-research-week-2024/list-of-upgrades-and-feasibility/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/list-of-upgrades-and-feasibility/</guid><description>Is Activation part of this discussion?
Yes, activation is part of feasibility.
List upgrades on Sticky Notes
Categories Consensus cleanup Total script replacement/alternative Covenant proposals (discussion of what lnhance is) Various amounts of script restoration UTXO commitments stuff (block commitments (maybe lagging - muhash)) Streaming hash Cross-input signature aggregation OP_ZKP Quantum resistance UTXOs
Two options: support inclusion proofs or just verify the UTXO set.
Is UTXO commitment worth it without inclusion proofs?</description></item><item><title>Mempool Optimization</title><link>https://btctranscripts.com/bitcoin-research-week-2024/mempool-optimization/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/mempool-optimization/</guid><description>Problem description Bitcoin today uses some mempool algorithms that date back to about a decade ago. These algorithms use heuristics which compute the descendent set with the lowest fee rate. The existing algorithms don&amp;rsquo;t address multiple children paying for a parent, or one child paying for multiple parents adequately.
It is desirable to design new algorithms that yield a total ordering of transactions. In particular, the first to mine is the last to remove, depending on the space constraints of the mempool.</description></item><item><title>PSBT v3</title><link>https://btctranscripts.com/bitcoin-research-week-2024/psbt-v3/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/psbt-v3/</guid><description>Things (tx construction) that need interaction: SP Musig / FROST Payjoin / Cut Through CISA Splicing / LN / Liquid Ads Atomic Swaps Coinjoins DLCs CT / Bulletproofs Presigned RBF BIP322 WIF / Descriptors Covenants BIP 370 Modifiability Link to BIP370
Modifiable is very specific, not future-proof. Need more bits? Roles: Need more roles? PSBT Overview Unchained Split Custody: Frustration with PSBT&amp;rsquo;s generality—no clear action plan. It&amp;rsquo;s a vague framework. Don&amp;rsquo;t want to make it more generic because it would become harder to use.</description></item><item><title>Silent Payments and Payjoin</title><link>https://btctranscripts.com/bitcoin-research-week-2024/silent-payments-and-payjoin/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/silent-payments-and-payjoin/</guid><description>Why combine Silent Payments and Payjoin? Silent Payments (SP) are non-interactive, while Payjoin (PJ) is interactive. Both aim to improve privacy. SP is stateless, which means no synchronization or complicated state management. One SP wallet can be used for multiple protocols, allowing the receiver to use one wallet and multiple addresses without increasing scan cost (unlike xpub and the gap limit problem). How can SP help PJ? Ensure SP works with PJ/ CJ (CoinJoin).</description></item><item><title>ZK on Bitcoin</title><link>https://btctranscripts.com/bitcoin-research-week-2024/zk-on-bitcoin/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/zk-on-bitcoin/</guid><description>Crash Course Satoshi: &amp;ldquo;If a solution was found [to do ZK with Bitcoin], a much better implementation of Bitcoin would be possible.&amp;rdquo; What&amp;rsquo;s Possible On-chain: 12 bytes per transaction in some systems. Off-chain: Any L2 protocol like ARK, coinpools, channel factories. Privacy: ZCash CISA, ring signatures, shielded CSV (64 bytes on-chain transactions). Developer Freedom: No more soft forks—just use ZK verification to build anything (e.g., L2s, vaults, streaming payments, subscriptions). Key Question ZK vs ZK-SNARKS (we’ll get there).</description></item><item><title>Are We Too Late for Privacy?</title><link>https://btctranscripts.com/bitcoin-research-week-2024/are-we-too-late-for-privacy/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/are-we-too-late-for-privacy/</guid><description>Discussion Points Is speculating on market behavior in scope? Would it matter if people adopt privacy tools regardless, or would people avoid privacy regardless?
Wants to work on privacy tools that achieve PMF (Product-Market Fit) and substantially move the needle. Wants to know if there’s a use for ZK (Zero-Knowledge proofs) in privacy on Bitcoin. Doesn’t think it’s too late. Suggests coming up with a list of privacy improvements. We’ve seen plenty of ideas in other systems; also concerns (e.</description></item><item><title>Lightning Routing Privacy</title><link>https://btctranscripts.com/bitcoin-research-week-2024/lightning-routing-privacy/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/lightning-routing-privacy/</guid><description>Different privacy topics HTLC/MPP correlation Balance Discovery Intra-LSP payment Network level attacks Async Payment privacy Client Fingerprinting Top 3 list Balance Discovery Some mitigation by payment splitting More traffic, more noise? How precise can BDA even be? Network level attacks AS-level attacks Constant size packets Constant bitrate On-path attacks Route randomization PTLC Intra-LSP payment Unclear how to solve Maybe something something Tumblebit? Maybe route randomization/longer routes + PTLCs?</description></item><item><title>Long-Term Mining Incentives</title><link>https://btctranscripts.com/bitcoin-research-week-2024/long-term-mining-incentives/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/long-term-mining-incentives/</guid><description>Brainstorming (Sticky Notes): Large holders free-riding security No more mempool APIs only All fees are out of band Mining wars between nation-states Constant reorgs Forks (not consensus change) Race to the bottom between miners sending each other long to validate blocks No more hashrate SPV mining Fail to converge “Gap games” + coin hopping Chain halts: miners know they will get reorged out, give up mining Collapse of the galactic economy Use all the world’s energy Quantum computers may make hashrate not linear with power Not gonna consider bugs such as timewarp or extreme validation times.</description></item><item><title>P2P Attacks</title><link>https://btctranscripts.com/bitcoin-research-week-2024/p2p-attacks/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/p2p-attacks/</guid><description>Avoidable Attack in May 2023: Ordinals Specifics of the attack aren&amp;rsquo;t as important. Issue is that a simple DOS was possible in the wild and it wansn&amp;rsquo;t noticed before it happened.
Context: Ordinals/Runes/etc. Impact: Nodes became unresponsive, maxing CPU (DOS-like behavior). Cause: A sorted list used as a queue to send transactions to the network. Queue became huge, creating a feedback loop where sorting couldn’t keep up and the queue never cleared.</description></item><item><title>Scaling and Functionality Improvements for L1</title><link>https://btctranscripts.com/bitcoin-research-week-2024/scaling-and-functionality-improvements-for-l1/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/scaling-and-functionality-improvements-for-l1/</guid><description>What would it take to get everyone in the world using Bitcoin? Can’t fit every payment on-chain, so need something else:
Lightning Network, shared UTXOs, sidechains. Q: Are we talking about payments or other functionality?
Mostly payments. Layer 2 vs. Sidechain:
Layer 2 vs. Layer 1: Layer 2 attempts scalability improvements by introducing data availability attacks. In Ethereum: not exactly. Rollups store data on L1. State diffs vs. storing all transactions: Rollup definition: don’t execute on-chain, store what is needed to enable another operator to take over, and include a mechanism for validating on-chain (optimistic or zk).</description></item><item><title>Security Assumptions and Post-Quantum</title><link>https://btctranscripts.com/bitcoin-research-week-2024/security-assumptions-and-post-quantum/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://btctranscripts.com/bitcoin-research-week-2024/security-assumptions-and-post-quantum/</guid><description>Bitcoin security is based on SHA256 and the discrete log assumption:
GPG keys are used to sign hashes of Bitcoin Core or commits. There was an alert key. Some offchain protocols use OMDL (a stronger assumption). Correctness proofs:
Correct, but there are losses in proofs. You shouldn&amp;rsquo;t use Schnorr on secp256k1 if you only trust the ROM. If a system only has a proof: There&amp;rsquo;s an alternative model. 0 testing assumption: Assume your hash function receives a polynomial and doesn’t output a root of the polynomial.</description></item></channel></rss>